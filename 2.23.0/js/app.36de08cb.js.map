{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../packages/src/locale/lang/zh-CN.js","webpack:///./src/comp/locale/index.js","webpack:///./src/comp/mixins/i18n-mixins.js","webpack:///./src/comp/app.vue?df1d","webpack:///./src/utils/cookies.js","webpack:///./src/comp/mixins/theme-switch-mixins.js","webpack:///./src/comp/directives/clickoutside.js","webpack:///./src/plugins/http-request.js","webpack:///./src/service/index.js","webpack:///src/comp/app.vue","webpack:///./src/comp/app.vue?cc82","webpack:///./src/comp/app.vue","webpack:///./src/router/router.config.js","webpack:///./src/router/index.js","webpack:///./src/comp/demo-block.vue?2d9a","webpack:///./src/comp/online-edit/code-sand-box/index.jsx","webpack:///src/comp/demo-block.vue","webpack:///./src/comp/demo-block.vue?c434","webpack:///./src/comp/demo-block.vue","webpack:///./src/comp/anchor.vue?89e9","webpack:///src/comp/anchor.vue","webpack:///./src/comp/anchor.vue?7efd","webpack:///./src/comp/anchor.vue","webpack:///../packages/ve-locale/index.js","webpack:///../packages/src/locale/index.js","webpack:///../packages/src/utils/index.js","webpack:///../packages/ve-checkbox/src/util/constant.js","webpack:///../packages/ve-checkbox/src/util/index.js","webpack:///../packages/ve-checkbox/src/index.jsx","webpack:///../packages/ve-checkbox/index.js","webpack:///../packages/ve-checkbox-group/src/util/constant.js","webpack:///../packages/ve-checkbox-group/src/index.jsx","webpack:///../packages/ve-checkbox-group/index.js","webpack:///../packages/ve-contextmenu/src/util/constant.js","webpack:///../packages/ve-contextmenu/src/util/index.js","webpack:///../packages/src/utils/constant.js","webpack:///../packages/ve-icon/src/util/constant.js","webpack:///../packages/ve-icon/src/index.jsx","webpack:///../packages/ve-icon/index.js","webpack:///../packages/src/utils/dom.js","webpack:///../packages/src/utils/random.js","webpack:///../packages/src/directives/events-outside.js","webpack:///../packages/ve-contextmenu/src/index.jsx","webpack:///../packages/ve-contextmenu/index.js","webpack:///../packages/src/directives/clickoutside.js","webpack:///../packages/ve-radio/src/util/constant.js","webpack:///../packages/ve-radio/src/util/index.js","webpack:///../packages/ve-radio/src/index.jsx","webpack:///../packages/ve-radio/index.js","webpack:///../packages/ve-dropdown/src/util/constant.js","webpack:///../packages/ve-dropdown/src/util/index.js","webpack:///../packages/ve-dropdown/src/index.jsx","webpack:///../packages/ve-dropdown/index.js","webpack:///../packages/ve-loading/src/util/constant.js","webpack:///../packages/ve-loading/src/util/index.js","webpack:///../packages/ve-loading/src/plane.jsx","webpack:///../packages/ve-loading/src/bounce.jsx","webpack:///../packages/ve-loading/src/wave.jsx","webpack:///../packages/ve-loading/src/pulse.jsx","webpack:///../packages/ve-loading/src/flow.jsx","webpack:///../packages/ve-loading/src/grid.jsx","webpack:///../packages/ve-loading/src/loading.jsx","webpack:///../packages/ve-loading/src/index.js","webpack:///../packages/ve-loading/index.js","webpack:///../packages/ve-pagination/src/util/constant.js","webpack:///../packages/ve-pagination/src/util/index.js","webpack:///../packages/ve-pagination/src/pager.jsx","webpack:///../packages/ve-select/src/util/constant.js","webpack:///../packages/ve-select/src/util/index.js","webpack:///../packages/ve-select/src/index.jsx","webpack:///../packages/ve-select/index.js","webpack:///../packages/ve-pagination/src/index.jsx","webpack:///../packages/ve-pagination/index.js","webpack:///../packages/ve-table/src/util/constant.js","webpack:///../packages/ve-table/src/util/index.js","webpack:///../packages/ve-table/src/util/clipboard.js","webpack:///../packages/src/utils/animation-frame.js","webpack:///../packages/src/utils/scroll-bar.js","webpack:///../packages/src/utils/request-animation-timeout.js","webpack:///../packages/src/utils/event-key-codes.js","webpack:///../packages/src/utils/hooks-manager.js","webpack:///../packages/src/utils/mouse-event.js","webpack:///../packages/src/mixins/emitter.js","webpack:///../packages/ve-table/src/colgroup/index.jsx","webpack:///../packages/ve-table/src/header/header-checkbox-content.jsx","webpack:///../packages/ve-table/src/header/header-filter-content.jsx","webpack:///../packages/ve-table/src/header/header-filter-custom-content.jsx","webpack:///../packages/ve-table/src/header/header-th.jsx","webpack:///../packages/src/utils/resize-event.js","webpack:///../packages/src/comps/resize-observer/src/index.jsx","webpack:///../packages/src/comps/resize-observer/index.js","webpack:///../packages/ve-table/src/header/header-tr.jsx","webpack:///../packages/ve-table/src/header/index.jsx","webpack:///../packages/ve-table/src/body/body-checkbox-content.jsx","webpack:///../packages/ve-table/src/body/body-radio-content.jsx","webpack:///../packages/ve-table/src/body/expand-tr-icon.jsx","webpack:///../packages/ve-table/src/body/body-td.jsx","webpack:///../packages/ve-table/src/body/body-tr.jsx","webpack:///../packages/ve-table/src/body/body-tr-scrolling.jsx","webpack:///../packages/ve-table/src/body/expand-tr.jsx","webpack:///../packages/ve-table/src/body/index.jsx","webpack:///../packages/ve-table/src/footer/footer-td.jsx","webpack:///../packages/ve-table/src/footer/footer-tr.jsx","webpack:///../packages/ve-table/src/footer/index.jsx","webpack:///../packages/ve-table/src/editor/constant.js","webpack:///../packages/src/directives/focus.js","webpack:///../packages/src/utils/auto-resize.js","webpack:///../packages/ve-table/src/editor/index.jsx","webpack:///../packages/ve-table/src/selection/constant.js","webpack:///../packages/ve-table/src/selection/index.jsx","webpack:///../packages/ve-table/src/column-resizer/index.jsx","webpack:///../packages/ve-table/src/index.jsx","webpack:///../packages/ve-table/index.js","webpack:///../packages/index.js","webpack:///./src/main.js","webpack:///./src/utils/constant.js","webpack:///./src/router/locale/zh.router.config.js","webpack:///./src/router/locale/en.router.config.js","webpack:///./src/router/locale/index.js","webpack:///./src/comp/anchor.vue?3f32","webpack:///../packages/src/locale/lang/en-US.js","webpack:///./src/comp/demo-block.vue?6615","webpack:///./src/utils/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","pagination","goto","page","itemsPerPage","total","prev5","next5","table","confirmFilter","resetFilter","cut","copy","insertRowAbove","insertRowBelow","removeRow","emptyRow","emptyColumn","emptyCell","leftFixedColumnTo","cancelLeftFixedColumnTo","rightFixedColumnTo","cancelRightFixedColumnTo","zh","menus","path","isRouter","docTheme","switchDocThemeOptions","label","anchorCatalogTitle","compLang","zhCN","eidtDemoTitle","eidtDemoUrlPrefix","demo","description","expandCode","foldCode","openInCodepen","openInCodeSandBox","completeDemo","demo1","selection","dataRowsOption","dataRows","columnFixed","loading","expand","radio","checkbox","demo2","en","enUS","computed","currentDocLang","this","$route","split","DOC_LANG","EN","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","staticStyle","_v","_l","currentLocal","item","class","activeMenuClass","attrs","on","$event","gotoRouter","_s","showLangDropdown","active","stopPropagation","langChange","showThemeDropdown","currentDocTheme","themeChange","showVersionDropdown","currentDocVersion","versionChange","_m","meta","_e","keepAlive","staticRenderFns","setDocTheme","Cookies","set","DOC_THEME_COOKIE","getDocTheme","styleLinkId","themeSwitcherTool","ThemeSwitcherTool","themeList","themeName","themePath","useStorage","storageKey","methods","switchThemeMix","switcher","catch","mounted","el","binding","vNode","msg","compName","context","handler","contains","__clickOutSide__","addEventListener","unbind","removeEventListener","service","axios","interceptors","use","response","getVersions","net","location","isDev","process","url","protocol","hostname","port","Date","getTime","httpRequest","method","res","component","emptyLayout","docLayout","hide","redirect","children","routers","Vue","VueRouter","linkActiveClass","routes","routerConfig","hover","hovering","visibilityChange","_t","$slots","demoLangInfo","ref","fixedControl","style","width","getDemoBlockControlWidth","isExpanded","iconClass","controlText","onlineExample","version","html","props","btnName","String","required","exampleTpl","exampleScript","default","exampleStyle","getMainjsContent","getExampleContent","getbabelContent","getCodesanboxPrefillConfig","codesandboxPackage","title","main","dependencies","vue","mockjs","scripts","serve","build","lint","browserslist","codesanboxPrefillConfig","files","content","render","compress","string","LZString","compressToBase64","replace","fromProps","$refs","submit","JSON","stringify","id","goAnchor","eidt","defineReactive","util","proto","$veTableMessages","cloneDeep","lang","defaultLang","getMessage","update","merge","createI18N","messages","locale","args","isFunction","createLocale","isEmptyArray","arr","Array","isArray","isEmptyValue","isDefined","val","isBoolean","isNumber","getValByUnit","getParentCompByName","parent","$parent","$options","getChildCompsByName","childrens","$children","forEach","child","scrollTo","option","top","left","scrollTop","scrollLeft","PREFIX_CLS","EMIT_EVENTS","ON_CHECKED_CHANGE","COMPS_NAME","VE_CHECKBOX","VE_CHECKBOX_GROUP","clsName","cls","Number","Boolean","disabled","indeterminate","isControlled","isSelected","model","checkboxGroup","checkboxClass","internalIsSelected","checkboxStyle","display","isVerticalShow","watch","updateModelBySingle","checkboxChange","isChecked","checked","$emit","isCheckBoxGroup","updateModel","getLabelContent","initModel","indexOf","updateModelByGroup","checkBoxGroup","created","VeCheckbox","newVal","checkedVal","index","VeCheckboxGroup","VE_CONTEXTMENU","ON_NODE_CLICK","INIT_DATA","PARENT_DEEP","CONTEXTMENU_NODE_TYPES","SEPARATOR","INSTANCE_METHODS","HIDE_CONTEXTMENU","KEY_CODES","BACK_SPACE","TAB","ENTER","SHIFT","SPACE","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","DELETE","F2","ICON_NAMES","FILTER","DOUBLE_RIGHT_ARROW","DOUBLE_LEFT_ARROW","TOP_ARROW","RIGHT_ARROW","BOTTOM_ARROW","LEFT_ARROW","SORT_TOP_ARROW","SORT_BOTTOM_ARROW","SEARCH","MOUSE_EVENT_CLICK_TYPE","LEFT_MOUSE","MIDDLE_MOUSE","RIGHT_MOUSE","VE_ICON","color","size","iconStyle","values","includes","VeIcon","trim","addClass","curClass","className","classes","classList","add","hasClass","removeClass","remove","getViewportOffset","triggerEl","doc","documentElement","box","getBoundingClientRect","pageXOffset","clientLeft","pageYOffset","clientTop","offsetLeft","offsetTop","right","clientWidth","bottom","clientHeight","height","right2","bottom2","getViewportOffsetWithinContainer","containerEl","tElOffsetTop","tElOffsetLeft","tElLef","tElTop","tElRight","tElBottom","tElRight2","tElBottom2","cElOffsetTop","cElOffsetLeft","cElLef","cElTop","cElRight","cElBottom","cElRight2","cElBottom2","getMousePosition","x","y","body","pageYoffset","clientX","clientY","getCaretPosition","rootDocument","selectionStart","focus","createRange","re","createTextRange","rc","duplicate","moveToBookmark","getBookmark","setEndPoint","text","setCaretPosition","element","pos","endPos","setSelectionRange","elementParent","parentDisplayValue","getRandomId","now","toString","Math","random","substr","events","callback","__eventsOutside__","eventName","eventsOutside","options","eventTarget","HTMLElement","internalOptions","panelOptions","eventTargetEl","rootContextmenuId","isChildrenPanelsClicked","isPanelRightDirection","isPanelsEmptyed","activeMenuIds","map","parentId","removeOrEmptyPanels","getRandomIdWithPrefix","createInternalOptions","createPanelOptions","resetContextmenu","addRootContextmenuPanelToBody","immediate","registerContextmenuEvent","hasChildren","getPanelOptionByMenuId","menuId","panelOption","getParentContextmenuPanelEl","contextmenuPanelId","panelIndex","findIndex","parentPanelId","querySelector","createPanelByHover","menu","deletePanelDeeps","filter","parentDeep","deep","reverse","delIndex","currentMenu","$nextTick","addContextmenuPanelToBody","contextmenuId","showContextmenuPanel","createInternalOptionsRecursion","showRootContextmenuPanel","preventDefault","isRootContextmenu","contextmenuPanelEl","innerHTML","position","currentPanelWidth","currentPanelHeight","clickLeft","clickTop","clickRight","clickBottom","panelX","panelY","parentContextmenuPanelEl","parentPanelLeft","parentPanelRight","parentPanelWidth","emptyContextmenuPanels","isRemove","removeContextmenuEvent","debounceCreatePanelByHover","debounce","destroyed","contextmenuProps","contextmenuPanelProps","click","contextmenu","contextmenuNodeProps","mouseover","VeContextmenu","ON_RADIO_CHANGE","VE_RADIO","radioClass","checkedChange","VeRadio","FILTER_RESET","FILTER_CONFIRM","VISIBLE_CHANGE","ITEM_SELECT_CHANGE","VE_DROPDOWN","clickoutside","isSelect","showOperation","maxWidth","maxHeight","isMultiple","textAlign","isInput","confirmFilterText","resetFilterText","hideByItemClick","showRadio","visible","isCustomContent","defaultInstance","popperAppendTo","beforeVisibleChange","Function","internalVisible","inputValue","isDropdownShowTriggerClicked","rootId","dropdownItemsPanelId","popperAppendToEl","appendToElTagName","isDropdownVisible","getMaxWidth","Infinity","selectedLabels","selected","operationFilterClass","dropdownItemsClass","init","showDropDown","hideDropDown","assign","setInputValue","confirm","reset","some","nextVisible","allowChange","beforeVisibleChangeCallback","rootEl","changDropdownPanelPosition","removeOrEmptyRootPanel","$el","triggerElHeight","isAppendToBody","triggerElLeft","triggerElTop","triggerElRight","triggerElBottom","labels","join","dropdownPanelClick","dropdownShowToggle","singleSelectOptionClick","getTextAlignClass","dropdownClickOutside","checkedChangeControl","addRootElementToElement","tagName","targetEl","checkboxProps","showLine","radioProps","dropdownProps","dropdownItemsProps","VeDropdown","VE_LOADING","VE_LOADING_PLANE","VE_LOADING_BOUNCE","VE_LOADING_WAVE","VE_LOADING_PULSE","VE_LOADING_FLOW","VE_LOADING_GRID","VE_LOADING_FOLD","SPIN_NAMES","PLANE","GRID","WAVE","FLOW","BOUNCE","PULSE","spinStyle","itemStyle","components","Plane","Bounce","Wave","Pulse","Flow","Grid","loadingClass","fullscreen","loadingStyle","overlayBackgroundColor","spinProps","tip","defaultOptions","lock","parent__","PARENT_RELATIVE_CLASS","PARENT_LOCK_CLASS","LoadingConstructor","extend","VeLoading","createInstance","checkSpinName","Loading","loadingInstance","show","nextTick","close","destroy","$destroy","install","$veLoading","LOCALE_COMP_NAME","PAGE_NUMBER_CHANGE","PAGE_SIZE_CHANGE","VE_PAGINATION","pageCount","pageIndex","pagingCount","numOffset","floor","showJumpPrev","showJumpNext","pagingCounts","startNum","jumpPage","number","SELECT_CHANGE","VE_SELECT","placeholder","validator","dropdownVisible","showSelectInfo","dropdownChange","input","VeSelect","Total","Prev","prevPage","newPageIndex","Pager","Next","nextPage","Sizer","newPageSizeOption","handleChange","items","find","pageSizeChangeHandler","Jumper","jumperEnter","keyCode","getValidNum","jumpPageHandler","layout","pageSize","pageSizeOption","parseInt","newPageSize","ceil","temp","isNaN","goBackPageIndex","goBackPageSize","template","comps","prev","pager","next","sizer","jumper","VePagination","COLUMN_TYPES","EXPAND","CHECKBOX","RADIO","COLUMN_FIXED_TYPE","LEFT","RIGHT","EXPAND_TRIGGER_TYPES","ICON","CELL","ROW","CELL_SELECTION_DIRECTION","UP","DOWN","AUTOFILLING_DIRECTION","CURRENT_CELL_SELECTION_TYPES","SINGLE","RANGE","BODY_CELL_WIDTH_CHANGE","HEADER_ROW_HEIGHT_CHANGE","FOOTER_ROW_HEIGHT_CHANGE","BODY_ROW_HEIGHT_CHANGE","BODY_ROW_CLICK","BODY_CELL_CLICK","BODY_CELL_MOUSEOVER","BODY_CELL_MOUSEDOWN","BODY_CELL_MOUSEMOVE","BODY_CELL_MOUSEUP","BODY_CELL_DOUBLE_CLICK","BODY_CELL_CONTEXTMENU","EXPAND_ROW_CHANGE","CHECKBOX_SELECTED_ROW_CHANGE","CHECKBOX_SELECTED_ALL_CHANGE","CHECKBOX_SELECTED_ALL_INFO","RADIO_SELECTED_ROW_CHANGE","SORT_CHANGE","CELL_SELECTION_KEY_CHANGE","CELL_SELECTION_RANGE_DATA_CHANGE","HEADER_FILTER_CONFIRM","HEADER_FILTER_RESET","HEADER_CELL_CLICK","HEADER_CELL_CONTEXTMENU","HEADER_CELL_MOUSEDOWN","HEADER_CELL_MOUSEOVER","HEADER_CELL_MOUSEMOVE","HEADER_CELL_MOUSELEAVE","HIGHLIGHT_ROW_CHANGE","EDIT_INPUT_CLICK","EDIT_INPUT_BLUR","EDIT_INPUT_VALUE_CHANGE","EDIT_INPUT_COPY","EDIT_INPUT_PASTE","EDIT_INPUT_CUT","SELECTION_CORNER_MOUSEDOWN","SELECTION_CORNER_MOUSEUP","AUTOFILLING_DIRECTION_CHANGE","HOOKS_NAME","TABLE_CONTAINER_SCROLL","TABLE_CONTAINER_MOUSEUP","TABLE_SIZE_CHANGE","TABLE_CELL_WIDTH_CHANGE","CLIPBOARD_CELL_VALUE_CHANGE","VE_TABLE","VE_TABLE_THADER","VE_TABLE_THADER_TR","VE_TABLE_THADER_Th","VE_TABLE_HEADER_CHECKBOX_CONTENT","VE_TABLE_HEADER_FILTER_CONTENT","VE_TABLE_HEADER_FILTER_CUSTOM_CONTENT","VE_TABLE_BODY","VE_TABLE_BODY_TR","VE_TABLE_BODY_TR_SCROLLING","VE_TABLE_BODY_CHECKBOX_CONTENT","VE_TABLE_BODY_RADIO_CONTENT","VE_TABLE_BODY_TD","VE_TABLE_COLGROUP","VE_TABLE_FOOTER","VE_TABLE_EXPAND_TR","VE_TABLE_EXPAND_TR_ICON","VE_TABLE_EDIT_INPUT","VE_TABLE_SELECTION","VE_TABLE_COLUMN_RESISZER","COMPS_CUSTOM_ATTRS","BODY_ROW_KEY","BODY_COLUMN_KEY","SCROLL_TO","SCROLL_TO_ROW_KEY","SCROLL_TO_COL_KEY","START_EDITING_CELL","STOP_EDITING_CELL","SET_HIGHLIGHT_ROW","SET_CELL_SELECTION","SET_RANGE_CELL_SELECTION","GET_RANGE_CELL_SELECTION","SET_ALL_CELL_SELECTION","HIDE_COLUMNS_BY_KEYS","SHOW_COLUMNS_BY_KEYS","CONTEXTMENU_TYPES","HEADER_CONTEXTMENU","BODY_CONTEXTMENU","CUT","COPY","INSERT_ROW_ABOVE","INSERT_ROW_BELOW","REMOVE_ROW","EMPTY_ROW","EMPTY_COLUMN","EMPTY_CELL","LEFT_FIXED_COLUMN_TO","CANCEL_LEFT_FIXED_COLUMN_TO","RIGHT_FIXED_COLUMN_TO","CANCEL_RIGHT_FIXED_COLUMN_TO","getRowKey","rowData","rowKeyFieldName","getColumnByColkey","colKey","colgroups","isLastColumnByColKey","isOperationColumn","firstCol","operationColumn","isLastRowByRowKey","rowKey","allRowKeys","getDomResizeObserverCompKey","originalKey","columnsOptionResetTime","recursiveRemoveColumnByKey","columns","getFixedTotalWidthByColumnKey","fixed","currentIndex","reduce","currentVal","_realTimeWidth","getNotFixedTotalWidthByColumnKey","getTotalWidthByColKeys","colKeys","initGroupColumns","cloneColumns","groupColumns","maxLevel","setColumnLevel","column","_level","setColspanAndRowspanAndKeys","keys","colspan","_colspan","_keys","endsWith","_rowspan","setColgroupsAndGroupColumns","groupColumn","colgroup","isGroupHeader","getHeaderContextmenuOptionCollection","REMOVE_COLUMN","HIDE_COLUMN","getBodyContextmenuOptionCollection","setHeaderContextmenuOptions","contextmenuHeaderOption","cellSelectionRangeData","headerIndicatorColKeys","enableHeaderContextmenu","selectionRangeKeys","getSelectionRangeKeys","selectionRangeIndexes","getSelectionRangeIndexes","isOperationCol","colCount","endColIndex","startColIndex","contextmenus","beforeShow","isWholeColSelection","startColKey","leftFixedColKeys","getColKeysByFixedType","fixedType","isExcludeOperationColumn","rightFixedColKeys","headerContextmenuOptionCollection","contentmenuCollectionItem","isContinue","setBodyContextmenuOptions","enableBodyContextmenu","contextmenuBodyOption","bodyIndicatorRowKeys","rowCount","endRowIndex","startRowIndex","isWholeRowSelection","startRowKey","bodyContextmenuOptionCollection","createEmptyRowData","field","isContextmenuPanelClicked","contextmenuPanelEls","querySelectorAll","getColKeysByHeaderColumn","headerColumnItem","getColKeysByRangeColKeys","colKey1","colKey2","index1","index2","beginIndex","endIndex","getColKeysByFixedTypeWithinColKeys","condition","getRowKeysByRangeRowKeys","topRowKey","bottomRowKey","isCellInSelectionRange","cellData","leftColKey","rightColKey","rowKeys","isClearSelectionByBodyCellRightClick","mouseEventClickType","cellSelectionData","normalEndCell","rowIndex","endColKey","endRowKey","getSelectionRangeData","resultType","tableData","fieldNames","newRow","fieldName","isExistGivenFixedColKey","isExistNotFixedColKey","getLeftmostOrRightmostColKey","mostObj","colIndex","warn","getLeftmostColKey","getRightmostColKey","getPreviewColKey","currentColKey","getNextColKey","cellAutofill","isReplaceData","direction","nextCurrentCell","nextNormalEndCell","cellSelectionTableData","sourceSelectionRangeIndexes","targetSelectionRangeIndexes","cellSelectionTableDataRowIndex","cellSelectionTableDataColIndex","sourceSelectionData","targetSelectionData","sourceFieldNames","newData","targetFieldNames","setColumnFixed","enableColumnResize","fixedColIndex","colItem","oldFixedType","_colItem","_columnResizeWidth","cancelColumnFixed","win","regUniversalNewLine","regNextCellNoQuotes","regNextEmptyCell","decodeSpreadsheetStr","str","lastLength","row","match","nextCell","startsWith","quoteNo","isStillCell","nextChar","fill","matchedText","encodeToSpreadsheetStr","rLen","cLen","onBeforeCopy","selectionRangeData","onAfterCopy","spreadsheetStr","clipboardData","setData","onBeforePaste","pastedData","getData","decodePasteData","min","cellIndex","onAfterPaste","beforePasteResponse","pasteData","onBeforeCut","onAfterCut","onBeforeDelete","onAfterDelete","getScrollbarWidth","outer","visibility","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","start","isInputKeyCode","altKey","ctrlKey","shiftKey","Hooks","hooks","hookName","isRepeat","arguments","hook","getMouseEventClickType","button","which","broadcast","componentName","params","concat","dispatch","$root","mixins","emitter","checkboxOption","isIndeterminate","selectedChange","setSelectedAllInfo","$on","isSelectedParam","filterList","filterConfirm","filterReset","getIcon","h","filterIcon","compProps","filterCustom","defaultVisible","visibleChange","getCustomContent","slot","showFn","closeFn","groupColumnItem","headerRows","fixedHeader","sortOption","sortColumns","cellStyleOption","eventCustomOption","isLastLeftFixedColumn","leftFixedColumns","isfirstRightFixedColumn","isLastCloumn","lastColumnKey","getTheadThClass","startColKeyIndex","isIndicatorActive","indicatorColKeys","showIndicator","every","headerCellClass","customClass","getTheadThStyle","align","totalWidth","columnIndex","rowHeight","getCheckboxContent","hideSelectAll","sortChange","sortResult","sortAlways","currentField","sortBy","getSortContent","getFilterContent","filterProps","getFilterCustomContent","cellClick","fn","cellDblclick","cellContextmenu","cellMouseenter","cellMouseleave","cellMousemove","cellMouseover","cellMousedown","cellMouseup","renderHeaderCell","renderResult","customEvents","headerCellEvents","dblclick","mouseenter","mouseleave","mousemove","mousedown","mouseup","thProps","rowspan","resizeHandler","entries","entry","listeners","__resizeListeners__","contentRect","addResizeListener","__ro__","ResizeObserver","observe","removeResizeListener","disconnect","resizeListener","VueDomResizeObserver","trHeightChange","rowClick","rowDblclick","rowContextmenu","rowMouseenter","rowMouseleave","rowMousemove","rowMouseover","rowMousedown","rowMouseup","headerRowEvents","trProps","nativeOn","headerClass","initSortColumns","multipleSort","internalCheckboxSelectedRowKeys","disableSelectedRowKeys","isControlledProp","selectedRowKeys","initSelected","radioOption","internalRadioSelectedRowKey","expandOption","expandedRowkeys","expandRowIconContainerClass","columnCollection","isExpandRow","cellSpanOption","editOption","rawCellValue","currentColumnCollectionItem","currentRowKey","bodyTdStyle","bodyTdClass","bodyCellClass","currentCell","startRowKeyIndex","indicatorRowKeys","getEllipsisContentStyle","ellipsis","lineClamp","_lineClamp","getRenderContent","renderBodyCell","showTitle","isShowTitle","getRadioContent","getCellSpan","bodyCellSpan","eventTargetName","nodeName","trigger","expandIconProps","bodyCellEvents","tdProps","expandRowChange","isVirtualScroll","highlightRowKey","trClass","isHighlight","getTdContent","bodyRowEvents","tableViewportWidth","expandColumn","columnCount","isRowExpanded","defaultExpandAllRows","expanRowClass","hasLeftFixedColumn","expandTdContentStyle","getExpandRowContent","actualRenderTableData","hasFixedColumn","virtualScrollOption","showVirtualScrollingPlaceholder","cellSelectionOption","colsWidths","Map","internalExpandRowkeys","virtualScrollPreviewRenderedRowKeys","virtualScrollRepeatRenderedRowKeys","col","columnCollectionItem","isControlledExpand","expandedRowKeys","disableCheckboxSelectedRowKeys","rowkey","disableCheckboxUnselectedRowKeys","isCheckboxSelectedAll","isCheckboxIndeterminate","isControlledRadio","initInternalExpandRowKeys","initInternalCheckboxSelectedRowKeys","resetInternalCheckboxSelectedRowKeys","sendToCheckboxAll","initInternalRadioSelectedRowKey","rightFixedColumns","beforeExpandRowChange","beforeExpandRowResult","beforeExpandedRowKeys","rowKeyIndex","afterExpandRowChange","afterExpandedRowKeys","expandable","tdSizeChange","defaultExpandedRowKeys","getExpandRowComp","expandTrProps","selectedRowKey","defaultSelectedRowKey","defaultSelectedAllRows","defaultSelectedRowKeys","checkboxSelectedRowChange","selectedRowChange","internalCheckboxSelectedRowKeysTemp","checkboxSelectedAllChange","selectedAllChange","allSelectedKeys","radioSelectedRowChange","getTrKey","renderingRowKeys","previewRenderedRowKeys","dealKeydownEvent","measureTdProps","padding","border","trPropsScrolling","footerRows","fixedFooter","getBodyTdClass","footerCellClass","getBodyTdStyle","renderFooterCell","footerCellSpan","footerCellEvents","footerRowEvents","footerData","footerClass","TEXTAREA_ADD_NEW_LINE","TEXTAREA_SELECT","vnode","select","autoResize","defaults","minHeight","minWidth","paddingWidth","createTextNode","span","unObserve","resize","newChar","scrollHeight","test","textContent","fontSize","getComputedStyle","fontFamily","whiteSpace","overflowY","delayedResize","extendDefaults","config","firstChild","el_","doObserve","currentStyle","defaultView","parentRendered","inputStartValue","editingCell","isCellEditing","hasXScrollBar","hasYScrollBar","hasRightFixedColumn","scrollBarWidth","textareaInputRef","displayTextarea","overflowViewport","textareaRect","tableEl","cellEl","isEditCellFocus","currentColumn","containerClass","containerStyle","opacity","textareaClass","setTableEl","addHook","setCellEl","debounceSetCellEl","setTextareaPosition","debounceSetTextareaPosition","showTextarea","hideTextarea","setRawCellValue","previousElementSibling","tableLeft","tableTop","tableRight","tableBottom","cellLeft","cellTop","cellHeight","cellWidth","cellRight","cellBottom","rightFixedTotalWidth","textareaUnObserve","textareaValueChange","textareaInputEl","caretPosition","newValue","containerProps","textareaProps","domProps","tabindex","paste","CLEAR_CURRENT_CELL_RECT","CLEAR_NORMAL_END_CELL_RECT","HTMLTableElement","cellAutofillOption","isAutofillStarting","currentCellSelectionType","virtualScrollVisibleIndexs","currentCellEl","normalEndCellEl","autoFillEndCellEl","cellSelectionRect","currentCellRect","normalEndCellRect","autoFillEndCellRect","selectionBordersVisibility","end","showCorner","directionX","directionY","cornerCellInfo","isLastColumn","isLastRow","isFirstSelectionRow","isFirstSelectionCol","isFirstNotFixedSelectionCol","setCellEls","debounceSetCellEls","resetCellPositions","debounceResetCellPositions","setCurrentCellEl","setSelectionPositions","setCellSelectionRangeData","setNormalEndCellEl","clearAutofillEndCellRect","setAutofillEndCellEl","leftmostColKey","getCellPosition","getCellPositionByColKey","isFirstRow","getTableFirstRowCellByColKey","getTableLastRowCellByColKey","isCurrentCellOverflow","isNormalEndCellOverflow","rect","mackUpColKey","mackUpRowIndex","mackUpRect","mackUpRectParams","getSelectionCurrent","selectionCurrent","autoFillArea","borders","borderWidth","borderHeight","topBorder","rightBorder","bottomBorder","leftBorder","corner","getSelectionAutofillArea","areaPostions","totalColKeys","fixedColKeys","getBorders","getSelectionAreas","normalArea","normalAreaLayer","getAreaLayer","rightmostColKey","autofillingDirection","rangeColKey1","rangeColKey2","autoFillEndCell","isRender","fixedColsTotalWidth","cornerTop","cornerLeft","cornerBorderRightWidth","cornerBorderBottomtWidth","cornerProps","getTableCellEl","fixedLeftSelectionCurrent","fixedLeftSelectionArea","fixedLeftAutoFillArea","middleSelectionCurrent","middleSelectionArea","middleAutoFillArea","fixedRightSelectionCurrent","fixedRightSelectionArea","fixedRightAutoFillArea","tableContainerEl","HTMLDivElement","isColumnResizerHover","isColumnResizing","setIsColumnResizerHover","setIsColumnResizing","setColumnWidth","columnWidthResizeOption","columnResizerStartX","currentResizingColumn","columnResizerHandlerWidth","columnResizerRect","columnMinWidth","disableResizing","initColumnResizerPosition","tableContainerLeft","tableContainerTop","cellRect","setColumnResizerPositionByDrag","columnResizerHandlerMousedown","columnResizerMouseup","onselectstart","ondragstart","differWidth","abs","nextColumnWidth","sizeChange","columnWidth","clearColumnResizerStatus","columnResizerHandlerProps","columnResizerLineProps","showHeader","scrollWidth","borderAround","borderX","borderY","rowStyleOption","columnHiddenOption","clipboardOption","tableRootRef","tableContainerWrapperRef","tableContainerRef","tableRef","tableBodyRef","tableContentWrapperRef","virtualPhantomRef","editInputRef","cellSelectionRef","contextmenuRef","hiddenColumns","virtualScrollVisibleData","defaultVirtualScrollBufferScale","defaultVirtualScrollMinRowHeight","defaultPlaceholderPerScrollingRowCount","virtualScrollStartIndex","previewVirtualScrollStartIndex","virtualScrollEndIndex","disablePointerEventsTimeoutId","isLeftScrolling","isRightScrolling","isVerticalScrolling","previewTableContainerScrollLeft","endColKeyIndex","endRowKeyIndex","isHeaderCellMousedown","isBodyCellMousedown","isBodyOperationColumnMousedown","tableOffestHeight","tableHeight","editorInputStartValue","enableStopEditing","contextmenuEventTarget","contextmenuOptions","virtualScrollBufferCount","virtualScrollVisibleCount","bufferScale","realBufferScale","minRowHeight","tableContainerWrapperStyle","tableContainerStyle","tableContainerHeight","getScrollBarWidth","tableStyle","tableClass","tableContainerClass","enableCellSelection","tableBodyClass","hoverHighlight","clickHighlight","stripe","enable","hasEditColumn","edit","contextMenuType","enableClipboard","headerTotalHeight","footerTotalHeight","oldVal","initVirtualScrollPositions","initVirtualScroll","clearCellSelectionCurrentCell","initColumns","initColumnWidthByColumnResize","initScrolling","initHeaderRows","initFooterRows","setTableContentTopValue","setCellSelectionByAutofill","clearCellSelectionAutofillEndCell","setCurrentCellSelectionType","setRangeCellSelectionByHeaderIndicator","setRangeCellSelectionByBodyIndicator","headerRowHeightChange","footRowHeightChange","bodyCellWidthChange","colWidths","triggerHook","setScrollBarStatus","updateColgroupsBySortChange","columnDefaultWidth","defaultHiddenColumnKeys","showOrHideColumns","cellSelectionCurrentCellChange","cellSelectionNormalEndCellChange","cellSelectionAutofillCellChange","clearCellSelectionNormalEndCell","headerIndicatorColKeysChange","clearHeaderIndicatorColKeys","bodyIndicatorRowKeysChange","clearBodyIndicatorRowKeys","currentCellData","normalEndCellData","cellAutofillParams","beforeAutofill","afterAutofill","autofillResponse","cellSelectionRangeDataChange","autofillingDirectionChange","selectCellByDirection","editInputEditor","textareaAddNewLine","defaultValue","deleteCellSelectionRangeValue","nextColumn","columnToVisible","nextRowKey","rowToVisible","leftTotalWidth","rightTotalWidth","diff","scrollRight","containerClientHeight","containerScrollTop","nextRowEl","trOffsetTop","trClientHeight","parentOffsetTop","setVirtualScrollVisibleData","startIndex","aboveCount","getVirtualScrollAboveCount","belowCount","getVirtualScrollBelowCount","getVirtualViewPhantom","virtualScrollPositions","bodyRowHeightChange","oldHeight","dValue","k","setVirtualPhantomHeight","setVirtualScrollStartOffset","totalHeight","startOffset","ele","getVirtualScrollStartIndex","virtualScrollBinarySearch","list","tempIndex","midIndex","midValue","tableContainerVirtualScrollHandler","visibleCount","visibleStartIndex","visibleEndIndex","visibleAboveCount","visibleBelowCount","bodyElement","scrolling","debounceScrollEnded","scrollingResetTimeInterval","debounceScrollEndedCallback","setScrolling","previewScrollLeft","tableClickOutside","saveCellWhenStopEditing","cellValueChange","beforeCellValueChange","afterCellValueChange","currentRow","changeValue","clearEditingCell","cellSelectionByClick","isScrollToRow","bodyCellContextmenu","editCellByClick","isDblclick","setContextmenuOptions","bodyCellDoubleClick","bodyCellClick","bodyCellMousedown","newStartRowKey","newEndRowKey","currentRowIndex","isClearByRightClick","bodyCellMouseover","bodyCellMousemove","bodyCellMouseup","headerCellClick","headerCellContextmenu","headerCellMousedown","currentCellStartColKey","currentCellEndColKey","clearCurrentCellRect","clearNormalEndCellRect","newStartColKey","newEndColKey","currentCellStartColIndex","currentCellEndColIndex","headerCellMouseover","headerCellMousemove","headerCellMouseleave","headerMouseleave","tableContainerMouseup","cellSelectionCornerMousedown","cellSelectionCornerMouseup","isEditColumn","setEditingCell","updateEditingCellValue","contextmenuItemClick","headerContextmenuItemClick","bodyContextmenuItemClick","afterMenuClick","textareaSelect","execCommand","editorCopy","beforeCopyCallback","beforeCopy","afterCopyCallback","afterCopy","allowCoping","editorPaste","beforePasteCallback","beforePaste","afterPasteCallback","afterPaste","allowPasting","editorCut","beforeCutCallback","beforeCut","afterCutCallback","afterCut","allowCuting","delete2","delete","beforeDeleteCallback","beforeDelete","afterDeleteCallback","afterDelete","allowDeleting","isScrollToStartCell","from","Set","behavior","rowEl","debouncedBodyCellWidthChange","headerProps","cursor","bodyProps","footerProps","tableRootProps","tableContainerWrapperProps","tableContainerProps","scroll","previewStartIndex","differ","tableWrapperProps","tableProps","selectionProps","editInputProps","columnResizerProps","VeTable","VeLocale","Component","$veLocale","DemoBlock","Anchor","VueLazyContainer","env","require","router","beforeEach","to","NProgress","done","afterEach","blocks","hljs","highlightBlock","APP","ZH","stripScript","stripStyle","stripTemplate","goTobyAnchorId","$router","query","anchor","finally"],"mappings":"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","file":"js/app.36de08cb.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0093648a\":\"360af76b\",\"chunk-01d97210\":\"202235ab\",\"chunk-0e9db98e\":\"4137fa80\",\"chunk-259a7156\":\"2f7eb926\",\"chunk-2d0afd9c\":\"68128bfc\",\"chunk-2d0b16cf\":\"9bfe57ff\",\"chunk-2d0b6d05\":\"affa1839\",\"chunk-2d0bd9b8\":\"90edfff0\",\"chunk-2d0c1598\":\"f2427fb8\",\"chunk-2d0c4dda\":\"6d0e475b\",\"chunk-2d0c77bc\":\"caecbe06\",\"chunk-2d0cb734\":\"7f3308b7\",\"chunk-2d0cf4a8\":\"8624d027\",\"chunk-2d0d0901\":\"6608a002\",\"chunk-2d0d621b\":\"8b64a207\",\"chunk-2d0d7692\":\"f5aa50bf\",\"chunk-2d0daee1\":\"a86d9d31\",\"chunk-2d0ddb56\":\"52f8c180\",\"chunk-2d0de6c6\":\"e99ec50e\",\"chunk-2d0e6170\":\"45f05c3d\",\"chunk-6f5e28a4\":\"e7be9e72\",\"chunk-2d0e6c57\":\"c1be9eb7\",\"chunk-2d0e8fd4\":\"01d9f388\",\"chunk-2d0e943c\":\"c204c402\",\"chunk-2d0e9b80\":\"68140db7\",\"chunk-2d20efb8\":\"1c1a0863\",\"chunk-2d21064d\":\"32f9e069\",\"chunk-2d21645e\":\"a95b7039\",\"chunk-2d2174ea\":\"f0acd80c\",\"chunk-2d217c5e\":\"bbd1b34e\",\"chunk-2d217cc9\":\"cbc241ed\",\"chunk-2d21b23f\":\"0b2271da\",\"chunk-2d21b346\":\"c59c6b01\",\"chunk-2d21d817\":\"236fef86\",\"chunk-2d21f0a9\":\"796ef7cc\",\"chunk-2d21f28c\":\"29d55b6f\",\"chunk-2d224c89\":\"b953de96\",\"chunk-2d2266fb\":\"41f600cb\",\"chunk-2d228897\":\"01824abd\",\"chunk-2d230df7\":\"6b268c20\",\"chunk-2d23723d\":\"485dc5ac\",\"chunk-2d238264\":\"acd280ff\",\"chunk-2d238466\":\"a98746d8\",\"chunk-3f32e4d6\":\"ee48ddcb\",\"chunk-4288c12e\":\"eb85a76b\",\"chunk-034aaaac\":\"1a9f4e6e\",\"chunk-134340fb\":\"4083f4ce\",\"chunk-18aff0e4\":\"4cac7ccd\",\"chunk-211aab0f\":\"db6e3cc6\",\"chunk-2d0be333\":\"83d90ea8\",\"chunk-0b01f334\":\"e5caedc0\",\"chunk-3e9c837a\":\"8da635ac\",\"chunk-2da0da34\":\"93f22053\",\"chunk-33c9e563\":\"20cadf60\",\"chunk-36f46100\":\"e9c42e28\",\"chunk-46800696\":\"772e93e2\",\"chunk-4b123a8c\":\"1fcdc2f2\",\"chunk-4d23d1d2\":\"defb70c1\",\"chunk-57467bc8\":\"8b2f2851\",\"chunk-57dbc9a0\":\"0682126b\",\"chunk-295cf444\":\"a3294b63\",\"chunk-5941f196\":\"4cb0ca6c\",\"chunk-5fd9674c\":\"e2a27472\",\"chunk-67e8c551\":\"32a1ff22\",\"chunk-7d447681\":\"6cf2bc3e\",\"chunk-8a2253b6\":\"c05cdedc\",\"chunk-ffa18aee\":\"dbf7e56e\",\"chunk-4b7e6b14\":\"7fd27f81\",\"chunk-4f7e7566\":\"d170a3b1\",\"chunk-51109c8c\":\"e403e968\",\"chunk-57783a4c\":\"5f5a235d\",\"chunk-5835afd4\":\"c501a774\",\"chunk-591a9950\":\"befbd7ca\",\"chunk-5c0a0447\":\"f2dcd773\",\"chunk-6c40dc59\":\"285fbfd5\",\"chunk-7cb624d9\":\"02a86f5f\",\"chunk-067565b0\":\"06d2aff5\",\"chunk-0ea8a1ff\":\"c63c63f9\",\"chunk-197c0064\":\"c649e998\",\"chunk-1bb7c056\":\"e4f94c3b\",\"chunk-3988a222\":\"04c10ef3\",\"chunk-5f37565a\":\"866da452\",\"chunk-3c503f11\":\"63eb6440\",\"chunk-3c5508a8\":\"df42caf5\",\"chunk-4ad4ee14\":\"8b2a14fc\",\"chunk-558f2502\":\"0c2d3fe3\",\"chunk-df2173ba\":\"212cdb5d\",\"chunk-6017a8cc\":\"ca6abc7b\",\"chunk-6311d6e4\":\"5e3bed6d\",\"chunk-676ab716\":\"e27ad7cf\",\"chunk-682cbfea\":\"6235ff14\",\"chunk-72b5c1c5\":\"323ca431\",\"chunk-74192098\":\"21f7f8ac\",\"chunk-7ce94d5a\":\"d9210f83\",\"chunk-8dae9a0e\":\"eecd573a\",\"chunk-ad36806a\":\"668ab07b\",\"chunk-a3415be0\":\"4ca5c8de\",\"chunk-b4eeaefc\":\"dc5a86af\",\"chunk-be5abec6\":\"a28b2cb4\",\"chunk-be6034c6\":\"3e2667a4\",\"chunk-c13d4c7a\":\"a7aa96b5\",\"chunk-c27135be\":\"9f2d1180\",\"chunk-ce822458\":\"42c53b34\",\"chunk-df3815d6\":\"559538b2\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0093648a\":1,\"chunk-259a7156\":1,\"chunk-6f5e28a4\":1,\"chunk-3f32e4d6\":1,\"chunk-4288c12e\":1,\"chunk-2da0da34\":1,\"chunk-5941f196\":1,\"chunk-4b7e6b14\":1,\"chunk-4f7e7566\":1,\"chunk-51109c8c\":1,\"chunk-57783a4c\":1,\"chunk-5835afd4\":1,\"chunk-591a9950\":1,\"chunk-5c0a0447\":1,\"chunk-7cb624d9\":1,\"chunk-6017a8cc\":1,\"chunk-682cbfea\":1,\"chunk-a3415be0\":1,\"chunk-b4eeaefc\":1,\"chunk-c27135be\":1,\"chunk-ce822458\":1,\"chunk-df3815d6\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0093648a\":\"c78d663f\",\"chunk-01d97210\":\"31d6cfe0\",\"chunk-0e9db98e\":\"31d6cfe0\",\"chunk-259a7156\":\"b34ec5e3\",\"chunk-2d0afd9c\":\"31d6cfe0\",\"chunk-2d0b16cf\":\"31d6cfe0\",\"chunk-2d0b6d05\":\"31d6cfe0\",\"chunk-2d0bd9b8\":\"31d6cfe0\",\"chunk-2d0c1598\":\"31d6cfe0\",\"chunk-2d0c4dda\":\"31d6cfe0\",\"chunk-2d0c77bc\":\"31d6cfe0\",\"chunk-2d0cb734\":\"31d6cfe0\",\"chunk-2d0cf4a8\":\"31d6cfe0\",\"chunk-2d0d0901\":\"31d6cfe0\",\"chunk-2d0d621b\":\"31d6cfe0\",\"chunk-2d0d7692\":\"31d6cfe0\",\"chunk-2d0daee1\":\"31d6cfe0\",\"chunk-2d0ddb56\":\"31d6cfe0\",\"chunk-2d0de6c6\":\"31d6cfe0\",\"chunk-2d0e6170\":\"31d6cfe0\",\"chunk-6f5e28a4\":\"3335ef5f\",\"chunk-2d0e6c57\":\"31d6cfe0\",\"chunk-2d0e8fd4\":\"31d6cfe0\",\"chunk-2d0e943c\":\"31d6cfe0\",\"chunk-2d0e9b80\":\"31d6cfe0\",\"chunk-2d20efb8\":\"31d6cfe0\",\"chunk-2d21064d\":\"31d6cfe0\",\"chunk-2d21645e\":\"31d6cfe0\",\"chunk-2d2174ea\":\"31d6cfe0\",\"chunk-2d217c5e\":\"31d6cfe0\",\"chunk-2d217cc9\":\"31d6cfe0\",\"chunk-2d21b23f\":\"31d6cfe0\",\"chunk-2d21b346\":\"31d6cfe0\",\"chunk-2d21d817\":\"31d6cfe0\",\"chunk-2d21f0a9\":\"31d6cfe0\",\"chunk-2d21f28c\":\"31d6cfe0\",\"chunk-2d224c89\":\"31d6cfe0\",\"chunk-2d2266fb\":\"31d6cfe0\",\"chunk-2d228897\":\"31d6cfe0\",\"chunk-2d230df7\":\"31d6cfe0\",\"chunk-2d23723d\":\"31d6cfe0\",\"chunk-2d238264\":\"31d6cfe0\",\"chunk-2d238466\":\"31d6cfe0\",\"chunk-3f32e4d6\":\"8a4f71b0\",\"chunk-4288c12e\":\"e1d3fe52\",\"chunk-034aaaac\":\"31d6cfe0\",\"chunk-134340fb\":\"31d6cfe0\",\"chunk-18aff0e4\":\"31d6cfe0\",\"chunk-211aab0f\":\"31d6cfe0\",\"chunk-2d0be333\":\"31d6cfe0\",\"chunk-0b01f334\":\"31d6cfe0\",\"chunk-3e9c837a\":\"31d6cfe0\",\"chunk-2da0da34\":\"db19dcdd\",\"chunk-33c9e563\":\"31d6cfe0\",\"chunk-36f46100\":\"31d6cfe0\",\"chunk-46800696\":\"31d6cfe0\",\"chunk-4b123a8c\":\"31d6cfe0\",\"chunk-4d23d1d2\":\"31d6cfe0\",\"chunk-57467bc8\":\"31d6cfe0\",\"chunk-57dbc9a0\":\"31d6cfe0\",\"chunk-295cf444\":\"31d6cfe0\",\"chunk-5941f196\":\"5b59b7e9\",\"chunk-5fd9674c\":\"31d6cfe0\",\"chunk-67e8c551\":\"31d6cfe0\",\"chunk-7d447681\":\"31d6cfe0\",\"chunk-8a2253b6\":\"31d6cfe0\",\"chunk-ffa18aee\":\"31d6cfe0\",\"chunk-4b7e6b14\":\"b34ec5e3\",\"chunk-4f7e7566\":\"67bdd64a\",\"chunk-51109c8c\":\"8a4f71b0\",\"chunk-57783a4c\":\"73165a15\",\"chunk-5835afd4\":\"d0e832ae\",\"chunk-591a9950\":\"d0e832ae\",\"chunk-5c0a0447\":\"c78d663f\",\"chunk-6c40dc59\":\"31d6cfe0\",\"chunk-7cb624d9\":\"e1d3fe52\",\"chunk-067565b0\":\"31d6cfe0\",\"chunk-0ea8a1ff\":\"31d6cfe0\",\"chunk-197c0064\":\"31d6cfe0\",\"chunk-1bb7c056\":\"31d6cfe0\",\"chunk-3988a222\":\"31d6cfe0\",\"chunk-5f37565a\":\"31d6cfe0\",\"chunk-3c503f11\":\"31d6cfe0\",\"chunk-3c5508a8\":\"31d6cfe0\",\"chunk-4ad4ee14\":\"31d6cfe0\",\"chunk-558f2502\":\"31d6cfe0\",\"chunk-df2173ba\":\"31d6cfe0\",\"chunk-6017a8cc\":\"5b59b7e9\",\"chunk-6311d6e4\":\"31d6cfe0\",\"chunk-676ab716\":\"31d6cfe0\",\"chunk-682cbfea\":\"db19dcdd\",\"chunk-72b5c1c5\":\"31d6cfe0\",\"chunk-74192098\":\"31d6cfe0\",\"chunk-7ce94d5a\":\"31d6cfe0\",\"chunk-8dae9a0e\":\"31d6cfe0\",\"chunk-ad36806a\":\"31d6cfe0\",\"chunk-a3415be0\":\"d4038072\",\"chunk-b4eeaefc\":\"95d772cc\",\"chunk-be5abec6\":\"31d6cfe0\",\"chunk-be6034c6\":\"31d6cfe0\",\"chunk-c13d4c7a\":\"31d6cfe0\",\"chunk-c27135be\":\"c4a3a430\",\"chunk-ce822458\":\"67bdd64a\",\"chunk-df3815d6\":\"1391ec65\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\r\n    pagination: {\r\n        goto: \"前往\",\r\n        page: \"页\",\r\n        itemsPerPage: \" 条/页\",\r\n        total: (total) => `共 ${total} 条`,\r\n        prev5: \"向前 5 页\",\r\n        next5: \"向后 5 页\",\r\n    },\r\n    table: {\r\n        // filter\r\n        confirmFilter: \"筛选\",\r\n        resetFilter: \"重置\",\r\n        // contextmenu\r\n        cut: \"剪切\",\r\n        copy: \"复制\",\r\n        insertRowAbove: \"上方插入行\",\r\n        insertRowBelow: \"下方插入行\",\r\n        removeRow: \"删除 $1 行\",\r\n        emptyRow: \"清空 $1 行\",\r\n        //removeColumn: \"删除 $1 列\",\r\n        emptyColumn: \"清空 $1 列\",\r\n        //hideColumn: \"隐藏 $1 列\",\r\n        emptyCell: \"清空单元格\",\r\n        leftFixedColumnTo: \"左列冻结\",\r\n        cancelLeftFixedColumnTo: \"取消左列冻结\",\r\n        rightFixedColumnTo: \"右列冻结\",\r\n        cancelRightFixedColumnTo: \"取消右列冻结\",\r\n    },\r\n};\r\n","import zhCN from \"../../../../packages/src/locale/lang/zh-CN\";\r\nimport enUS from \"../../../../packages/src/locale/lang/en-US\";\r\n\r\nexport default {\r\n    zh: {\r\n        menus: [\r\n            {\r\n                name: \"文档\",\r\n                path: \"/doc\",\r\n                isRouter: true,\r\n            },\r\n            {\r\n                name: \"示例\",\r\n                path: \"/demo\",\r\n                isRouter: true,\r\n            },\r\n            {\r\n                name: \"更新日志\",\r\n                path: \"https://github.com/Happy-Coding-Clans/vue-easytable/releases\",\r\n                isRouter: false,\r\n            },\r\n        ],\r\n        docTheme: \"组件主题\",\r\n        // 主题切换配置\r\n        switchDocThemeOptions: [\r\n            { value: \"default\", label: \"默认\" },\r\n            { value: \"dark\", label: \"暗黑\" },\r\n        ],\r\n        anchorCatalogTitle: \"目录\",\r\n        // 组件配置多语言跟着文档语言环境走\r\n        compLang: zhCN,\r\n        eidtDemoTitle: \"在 Github 上编辑\",\r\n        eidtDemoUrlPrefix:\r\n            \"https://github.com/huangshuwei/vue-easytable/edit/master/examples/src/docs/zh/\",\r\n        demo: {\r\n            description: \"功能描述\",\r\n            expandCode: \"展开代码\",\r\n            foldCode: \"收起代码\",\r\n            openInCodepen: \"在 Codepen 中编辑\",\r\n            openInCodeSandBox: \"在 CodeSandBox 中编辑\",\r\n        },\r\n        completeDemo: {\r\n            demo1: {\r\n                selection: \"这是数据表格的应用场景\",\r\n                dataRowsOption: [\r\n                    {\r\n                        value: 5000,\r\n                        label: \"5000 行\",\r\n                    },\r\n                    {\r\n                        value: 10000,\r\n                        label: \"10,000 行\",\r\n                    },\r\n                    {\r\n                        value: 100000,\r\n                        label: \"100,000 行\",\r\n                    },\r\n                    {\r\n                        value: 150000,\r\n                        label: \"150,000 行\",\r\n                    },\r\n                ],\r\n                dataRows: \"数据量：\",\r\n                columnFixed: \"列固定：\",\r\n                loading: \"Loading：\",\r\n                expand: \"行展开：\",\r\n                radio: \"行单选：\",\r\n                checkbox: \"行多选：\",\r\n            },\r\n            demo2: {\r\n                selection: \"当然，你也可以把它当做 Excel 来用\",\r\n                description:\r\n                    \"在这个案例中，你可以尝试右键菜单、行和列多选、即时输入、单元格自动填充等功能...\",\r\n            },\r\n        },\r\n    },\r\n    en: {\r\n        menus: [\r\n            {\r\n                name: \"Document\",\r\n                path: \"/doc\",\r\n                isRouter: true,\r\n            },\r\n            {\r\n                name: \"Demo\",\r\n                path: \"/demo\",\r\n                isRouter: true,\r\n            },\r\n            {\r\n                name: \"Changelog\",\r\n                path: \"https://github.com/Happy-Coding-Clans/vue-easytable/releases\",\r\n                isRouter: false,\r\n            },\r\n        ],\r\n        docTheme: \"Component Theme\",\r\n        // 主题切换配置\r\n        switchDocThemeOptions: [\r\n            { value: \"default\", label: \"default\" },\r\n            { value: \"dark\", label: \"dark\" },\r\n        ],\r\n        anchorCatalogTitle: \"Contents\",\r\n        compLang: enUS,\r\n        eidtDemoTitle: \"Edit this on Github\",\r\n        eidtDemoUrlPrefix:\r\n            \"https://github.com/huangshuwei/vue-easytable/edit/master/examples/src/docs/en/\",\r\n        demo: {\r\n            description: \"Code Description\",\r\n            expandCode: \"Expand Code\",\r\n            foldCode: \"Hide Code\",\r\n            openInCodepen: \"Edit in Codepen\",\r\n            openInCodeSandBox: \"Edit in CodeSandBox\",\r\n        },\r\n        completeDemo: {\r\n            demo1: {\r\n                selection: \"Here is a data grid .\",\r\n                dataRowsOption: [\r\n                    {\r\n                        value: 5000,\r\n                        label: \"5000 Rows\",\r\n                    },\r\n                    {\r\n                        value: 10000,\r\n                        label: \"10,000 Rows\",\r\n                    },\r\n                    {\r\n                        value: 100000,\r\n                        label: \"100,000 Rows\",\r\n                    },\r\n                    {\r\n                        value: 150000,\r\n                        label: \"150,000 Rows\",\r\n                    },\r\n                ],\r\n                dataRows: \"Data Rows:\",\r\n                columnFixed: \"Fixed Columns:\",\r\n                loading: \"Loading:\",\r\n                expand: \"Row Expand:\",\r\n                radio: \"Row Radio:\",\r\n                checkbox: \"Row Checkbox:\",\r\n            },\r\n            demo2: {\r\n                selection:\r\n                    \"Of course, you can use it like Excel or Google Sheets .\",\r\n                description:\r\n                    \"In this case, you can try features such as right-click menu, multiple selection of rows and columns, real-time input, and cell autofilling, etc.\",\r\n            },\r\n        },\r\n    },\r\n};\r\n","import { DOC_LANG } from \"@/utils/constant.js\";\r\n\r\nexport default {\r\n    computed: {\r\n        // current doc lang\r\n        currentDocLang() {\r\n            return this.$route.path.split(\"/\")[1] || DOC_LANG.EN;\r\n        },\r\n    },\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"main-banner\"},[_c('div',{staticClass:\"main-banner-warpper\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showLogo),expression:\"showLogo\"}],staticClass:\"main-banner-logo\"},[_c('i',{staticClass:\"icon iconfont icon-table\",staticStyle:{\"font-size\":\"20px\"}}),_vm._v(\" vue-easytable \")]),_c('div',{staticClass:\"main-banner-menus-container\"},[_c('div',{staticClass:\"main-banner-menus\"},[_vm._l((_vm.currentLocal.menus),function(item){return _c('span',{key:item.name,class:[\n                            'main-banner-menu-item',\n                            _vm.activeMenuClass(item) ]},[_c('a',{staticClass:\"main-banner-menu-link\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.gotoRouter(item)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])])}),_c('span',{staticClass:\"main-banner-menu-item\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(\n                                function () { return (_vm.showLangDropdown = false); }\n                            ),expression:\"\\n                                () => (showLangDropdown = false)\\n                            \"}],staticClass:\"switch-lang-container\"},[_c('span',{staticClass:\"switch-lang\",on:{\"click\":function($event){_vm.showLangDropdown = !_vm.showLangDropdown}}},[_c('i',{staticClass:\"icon iconfont icon-translate\"}),_c('i',{staticClass:\"icon iconfont icon-dropdown\"})]),_c('div',{staticClass:\"switch-lang-dropdown-pannel\",class:_vm.showLangDropdown\n                                        ? 'dropdown-pannel-show'\n                                        : ''},_vm._l((_vm.switchLangOptions),function(item){return _c('span',{key:item.value,class:[\n                                        'dropdown-item',\n                                        {\n                                            active:\n                                                item.value ===\n                                                _vm.currentDocLang,\n                                        } ],on:{\"click\":function($event){$event.stopPropagation();return _vm.langChange(item)}}},[_vm._v(\" \"+_vm._s(item.label)+\" \")])}),0)])]),_c('span',{staticClass:\"main-banner-menu-item\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(\n                                function () { return (_vm.showThemeDropdown = false); }\n                            ),expression:\"\\n                                () => (showThemeDropdown = false)\\n                            \"}],staticClass:\"switch-theme-container\"},[_c('span',{staticClass:\"switch-theme\",on:{\"click\":function($event){_vm.showThemeDropdown = !_vm.showThemeDropdown}}},[_vm._v(\" \"+_vm._s(_vm.currentLocal.docTheme)+\" \"),_c('i',{staticClass:\"icon iconfont icon-dropdown\"})]),_c('div',{staticClass:\"switch-theme-dropdown-pannel\",class:_vm.showThemeDropdown\n                                        ? 'dropdown-pannel-show'\n                                        : ''},_vm._l((_vm.currentLocal.switchDocThemeOptions),function(item){return _c('span',{key:item.value,class:[\n                                        'dropdown-item',\n                                        {\n                                            active:\n                                                item.value ===\n                                                _vm.currentDocTheme,\n                                        } ],on:{\"click\":function($event){$event.stopPropagation();return _vm.themeChange(item)}}},[_vm._v(\" \"+_vm._s(item.label)+\" \")])}),0)])]),_c('span',{staticClass:\"main-banner-menu-item\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(\n                                function () { return (_vm.showVersionDropdown = false); }\n                            ),expression:\"\\n                                () => (showVersionDropdown = false)\\n                            \"}],staticClass:\"switch-version-container\"},[_c('span',{staticClass:\"switch-version\",on:{\"click\":function($event){_vm.showVersionDropdown =\n                                        !_vm.showVersionDropdown}}},[_vm._v(\" \"+_vm._s(_vm.currentDocVersion)+\" \"),_c('i',{staticClass:\"icon iconfont icon-dropdown\"})]),_c('div',{staticClass:\"switch-version-dropdown-pannel\",class:_vm.showVersionDropdown\n                                        ? 'dropdown-pannel-show'\n                                        : ''},_vm._l((_vm.switchVersionOptions),function(item){return _c('span',{key:item.value,class:[\n                                        'dropdown-item',\n                                        {\n                                            active:\n                                                item.label ===\n                                                _vm.currentDocVersion,\n                                        } ],on:{\"click\":function($event){$event.stopPropagation();return _vm.versionChange(item)}}},[_vm._v(\" \"+_vm._s(item.label)+\" \")])}),0)])]),_vm._m(0)],2)])])]),_c('keep-alive',[(_vm.$route.meta.keepAlive)?_c('router-view'):_vm._e()],1),(!_vm.$route.meta.keepAlive)?_c('router-view'):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"main-banner-menu-item\"},[_c('a',{staticClass:\"main-banner-menu-link\",attrs:{\"href\":\"https://github.com/huangshuwei/vue-easytable\"}},[_c('i',{staticClass:\"icon iconfont icon-github\"})])])}]\n\nexport { render, staticRenderFns }","import Cookies from \"js-cookie\";\r\n\r\nimport { DOC_THEME_COOKIE } from \"./constant\";\r\n\r\n// set doc theme cookie\r\nexport function setDocTheme(value) {\r\n    return Cookies.set(DOC_THEME_COOKIE, value);\r\n}\r\n\r\n// get doc theme cookie\r\nexport function getDocTheme() {\r\n    let result = Cookies.get(DOC_THEME_COOKIE);\r\n    return result;\r\n}\r\n","import ThemeSwitcherTool from \"theme-switcher-tool\";\r\n\r\nconst styleLinkId = \"theme_creator_cli_style_id\";\r\n\r\nconst themeSwitcherTool = ThemeSwitcherTool({\r\n    // Your theme list\r\n    themeList: [\r\n        {\r\n            themeName: \"dark\",\r\n            themePath:\r\n                \"https://unpkg.com/vue-easytable/libs/theme-dark/index.css\",\r\n        },\r\n        {\r\n            themeName: \"default\",\r\n            themePath:\r\n                \"https://unpkg.com/vue-easytable/libs/theme-default/index.css\",\r\n        },\r\n    ],\r\n    // Your actual style id\r\n    styleLinkId: styleLinkId,\r\n    useStorage: false,\r\n    storageKey: \"theme_switcher_tool_theme\",\r\n});\r\n\r\nexport default {\r\n    methods: {\r\n        // switch theme mix\r\n        switchThemeMix(themeName) {\r\n            return new Promise((resolve, reject) => {\r\n                themeSwitcherTool\r\n                    .switcher({\r\n                        themeName: themeName,\r\n                    })\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch(reject);\r\n            });\r\n        },\r\n    },\r\n    mounted() {\r\n        // 防止已发布的样式文件，对正在开发的样式有干扰\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            let themeLink = document.getElementById(styleLinkId);\r\n            if (themeLink) {\r\n                themeLink.parentNode.removeChild(themeLink);\r\n            }\r\n        }\r\n    },\r\n};\r\n","export default {\r\n    bind: function (el, binding, vNode) {\r\n        if (typeof binding.value !== \"function\") {\r\n            let msg = `in [clickoutside] directives, provided expression '${binding.expression}' is not a function `;\r\n\r\n            const compName = vNode.context.name;\r\n\r\n            if (compName) {\r\n                msg += `in ${compName}`;\r\n            }\r\n            console.error(msg);\r\n        }\r\n\r\n        var handler = (e) => {\r\n            if (!el.contains(e.target) && el !== e.target) {\r\n                binding.value(e);\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        el.__clickOutSide__ = handler;\r\n\r\n        document.addEventListener(\"click\", handler, true);\r\n    },\r\n\r\n    unbind: function (el) {\r\n        document.removeEventListener(\"click\", el.__clickOutSide__, true);\r\n        el.__clickOutSide__ = null;\r\n    },\r\n};\r\n","/*\r\n * dependence on https://github.com/axios/axios\r\n * */\r\n\r\nimport axios from \"axios\";\r\n\r\nconst service = axios.create({});\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n    (request) => {\r\n        return request;\r\n    },\r\n    (error) => {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    },\r\n);\r\n\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    },\r\n);\r\n\r\nexport default service;\r\n","import httpRequest from \"@/plugins/http-request\";\r\n\r\n// get versions\r\nexport function getVersions() {\r\n    return new Promise((resolve, reject) => {\r\n        let net = window.location;\r\n\r\n        const isDev = process.env.NODE_ENV === \"development\";\r\n\r\n        let url = `${net.protocol}//${net.hostname}:${net.port}`;\r\n\r\n        // 包含 /vue-easytable/ 目录\r\n        if (!isDev) {\r\n            url += \"/vue-easytable\";\r\n        }\r\n        url += `/versions.json?t=${new Date().getTime()}`;\r\n\r\n        httpRequest({\r\n            url: url,\r\n            method: \"get\",\r\n        })\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((error) => {\r\n                reject(error);\r\n            });\r\n    });\r\n}\r\n","<template>\r\n    <div class=\"main\">\r\n        <div class=\"main-banner\">\r\n            <div class=\"main-banner-warpper\">\r\n                <!-- logo -->\r\n                <div v-show=\"showLogo\" class=\"main-banner-logo\">\r\n                    <i\r\n                        style=\"font-size: 20px\"\r\n                        class=\"icon iconfont icon-table\"\r\n                    ></i>\r\n                    &nbsp;vue-easytable\r\n                </div>\r\n                <!-- menus -->\r\n                <div class=\"main-banner-menus-container\">\r\n                    <div class=\"main-banner-menus\">\r\n                        <span\r\n                            v-for=\"item in currentLocal.menus\"\r\n                            :key=\"item.name\"\r\n                            :class=\"[\r\n                                'main-banner-menu-item',\r\n                                activeMenuClass(item),\r\n                            ]\"\r\n                        >\r\n                            <a\r\n                                class=\"main-banner-menu-link\"\r\n                                href=\"javascript:void(0)\"\r\n                                @click=\"gotoRouter(item)\"\r\n                            >\r\n                                {{ item.name }}\r\n                            </a>\r\n                        </span>\r\n\r\n                        <!-- switch lang -->\r\n                        <span class=\"main-banner-menu-item\">\r\n                            <div\r\n                                v-click-outside=\"\r\n                                    () => (showLangDropdown = false)\r\n                                \"\r\n                                class=\"switch-lang-container\"\r\n                            >\r\n                                <span\r\n                                    class=\"switch-lang\"\r\n                                    @click=\"\r\n                                        showLangDropdown = !showLangDropdown\r\n                                    \"\r\n                                >\r\n                                    <i class=\"icon iconfont icon-translate\" />\r\n                                    <i class=\"icon iconfont icon-dropdown\" />\r\n                                </span>\r\n                                <div\r\n                                    class=\"switch-lang-dropdown-pannel\"\r\n                                    :class=\"\r\n                                        showLangDropdown\r\n                                            ? 'dropdown-pannel-show'\r\n                                            : ''\r\n                                    \"\r\n                                >\r\n                                    <span\r\n                                        v-for=\"item in switchLangOptions\"\r\n                                        :key=\"item.value\"\r\n                                        :class=\"[\r\n                                            'dropdown-item',\r\n                                            {\r\n                                                active:\r\n                                                    item.value ===\r\n                                                    currentDocLang,\r\n                                            },\r\n                                        ]\"\r\n                                        @click.stop=\"langChange(item)\"\r\n                                    >\r\n                                        {{ item.label }}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <!-- switch theme -->\r\n                        <span class=\"main-banner-menu-item\">\r\n                            <div\r\n                                v-click-outside=\"\r\n                                    () => (showThemeDropdown = false)\r\n                                \"\r\n                                class=\"switch-theme-container\"\r\n                            >\r\n                                <span\r\n                                    class=\"switch-theme\"\r\n                                    @click=\"\r\n                                        showThemeDropdown = !showThemeDropdown\r\n                                    \"\r\n                                >\r\n                                    {{ currentLocal.docTheme }}\r\n                                    <i class=\"icon iconfont icon-dropdown\" />\r\n                                </span>\r\n                                <div\r\n                                    class=\"switch-theme-dropdown-pannel\"\r\n                                    :class=\"\r\n                                        showThemeDropdown\r\n                                            ? 'dropdown-pannel-show'\r\n                                            : ''\r\n                                    \"\r\n                                >\r\n                                    <span\r\n                                        v-for=\"item in currentLocal.switchDocThemeOptions\"\r\n                                        :key=\"item.value\"\r\n                                        :class=\"[\r\n                                            'dropdown-item',\r\n                                            {\r\n                                                active:\r\n                                                    item.value ===\r\n                                                    currentDocTheme,\r\n                                            },\r\n                                        ]\"\r\n                                        @click.stop=\"themeChange(item)\"\r\n                                    >\r\n                                        {{ item.label }}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <!-- switch version -->\r\n                        <span class=\"main-banner-menu-item\">\r\n                            <div\r\n                                v-click-outside=\"\r\n                                    () => (showVersionDropdown = false)\r\n                                \"\r\n                                class=\"switch-version-container\"\r\n                            >\r\n                                <span\r\n                                    class=\"switch-version\"\r\n                                    @click=\"\r\n                                        showVersionDropdown =\r\n                                            !showVersionDropdown\r\n                                    \"\r\n                                >\r\n                                    {{ currentDocVersion }}\r\n                                    <i class=\"icon iconfont icon-dropdown\" />\r\n                                </span>\r\n                                <div\r\n                                    class=\"switch-version-dropdown-pannel\"\r\n                                    :class=\"\r\n                                        showVersionDropdown\r\n                                            ? 'dropdown-pannel-show'\r\n                                            : ''\r\n                                    \"\r\n                                >\r\n                                    <span\r\n                                        v-for=\"item in switchVersionOptions\"\r\n                                        :key=\"item.value\"\r\n                                        :class=\"[\r\n                                            'dropdown-item',\r\n                                            {\r\n                                                active:\r\n                                                    item.label ===\r\n                                                    currentDocVersion,\r\n                                            },\r\n                                        ]\"\r\n                                        @click.stop=\"versionChange(item)\"\r\n                                    >\r\n                                        {{ item.label }}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <span class=\"main-banner-menu-item\">\r\n                            <a\r\n                                class=\"main-banner-menu-link\"\r\n                                href=\"https://github.com/huangshuwei/vue-easytable\"\r\n                            >\r\n                                <i class=\"icon iconfont icon-github\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <keep-alive>\r\n            <router-view v-if=\"$route.meta.keepAlive\" />\r\n        </keep-alive>\r\n        <router-view v-if=\"!$route.meta.keepAlive\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDocTheme, setDocTheme } from \"@/utils/cookies\";\r\nimport locale from \"./locale\";\r\nimport I18nMixins from \"./mixins/i18n-mixins\";\r\nimport ThemeSwitchMixins from \"./mixins/theme-switch-mixins.js\";\r\nimport clickoutside from \"./directives/clickoutside.js\";\r\nimport { version as latestVersion } from \"../../../package.json\";\r\n\r\nimport { getVersions } from \"@/service/index.js\";\r\n\r\nexport default {\r\n    directives: {\r\n        \"click-outside\": clickoutside,\r\n    },\r\n    mixins: [I18nMixins, ThemeSwitchMixins],\r\n    data() {\r\n        return {\r\n            //switch lang option\r\n            switchLangOptions: [\r\n                { value: \"en\", label: \"English\" },\r\n                { value: \"zh\", label: \"简体中文\" },\r\n            ],\r\n            // show lang dropdown\r\n            showLangDropdown: false,\r\n            //switch version option,\r\n            switchVersionOptions: [],\r\n            showVersionDropdown: false,\r\n            // show theme dropdown\r\n            showThemeDropdown: false,\r\n            // default doc theme\r\n            defalutDocTheme: \"default\",\r\n            // current doc theme\r\n            currentDocTheme: \"\",\r\n        };\r\n    },\r\n    computed: {\r\n        // current local\r\n        currentLocal() {\r\n            return locale[this.currentDocLang];\r\n        },\r\n\r\n        // show logo\r\n        showLogo() {\r\n            return window.env !== \"dev\";\r\n        },\r\n\r\n        // current doc version\r\n        currentDocVersion() {\r\n            const { switchVersionOptions } = this;\r\n\r\n            const { pathname } = window.location;\r\n\r\n            const versionItem = switchVersionOptions.find(\r\n                (x) => x.value === pathname,\r\n            );\r\n\r\n            return versionItem ? versionItem.label : latestVersion;\r\n        },\r\n    },\r\n    watch: {\r\n        currentDocLang() {\r\n            this.$veLocale.use(locale[this.currentDocLang][\"compLang\"]);\r\n        },\r\n    },\r\n    methods: {\r\n        // lang change\r\n        langChange(item) {\r\n            const { matched } = this.$route;\r\n\r\n            const lang = item.value;\r\n\r\n            if (matched[0].path !== `/${lang}`) {\r\n                const path = this.$route.path.replace(\r\n                    this.currentDocLang,\r\n                    lang,\r\n                );\r\n                this.$router.push(path);\r\n                this.$veLocale.use(locale[lang][\"compLang\"]);\r\n            }\r\n            setTimeout(() => {\r\n                this.showLangDropdown = false;\r\n            }, 150);\r\n        },\r\n        // theme change\r\n        themeChange({ value }) {\r\n            setDocTheme(value);\r\n            this.currentDocTheme = value;\r\n            this.showThemeDropdown = false;\r\n\r\n            if (window.env === \"dev\") {\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                });\r\n            } else {\r\n                this.switchThemeMix(value).finally(() => {\r\n                    //this.loadingInstance.close();\r\n                });\r\n            }\r\n        },\r\n        // version change\r\n        versionChange(item) {\r\n            const { protocol, host, pathname, hash } = window.location;\r\n            // version 1.0\r\n            if (item.isVersion1) {\r\n                const newUrl = protocol + \"//\" + host + item.value;\r\n                window.open(newUrl, \"_blank\");\r\n            } else {\r\n                const newUrl = protocol + \"//\" + host + item.value + hash;\r\n                window.open(item.value, \"_self\");\r\n            }\r\n        },\r\n        // go ro router path\r\n        gotoRouter(item) {\r\n            if (item.isRouter) {\r\n                this.$router\r\n                    .push({ path: `/${this.currentDocLang}${item.path}` })\r\n                    .catch(() => {});\r\n            } else {\r\n                window.open(item.path, \"_blank\");\r\n            }\r\n        },\r\n        activeMenuClass(item) {\r\n            let result = \"\";\r\n\r\n            const { matched } = this.$route;\r\n            if (\r\n                matched &&\r\n                matched.length > 0 &&\r\n                matched.some(\r\n                    (x) => x.path === `/${this.currentDocLang}${item.path}`,\r\n                )\r\n            ) {\r\n                result = \"link-active\";\r\n            }\r\n            return result;\r\n        },\r\n        // init theme\r\n        initDocTheme() {\r\n            this.currentDocTheme = getDocTheme() ?? this.defalutDocTheme;\r\n            // 初始化\r\n            if (window.env != \"dev\") {\r\n                this.switchThemeMix(this.currentDocTheme);\r\n            }\r\n            console.log(\"current doc theme ::\", this.currentDocTheme);\r\n        },\r\n    },\r\n    created() {\r\n        getVersions().then(({ data }) => {\r\n            this.switchVersionOptions = data;\r\n        });\r\n    },\r\n    mounted() {\r\n        this.initDocTheme();\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./app.vue?vue&type=template&id=65c2f821&\"\nimport script from \"./app.vue?vue&type=script&lang=js&\"\nexport * from \"./app.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import routers from \"./locale\";\r\n\r\nconst emptyLayout = () => import(\"@/comp/layout/empty-layout.vue\");\r\n\r\nconst docLayout = () => import(\"@/comp/layout/doc-layout.vue\");\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        meta: { keepAlive: true, hide: true },\r\n        redirect: \"/en\",\r\n    }, // 默认路由\r\n    {\r\n        path: \"*\", // 页面不存在的情况下会跳到首页\r\n        redirect: \"/\",\r\n    },\r\n    {\r\n        path: \"/zh\",\r\n        component: emptyLayout,\r\n        redirect: \"/zh/demo\",\r\n        children: [\r\n            {\r\n                path: \"demo\",\r\n                component: () => import(\"../demo/index.vue\"),\r\n                name: \"示例\",\r\n                meta: { keepAlive: false, hide: true },\r\n            },\r\n            {\r\n                path: \"doc\",\r\n                component: docLayout,\r\n                redirect: \"/zh/doc/intro\",\r\n                children: routers.zh,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: \"/en\",\r\n        component: emptyLayout,\r\n        redirect: \"/en/demo\",\r\n        children: [\r\n            {\r\n                path: \"demo\",\r\n                component: () => import(\"../demo/index.vue\"),\r\n                name: \"示例\",\r\n                meta: { keepAlive: false, hide: true },\r\n            },\r\n            {\r\n                path: \"doc\",\r\n                component: docLayout,\r\n                redirect: \"/en/doc/intro\",\r\n                children: routers.en,\r\n            },\r\n        ],\r\n    },\r\n];\r\n","import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\nimport routerConfig from \"./router.config.js\";\r\n//import routerConfig from \"./router.config-test.js\";\r\n\r\nVue.use(VueRouter);\r\n\r\nexport default new VueRouter({\r\n    linkActiveClass: \"active\",\r\n    routes: routerConfig,\r\n});\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-block\",class:[{ hover: _vm.hovering }],on:{\"mouseenter\":function($event){_vm.hovering = true},\"mouseleave\":function($event){_vm.hovering = false}}},[_c('vue-lazy-container',{staticClass:\"source-code-container\",attrs:{\"tag-name\":\"div\"},on:{\"change\":_vm.visibilityChange}},[(_vm.isDemoRendered)?_c('div',{staticClass:\"source\"},[_vm._t(\"source\")],2):_c('div',{staticClass:\"source-empty\"},[_vm._v(\"Loading...\")])]),(_vm.$slots.default)?_c('div',{staticClass:\"description\"},[_c('div',{staticClass:\"title-container\"},[_c('span',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.demoLangInfo.description))])]),_c('div',{staticClass:\"content\"},[_vm._t(\"default\")],2)]):_vm._e(),_c('div',{ref:\"meta\",staticClass:\"meta\"},[_c('div',{staticClass:\"highlight\"},[_vm._t(\"highlight\")],2)]),_c('div',{ref:\"control\",staticClass:\"demo-block-control\",class:{ 'is-fixed': _vm.fixedControl },style:({ width: _vm.getDemoBlockControlWidth }),on:{\"click\":function($event){_vm.isExpanded = !_vm.isExpanded}}},[_c('i',{class:['arraw-slide-icon', _vm.iconClass, { hovering: _vm.hovering }]}),_c('transition',{attrs:{\"name\":\"text-slide\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hovering),expression:\"hovering\"}],staticClass:\"slide-content\"},[_vm._v(\" \"+_vm._s(_vm.controlText)+\" \")])]),_c('transition',{attrs:{\"name\":\"text-slide\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hovering || _vm.isExpanded),expression:\"hovering || isExpanded\"}],staticClass:\"slide-content online-edit-btn\",attrs:{\"size\":\"small\",\"type\":\"text\"}},[_c('CodeSandBoxOnline',{attrs:{\"btn-name\":_vm.demoLangInfo['openInCodeSandBox'] || '',\"version\":_vm.onlineExample.version,\"example-tpl\":_vm.onlineExample.html,\"example-script\":_vm.onlineExample.script,\"example-style\":_vm.onlineExample.style}})],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import LZString from \"lz-string\";\r\n\r\nexport default {\r\n    props: {\r\n        btnName: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        // vue-easytable version\r\n        version: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        // vue tpl\r\n        exampleTpl: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        // scripts\r\n        exampleScript: {\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        // style\r\n        exampleStyle: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    methods: {\r\n        // get main js content\r\n        getMainjsContent() {\r\n            return `\r\nimport Vue from \"vue\";\r\nimport Example from \"./Example.vue\";\r\n\r\n// import default theme\r\nimport \"vue-easytable/libs/theme-default/index.css\";\r\n\r\n// import vue-easytable library\r\nimport VueEasytable from \"vue-easytable\";\r\n\r\n// for online edit\r\nimport \"vue-easytable/libs/font/iconfont.css\";\r\n\r\n// only used by examples\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\n\r\nVue.use(VueEasytable);\r\n\r\nVue.use(ElementUI);\r\n\r\nVue.config.productionTip = false;\r\n\r\nnew Vue({\r\n  render: (h) => h(Example)\r\n}).$mount(\"#app\");\r\n            `;\r\n        },\r\n\r\n        // get example.vue content\r\n        getExampleContent() {\r\n            return `\r\n            ${this.exampleTpl}\r\n\r\n            <script>\r\n             ${this.exampleScript}\r\n            </script>\r\n\r\n            <style>\r\n            ${this.exampleStyle}\r\n            </style>\r\n            `;\r\n        },\r\n\r\n        // get babel content\r\n        getbabelContent() {\r\n            return `\r\n{\r\n    \"presets\": [\r\n        \"@vue/cli-plugin-babel/preset\"\r\n    ]\r\n}\r\n            `;\r\n        },\r\n\r\n        getCodesanboxPrefillConfig() {\r\n            const {\r\n                version,\r\n                getExampleContent,\r\n                getMainjsContent,\r\n                getbabelContent,\r\n            } = this;\r\n\r\n            const codesandboxPackage = {\r\n                title: `vue-easytable@${version} example`,\r\n                main: \"main.js\",\r\n                dependencies: {\r\n                    vue: \"^2.6.11\",\r\n                    \"vue-template-compiler\": \"^2.6.11\",\r\n                    \"vue-easytable\": version,\r\n                    \"element-ui\": \"^2.15.0\",\r\n                    mockjs: \"^1.1.0\",\r\n                    \"@vue/cli-service\": \"4.1.1\",\r\n                    \"@vue/cli-plugin-babel\": \"4.5.11\",\r\n                    \"@vue/babel-preset-jsx\": \"1.2.4\",\r\n                },\r\n                // codesandbox 更新后不支持了\r\n                // devDependencies: {\r\n                //     \"@vue/cli-plugin-babel\": \"4.5.11\",\r\n                //     \"@vue/cli-plugin-eslint\": \"4.1.1\",\r\n                //     \"@vue/cli-service\": \"4.1.1\",\r\n                // },\r\n                scripts: {\r\n                    serve: \"vue-cli-service serve\",\r\n                    build: \"vue-cli-service build\",\r\n                    lint: \"vue-cli-service lint\",\r\n                },\r\n                browserslist: [\"> 1%\", \"last 2 versions\", \"not ie <= 8\"],\r\n            };\r\n\r\n            const codesanboxPrefillConfig = {\r\n                files: {\r\n                    \"package.json\": { content: codesandboxPackage },\r\n                    \"Example.vue\": { content: getExampleContent() },\r\n                    \"main.js\": { content: getMainjsContent() },\r\n                    \".babelrc\": { content: getbabelContent() },\r\n                },\r\n            };\r\n\r\n            return codesanboxPrefillConfig;\r\n        },\r\n    },\r\n    render() {\r\n        const { getCodesanboxPrefillConfig, btnName } = this;\r\n\r\n        function compress(string) {\r\n            return LZString.compressToBase64(string)\r\n                .replace(/\\+/g, \"-\") // Convert '+' to '-'\r\n                .replace(/\\//g, \"_\") // Convert '/' to '_'\r\n                .replace(/=+$/, \"\"); // Remove ending '='\r\n        }\r\n\r\n        const fromProps = {\r\n            ref: \"form\",\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <form\r\n                    {...fromProps}\r\n                    action=\"https://codesandbox.io/api/v1/sandboxes/define\"\r\n                    method=\"POST\"\r\n                    target=\"_blank\"\r\n                    onClick={() => {\r\n                        this.$refs[fromProps.ref].submit();\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"hidden\"\r\n                        name=\"parameters\"\r\n                        value={compress(\r\n                            JSON.stringify(getCodesanboxPrefillConfig()),\r\n                        )}\r\n                    />\r\n                    {btnName}\r\n                </form>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","<template>\n    <div\n        class=\"demo-block\"\n        :class=\"[{ hover: hovering }]\"\n        @mouseenter=\"hovering = true\"\n        @mouseleave=\"hovering = false\"\n    >\n        <vue-lazy-container\n            class=\"source-code-container\"\n            tag-name=\"div\"\n            @change=\"visibilityChange\"\n        >\n            <div v-if=\"isDemoRendered\" class=\"source\">\n                <slot name=\"source\"></slot>\n            </div>\n            <div v-else class=\"source-empty\">Loading...</div>\n        </vue-lazy-container>\n        <div v-if=\"$slots.default\" class=\"description\">\n            <div class=\"title-container\">\n                <span class=\"title\">{{ demoLangInfo.description }}</span>\n            </div>\n            <div class=\"content\">\n                <slot></slot>\n            </div>\n        </div>\n        <div ref=\"meta\" class=\"meta\">\n            <div class=\"highlight\">\n                <slot name=\"highlight\"></slot>\n            </div>\n        </div>\n        <div\n            ref=\"control\"\n            class=\"demo-block-control\"\n            :style=\"{ width: getDemoBlockControlWidth }\"\n            :class=\"{ 'is-fixed': fixedControl }\"\n            @click=\"isExpanded = !isExpanded\"\n        >\n            <i\n                :class=\"['arraw-slide-icon', iconClass, { hovering: hovering }]\"\n            ></i>\n            <transition name=\"text-slide\">\n                <span v-show=\"hovering\" class=\"slide-content\">\n                    {{ controlText }}\n                </span>\n            </transition>\n            <!--    <transition name=\"text-slide\">\n                <div\n                    v-show=\"hovering || isExpanded\"\n                    size=\"small\"\n                    type=\"text\"\n                    class=\"slide-content online-edit-btn\"\n                >\n                    {{ demoLangInfo.runInline }}\n                </div>\n            </transition> -->\n            <transition name=\"text-slide\">\n                <div\n                    v-show=\"hovering || isExpanded\"\n                    size=\"small\"\n                    type=\"text\"\n                    class=\"slide-content online-edit-btn\"\n                >\n                    <CodeSandBoxOnline\n                        :btn-name=\"demoLangInfo['openInCodeSandBox'] || ''\"\n                        :version=\"onlineExample.version\"\n                        :example-tpl=\"onlineExample.html\"\n                        :example-script=\"onlineExample.script\"\n                        :example-style=\"onlineExample.style\"\n                    />\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n\n<script type=\"text/babel\">\nimport { stripScript, stripStyle, stripTemplate } from \"@/utils/index\";\n// 最外层\nimport { version } from \"../../../package.json\";\n\nimport locale from \"./locale\";\nimport I18nMixins from \"./mixins/i18n-mixins\";\nimport CodeSandBoxOnline from \"@/comp/online-edit/code-sand-box/index.jsx\";\n\nexport default {\n    components: { CodeSandBoxOnline },\n    mixins: [I18nMixins],\n    data() {\n        return {\n            onlineExample: {\n                version: \"\",\n                script: \"\",\n                html: \"\",\n                style: \"\",\n            },\n            hovering: false,\n            isExpanded: false,\n            fixedControl: false,\n            scrollParent: null,\n            // 是否示例渲染完成\n            isDemoRendered: false,\n        };\n    },\n\n    computed: {\n        // demo lang info\n        demoLangInfo() {\n            return locale[this.currentDocLang][\"demo\"];\n        },\n\n        iconClass() {\n            return this.isExpanded\n                ? \"iconfont icon-arrow-up\"\n                : \"iconfont icon-arrow-down\";\n        },\n\n        controlText() {\n            return this.isExpanded\n                ? this.demoLangInfo.foldCode\n                : this.demoLangInfo.expandCode;\n        },\n\n        codeArea() {\n            return this.$el.getElementsByClassName(\"meta\")[0];\n        },\n\n        codeAreaHeight() {\n            if (this.$el.getElementsByClassName(\"description\").length > 0) {\n                return this.$el.getElementsByClassName(\"highlight\")[0]\n                    .clientHeight;\n            }\n            return this.$el.getElementsByClassName(\"highlight\")[0].clientHeight;\n        },\n\n        getDemoBlockControlWidth() {\n            let result = \"100%\";\n\n            if (this.fixedControl) {\n                result =\n                    document.querySelector(\".demo-block\").clientWidth + \"px\";\n            }\n\n            return result;\n        },\n    },\n\n    watch: {\n        isExpanded(val) {\n            this.codeArea.style.height = val\n                ? `${this.codeAreaHeight + 1}px`\n                : \"0\";\n            if (!val) {\n                this.fixedControl = false;\n                this.$refs.control.style.left = \"0\";\n                this.removeScrollHandler();\n                return;\n            }\n            setTimeout(() => {\n                document.addEventListener(\"scroll\", this.scrollHandler);\n                this.scrollHandler();\n            }, 200);\n        },\n    },\n\n    methods: {\n        // visibility change\n        visibilityChange(entry, observer, id) {\n            const { isIntersecting } = entry;\n\n            // visibility\n            if (isIntersecting) {\n                this.isDemoRendered = true;\n            }\n        },\n        // scroll handler\n        scrollHandler() {\n            const { top, bottom, left } =\n                this.$refs.meta.getBoundingClientRect();\n            // 44px 为自身高度\n            this.fixedControl =\n                bottom > document.documentElement.clientHeight &&\n                top + 44 <= document.documentElement.clientHeight;\n\n            this.$refs.control.style.left = this.fixedControl\n                ? `${left}px`\n                : \"0\";\n        },\n\n        removeScrollHandler() {\n            document.removeEventListener(\"scroll\", this.scrollHandler);\n        },\n    },\n\n    created() {\n        this.onlineExample.version = version;\n        const highlight = this.$slots.highlight;\n        if (highlight && highlight[0]) {\n            let code = \"\";\n            let cur = highlight[0];\n            if (cur.tag === \"pre\" && cur.children && cur.children[0]) {\n                cur = cur.children[0];\n                if (cur.tag === \"code\") {\n                    code = cur.children[0].text;\n                }\n            }\n            if (code) {\n                this.onlineExample.html = stripTemplate(code);\n                this.onlineExample.script = stripScript(code);\n                this.onlineExample.style = stripStyle(code);\n            }\n        }\n    },\n\n    mounted() {\n        this.$nextTick(() => {\n            let highlight = this.$el.getElementsByClassName(\"highlight\")[0];\n            if (this.$el.getElementsByClassName(\"description\").length === 0) {\n                highlight.style.width = \"100%\";\n                highlight.borderRight = \"none\";\n            }\n        });\n    },\n\n    beforeDestroy() {\n        this.removeScrollHandler();\n    },\n};\n</script>\n\n<style lang=\"less\">\n.demo-block {\n    border: solid 1px #ebebeb;\n    border-radius: 3px;\n    transition: 0.2s;\n\n    &.hover {\n        box-shadow: 0 0 8px 0 rgba(232, 237, 250, 0.6),\n            0 2px 4px 0 rgba(232, 237, 250, 0.5);\n    }\n\n    &.demo-icon {\n        .source > div i {\n            margin: 0 24px;\n            font-size: 30px;\n        }\n    }\n\n    code {\n        font-family: Menlo, Monaco, Consolas, Courier, monospace;\n    }\n\n    .demo-button {\n        float: right;\n    }\n\n    .source-code-container {\n        min-height: 250px;\n        .source {\n            padding: 24px;\n        }\n        .source-empty {\n            min-height: 250px;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: #666;\n        }\n    }\n\n    .description {\n        box-sizing: border-box;\n        border-radius: 3px;\n        font-size: 14px;\n        line-height: 22px;\n        color: #666;\n        word-break: break-word;\n        margin-top: 50px;\n        background-color: #fff;\n\n        .title-container {\n            font-weight: 500;\n            position: relative;\n            &:before {\n                content: \"\";\n                display: block;\n                width: 100%;\n                height: 1px;\n                background: #eee;\n                position: absolute;\n                top: 10px;\n                left: 0;\n            }\n            .title {\n                display: inline-block;\n                background: #fff;\n                padding: 0 10px 0 10px;\n                position: relative;\n                margin-left: 30px;\n                font-size: 14px;\n            }\n        }\n\n        .content {\n            margin: 20px;\n            p {\n                margin: 0;\n                line-height: 26px;\n            }\n\n            code {\n                color: #5e6d82;\n                background-color: #e6effb;\n                margin: 0 4px;\n                display: inline-block;\n                padding: 1px 5px;\n                font-size: 12px;\n                border-radius: 3px;\n                height: 18px;\n                line-height: 18px;\n            }\n        }\n    }\n\n    .meta {\n        background-color: #fff;\n        overflow: hidden;\n        height: 0;\n        transition: height 0.2s;\n\n        .highlight {\n            pre {\n                margin: 0;\n            }\n\n            code.hljs {\n                margin: 0;\n                max-height: none;\n                border-radius: 0;\n                border-bottom: none;\n                &::before {\n                    content: none;\n                }\n            }\n        }\n    }\n\n    .demo-block-control {\n        border-top: solid 1px #eaeefb;\n        height: 44px;\n        box-sizing: border-box;\n        background-color: #fff;\n        border-bottom-left-radius: 4px;\n        border-bottom-right-radius: 4px;\n        text-align: center;\n        margin-top: -1px;\n        color: #d3dce6;\n        cursor: pointer;\n        position: relative;\n\n        &.is-fixed {\n            position: fixed;\n            bottom: 0;\n            width: 868px;\n        }\n\n        .arraw-slide-icon {\n            display: inline-block;\n            font-size: 16px;\n            line-height: 44px;\n            transition: 0.3s;\n            &.hovering {\n                transform: translateX(-40px);\n            }\n        }\n\n        .slide-content {\n            position: absolute;\n            transform: translateX(-30px);\n            font-size: 14px;\n            line-height: 44px;\n            transition: 0.3s;\n            display: inline-block;\n        }\n\n        &:hover {\n            color: #409eff;\n            background-color: #f9fafc;\n        }\n\n        & .text-slide-enter,\n        & .text-slide-leave-active {\n            opacity: 0;\n            transform: translateX(10px);\n        }\n\n        .online-edit-btn {\n            line-height: 44px;\n            position: absolute;\n            top: 0;\n            right: 0;\n            font-size: 14px;\n            padding-right: 20px;\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo-block.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo-block.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./demo-block.vue?vue&type=template&id=3c06f5ee&\"\nimport script from \"./demo-block.vue?vue&type=script&lang=js&\"\nexport * from \"./demo-block.vue?vue&type=script&lang=js&\"\nimport style0 from \"./demo-block.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.label.length && _vm.id.length)?_c('div',{staticClass:\"anchor-container\"},[_c('div',{staticClass:\"content\"},[_c('a',{staticClass:\"anchor-link\",attrs:{\"id\":_vm.id,\"label\":_vm.label,\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.goAnchor()}}},[_c('i',{staticClass:\"icon iconfont icon-ai-link\",staticStyle:{\"font-size\":\"15px\"}})]),_c('div',{staticClass:\"anchor-label\"},[_c('h3',[_vm._v(\" \"+_vm._s(_vm.label)+\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isEdit),expression:\"isEdit\"}],staticClass:\"iconfont icon-edit\",attrs:{\"title\":_vm.eidtDemoTitle},on:{\"click\":function($event){$event.stopPropagation();return _vm.eidt($event)}}})])]),_vm._t(\"default\")],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div v-if=\"label.length && id.length\" class=\"anchor-container\">\n        <div class=\"content\">\n            <a\n                :id=\"id\"\n                class=\"anchor-link\"\n                :label=\"label\"\n                href=\"javascript:void(0)\"\n                @click.stop=\"goAnchor()\"\n            >\n                <i style=\"font-size: 15px\" class=\"icon iconfont icon-ai-link\" />\n            </a>\n            <div class=\"anchor-label\">\n                <h3>\n                    {{ label }}\n                    <i\n                        v-show=\"isEdit\"\n                        :title=\"eidtDemoTitle\"\n                        class=\"iconfont icon-edit\"\n                        @click.stop=\"eidt\"\n                    />\n                </h3>\n            </div>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { slugify } from \"transliteration\";\nimport { goTobyAnchorId } from \"../utils/index\";\nimport locale from \"./locale\";\nimport I18nMixins from \"./mixins/i18n-mixins\";\n\nexport default {\n    mixins: [I18nMixins],\n    props: {\n        label: {\n            type: String,\n            default: \"\",\n        },\n        // allow edit on github or gitlab etc.\n        isEdit: {\n            type: Boolean,\n            default: true,\n        },\n        // isEdit=true 时生效\n        fileName: {\n            type: String,\n            default: \"\",\n        },\n    },\n    data() {\n        return {\n            id: \"\",\n        };\n    },\n    computed: {\n        eidtDemoTitle() {\n            return locale[this.currentDocLang][\"eidtDemoTitle\"];\n        },\n    },\n    methods: {\n        goAnchor() {\n            goTobyAnchorId(this, this.id);\n        },\n        // edit on github or gitlab etc.\n        eidt() {\n            if (this.isEdit) {\n                const fileName = this.fileName;\n\n                let result = \"\";\n\n                let routerUrl = window.location.href.split(\"/doc/\")[1];\n\n                if (routerUrl) {\n                    routerUrl = routerUrl.split(\"?\")[0];\n\n                    const routerUrlDetail = routerUrl.split(\"/\");\n\n                    if (routerUrlDetail.length === 1) {\n                        // scene 1 : /#/en/doc/qa\n                        result = fileName;\n                    } else if (routerUrlDetail[0] === \"base\") {\n                        // scene 2 : /#/en/doc/base/loading\n                        result = `ve-${routerUrlDetail[1]}/${fileName}`;\n                    } else if (routerUrlDetail[0] === \"table\") {\n                        // scene 3 : /#/en/doc/table/header-fixed\n                        result = `ve-table/${routerUrlDetail[1]}/${fileName}`;\n                    }\n\n                    if (result) {\n                        result =\n                            locale[this.currentDocLang][\"eidtDemoUrlPrefix\"] +\n                            result;\n                        window.open(result, \"_blank\");\n                    }\n                }\n            }\n        },\n    },\n    created() {\n        if (this.label) {\n            this.id = slugify(this.label);\n        }\n    },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.anchor-container {\n    .content {\n        &:hover {\n            .anchor-link {\n                opacity: 0.5;\n            }\n        }\n\n        .anchor-link {\n            margin-left: -20px;\n            margin-right: 5px;\n            opacity: 0;\n            font-weight: bold;\n        }\n\n        .anchor-label {\n            display: inline-block;\n            .icon-edit {\n                margin-left: 5px;\n                color: #ddd;\n                cursor: pointer;\n                &:hover {\n                    color: #333;\n                }\n            }\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./anchor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./anchor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./anchor.vue?vue&type=template&id=72d05200&scoped=true&\"\nimport script from \"./anchor.vue?vue&type=script&lang=js&\"\nexport * from \"./anchor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./anchor.vue?vue&type=style&index=0&id=72d05200&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"72d05200\",\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\r\nimport { merge, cloneDeep } from \"lodash\";\r\nimport defaultLang from \"vue-easytable/packages/src/locale/lang/en-US\";\r\n\r\nconst { defineReactive } = Vue.util;\r\nconst proto = Vue.prototype;\r\n\r\nproto.$veTableMessages = proto.$veTableMessages || {};\r\n\r\ndefineReactive(\r\n    proto,\r\n    \"$veTableMessages\",\r\n    cloneDeep({\r\n        lang: defaultLang,\r\n    }),\r\n);\r\n\r\nexport default {\r\n    getMessage() {\r\n        return proto.$veTableMessages.lang;\r\n    },\r\n    use(lang) {\r\n        this.update(lang);\r\n    },\r\n    update(lang = {}) {\r\n        merge(proto.$veTableMessages.lang, lang);\r\n    },\r\n};\r\n","import locale from \"vue-easytable/packages/ve-locale\";\r\nimport { isFunction } from \"../utils/index\";\r\n\r\n/*\r\n * @createI18N\r\n * @desc create i18n\r\n * @param {string} compName\r\n * @return {array<function>}\r\n */\r\nexport function createI18N(compName) {\r\n    return function (path, ...args) {\r\n        let result = \"\";\r\n\r\n        const messages = locale.getMessage();\r\n\r\n        if (messages[compName]) {\r\n            const message = messages[compName][path];\r\n            result = isFunction(message) ? message(...args) : message;\r\n        } else {\r\n            console.error(\r\n                `can't find ${compName} in ${JSON.stringify(messages)}`,\r\n            );\r\n        }\r\n\r\n        return result;\r\n    };\r\n}\r\n","import { createI18N } from \"../locale/index\";\r\n\r\n/*\r\n * @createLocale\r\n * @desc create namespace by comp name\r\n * @param {string} compName\r\n * @return {function}\r\n */\r\nexport function createLocale(compName) {\r\n    return createI18N(compName);\r\n}\r\n\r\n/*\r\n * @isEmptyArray\r\n * @desc  is empty array\r\n * @param {array} arr\r\n */\r\nexport function isEmptyArray(arr) {\r\n    return !(Array.isArray(arr) && arr.length > 0);\r\n}\r\n\r\n/*\r\n * @isEmptyValue\r\n * @desc  is empty value\r\n * @param {array} arr\r\n */\r\nexport function isEmptyValue(value) {\r\n    return !(value !== \"\" && value !== undefined && value !== null);\r\n}\r\n\r\n/*\r\n * @isDefined\r\n * @desc is defined\r\n * @param {any} val\r\n */\r\nexport function isDefined(val) {\r\n    return val !== undefined && val !== null;\r\n}\r\n\r\n/*\r\n * @isObject\r\n * @desc is object\r\n * @param {any} val\r\n */\r\nexport function isObject(val) {\r\n    return val !== null && typeof val === \"object\";\r\n}\r\n\r\n/*\r\n * @isFunction\r\n * @desc is function\r\n * @param {any} val\r\n */\r\nexport function isFunction(val) {\r\n    return typeof val === \"function\";\r\n}\r\n\r\n/*\r\n * @isBoolean\r\n * @desc is boolean\r\n * @param {any} val\r\n */\r\nexport function isBoolean(val) {\r\n    return typeof val === \"boolean\";\r\n}\r\n\r\n/*\r\n * @isNumber\r\n * @desc is number\r\n * @param {any} val\r\n */\r\nexport function isNumber(val) {\r\n    return typeof val === \"number\";\r\n}\r\n\r\n/*\r\n * @isTrue\r\n * @desc is equal true\r\n * @param {any} val\r\n */\r\nexport function isTrue(val) {\r\n    return isBoolean(val) && val;\r\n}\r\n\r\n/*\r\n * @isFalse\r\n * @desc is equal false\r\n * @param {any} val\r\n */\r\nexport function isFalse(val) {\r\n    return isBoolean(val) && !val;\r\n}\r\n\r\n/*\r\n * @getValByUnit\r\n * @desc  get value by unit\r\n * @param {number|string} width - 宽度\r\n */\r\nexport function getValByUnit(width) {\r\n    return typeof width === \"number\" ? width + \"px\" : width;\r\n}\r\n\r\n/*\r\n * @getParentCompByName\r\n * @desc  get parent comp by name\r\n * @param {object} context\r\n * @param {string} name - parent comp name\r\n */\r\nexport function getParentCompByName(context, name) {\r\n    let parent = context.$parent;\r\n\r\n    while (parent) {\r\n        if (parent.$options.name !== name) {\r\n            parent = parent.$parent;\r\n        } else {\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/*\r\n * @getChildCompsByName\r\n * @desc  get child comps by name\r\n * @param {object} context\r\n * @param {string} name - child comp name\r\n */\r\nexport function getChildCompsByName(context, name) {\r\n    let result = [];\r\n\r\n    let childrens = context.$children;\r\n\r\n    while (childrens && childrens.length > 0) {\r\n        childrens.forEach((child) => {\r\n            childrens = child.$children ? child.$children : null;\r\n\r\n            if (child.$options.name === name) {\r\n                result.push(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/*\r\n * @scrollTo\r\n * @desc element scrollTo https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollTo\r\n * @param {element} el - element\r\n * @param {object} option - scroll option\r\n */\r\nexport function scrollTo(el, option) {\r\n    if (isFunction(el.scrollTo)) {\r\n        el.scrollTo(option);\r\n    } else {\r\n        const { top, left } = option;\r\n        el.scrollTop = top;\r\n        el.scrollLeft = left;\r\n    }\r\n}\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-checkbox-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    // on checked change\r\n    ON_CHECKED_CHANGE: \"on-checked-change\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_CHECKBOX: \"VeCheckbox\",\r\n    VE_CHECKBOX_GROUP: \"VeCheckboxGroup\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","import { getParentCompByName } from \"../../src/utils\";\r\nimport { clsName } from \"./util\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_CHECKBOX,\r\n    props: {\r\n        // 当前checkbox 选中状态,实现 v-model\r\n        value: {\r\n            type: [String, Number, Boolean],\r\n            default: null,\r\n        },\r\n        label: {\r\n            type: [String],\r\n            default: null,\r\n        },\r\n        // is disabled checked\r\n        disabled: Boolean,\r\n        // partial selection effect\r\n        indeterminate: Boolean,\r\n        // 是否是可控组件\r\n        isControlled: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // isControlled 为true 时生效\r\n        isSelected: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // 当前checkbox 选中状态\r\n            model: this.value,\r\n            checkboxGroup: {},\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        checkboxClass() {\r\n            return [\r\n                clsName(\"content\"),\r\n                {\r\n                    [clsName(\"checked\")]: this.internalIsSelected,\r\n                    [clsName(\"disabled\")]: this.disabled,\r\n                    [clsName(\"indeterminate\")]: this.indeterminate,\r\n                },\r\n            ];\r\n        },\r\n\r\n        // 是否横向显示还是纵向显示\r\n        checkboxStyle() {\r\n            return {\r\n                display:\r\n                    this.checkboxGroup && this.checkboxGroup.isVerticalShow\r\n                        ? \"block\"\r\n                        : \"inline-block\",\r\n            };\r\n        },\r\n        // 是否选中\r\n        internalIsSelected() {\r\n            return this.isControlled ? this.isSelected : this.model;\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        value() {\r\n            this.updateModelBySingle();\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // checkbox change\r\n        checkboxChange(event) {\r\n            if (this.disabled) {\r\n                return false;\r\n            }\r\n            const isChecked = event.target.checked;\r\n\r\n            if (!this.isControlled) {\r\n                this.$emit(\"input\", isChecked);\r\n            }\r\n            this.$emit(EMIT_EVENTS.ON_CHECKED_CHANGE, isChecked);\r\n\r\n            if (this.isCheckBoxGroup()) {\r\n                //update parent comp:checkbox-group\r\n                this.checkboxGroup.updateModel(this.label, isChecked);\r\n            }\r\n        },\r\n\r\n        // is checkbox group\r\n        isCheckBoxGroup() {\r\n            this.checkboxGroup = getParentCompByName(\r\n                this,\r\n                COMPS_NAME.VE_CHECKBOX_GROUP,\r\n            );\r\n            return this.checkboxGroup ? true : false;\r\n        },\r\n\r\n        // get label content\r\n        getLabelContent() {\r\n            const { label, $slots } = this;\r\n\r\n            return label ? label : $slots.default;\r\n        },\r\n\r\n        initModel() {\r\n            if (this.isCheckBoxGroup()) {\r\n                let checkboxGroup = this.checkboxGroup;\r\n                if (\r\n                    Array.isArray(checkboxGroup.value) &&\r\n                    checkboxGroup.value.length > 0\r\n                ) {\r\n                    if (checkboxGroup.value.indexOf(this.label) > -1) {\r\n                        this.model = true;\r\n                    }\r\n                }\r\n            } else {\r\n                this.model = this.value;\r\n            }\r\n        },\r\n\r\n        // 通过单选更新 model\r\n        updateModelBySingle() {\r\n            if (!this.disabled) {\r\n                this.model = this.value;\r\n            }\r\n        },\r\n\r\n        // 父组件调用更新 model\r\n        updateModelByGroup(checkBoxGroup) {\r\n            if (checkBoxGroup.indexOf(this.label) > -1) {\r\n                if (!this.disabled) {\r\n                    this.model = true;\r\n                }\r\n            } else {\r\n                if (!this.disabled) {\r\n                    this.model = false;\r\n                }\r\n            }\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.initModel();\r\n    },\r\n    render() {\r\n        const {\r\n            checkboxStyle,\r\n            label,\r\n            checkboxClass,\r\n            checkboxChange,\r\n            getLabelContent,\r\n            internalIsSelected,\r\n        } = this;\r\n\r\n        return (\r\n            <label class={\"ve-checkbox\"} style={checkboxStyle}>\r\n                <span class={checkboxClass}>\r\n                    <input\r\n                        checked={internalIsSelected}\r\n                        class={clsName(\"input\")}\r\n                        type=\"checkbox\"\r\n                        value={label}\r\n                        on-change={checkboxChange}\r\n                    />\r\n\r\n                    <span class={clsName(\"inner\")}></span>\r\n                </span>\r\n                <span class={clsName(\"label\")}>{getLabelContent()}</span>\r\n            </label>\r\n        );\r\n    },\r\n};\r\n","import VeCheckbox from \"./src/index\";\r\n\r\nVeCheckbox.install = function (Vue) {\r\n    Vue.component(VeCheckbox.name, VeCheckbox);\r\n};\r\n\r\nexport default VeCheckbox;\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-checkbox-group-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    // on checked change\r\n    ON_CHECKED_CHANGE: \"on-checked-change\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_CHECKBOX: \"VeCheckbox\",\r\n    VE_CHECKBOX_GROUP: \"VeCheckboxGroup\",\r\n};\r\n","import { getChildCompsByName } from \"../../src/utils\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_CHECKBOX_GROUP,\r\n    props: {\r\n        value: {\r\n            type: Array,\r\n            default() {\r\n                return [];\r\n            },\r\n        },\r\n        // 是否垂直排列显示（当时checkbox组时生效）\r\n        isVerticalShow: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        // 更新子组件选中状态\r\n        value(newVal) {\r\n            let children = getChildCompsByName(this, COMPS_NAME.VE_CHECKBOX);\r\n\r\n            if (children.length > 0) {\r\n                children.forEach((child) => {\r\n                    child.updateModelByGroup(newVal);\r\n                });\r\n            }\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        updateModel(label, checkedVal) {\r\n            let index = this.value.indexOf(label);\r\n            if (index > -1) {\r\n                if (!checkedVal) {\r\n                    this.value.splice(index, 1);\r\n                }\r\n            } else {\r\n                if (checkedVal) {\r\n                    this.value.push(label);\r\n                }\r\n            }\r\n\r\n            this.$emit(\"input\", this.value);\r\n            this.$emit(EMIT_EVENTS.ON_CHECKED_CHANGE, this.value);\r\n        },\r\n    },\r\n    render() {\r\n        return <div class=\"ve-checkbox-group\">{this.$slots.default}</div>;\r\n    },\r\n};\r\n","import VeCheckboxGroup from \"./src/index\";\r\n\r\nVeCheckboxGroup.install = function (Vue) {\r\n    Vue.component(VeCheckboxGroup.name, VeCheckboxGroup);\r\n};\r\n\r\nexport default VeCheckboxGroup;\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-contextmenu-\";\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_CONTEXTMENU: \"VeContextmenu\",\r\n};\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    ON_NODE_CLICK: \"on-node-click\",\r\n};\r\n\r\n// init data\r\nexport const INIT_DATA = {\r\n    // PARENT_ID: 0,\r\n    PARENT_DEEP: -1,\r\n};\r\n\r\n// contextmenu types\r\nexport const CONTEXTMENU_NODE_TYPES = {\r\n    // Separator\r\n    SEPARATOR: \"SEPARATOR\",\r\n};\r\n\r\n// instance methods\r\nexport const INSTANCE_METHODS = {\r\n    HIDE_CONTEXTMENU: \"hideContextmenu\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","// key codes\r\nexport const KEY_CODES = {\r\n    BACK_SPACE: 8,\r\n    TAB: 9,\r\n    ENTER: 13,\r\n    SHIFT: 16,\r\n    SPACE: 32,\r\n\r\n    ARROW_LEFT: 37,\r\n    ARROW_UP: 38,\r\n    ARROW_RIGHT: 39,\r\n    ARROW_DOWN: 40,\r\n\r\n    DELETE: 46,\r\n\r\n    F2: 113,\r\n};\r\n\r\n// icon name\r\nexport const ICON_NAMES = {\r\n    FILTER: \"filter\",\r\n\r\n    DOUBLE_RIGHT_ARROW: \"double-right-arrow\",\r\n    DOUBLE_LEFT_ARROW: \"double-left-arrow\",\r\n\r\n    TOP_ARROW: \"top-arrow\",\r\n    RIGHT_ARROW: \"right-arrow\",\r\n    BOTTOM_ARROW: \"bottom-arrow\",\r\n    LEFT_ARROW: \"left-arrow\",\r\n\r\n    SORT_TOP_ARROW: \"sort-top-arrow\",\r\n    SORT_BOTTOM_ARROW: \"sort-bottom-arrow\",\r\n\r\n    SEARCH: \"search\",\r\n};\r\n\r\n// mouse event key type\r\nexport const MOUSE_EVENT_CLICK_TYPE = {\r\n    LEFT_MOUSE: 1,\r\n    MIDDLE_MOUSE: 2,\r\n    RIGHT_MOUSE: 2,\r\n};\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-icon-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_ICON: \"VeIcon\",\r\n};\r\n","import { ICON_NAMES } from \"../../src/utils/constant\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_ICON,\r\n\r\n    props: {\r\n        // icon name\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        color: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        size: {\r\n            type: [Number, String],\r\n            default: \"\",\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        // icon style\r\n        iconStyle() {\r\n            const { color, size } = this;\r\n\r\n            let result = {\r\n                color,\r\n                \"font-size\": getValByUnit(size),\r\n            };\r\n\r\n            return result;\r\n        },\r\n\r\n        // icon name\r\n        iconClass() {\r\n            const { name } = this;\r\n\r\n            if (!Object.values(ICON_NAMES).includes(name)) {\r\n                console.error(`${name} is not found in ${COMPS_NAME.VE_ICON}.`);\r\n            }\r\n            return `iconfont-vet icon-vet-${name}`;\r\n        },\r\n    },\r\n\r\n    render() {\r\n        const { iconStyle, iconClass } = this;\r\n        return <i style={iconStyle} class={[\"ve-icon\", iconClass]} />;\r\n    },\r\n};\r\n","import VeIcon from \"./src/index\";\r\n\r\nVeIcon.install = function (Vue) {\r\n    Vue.component(VeIcon.name, VeIcon);\r\n};\r\n\r\nexport default VeIcon;\r\n","/*\r\nfork from:\r\nhttps://github.com/ElemeFE/element\r\n*/\r\n\r\nconst trim = function (string) {\r\n    return (string || \"\").replace(/^[\\s\\uFEFF]+|[\\s\\uFEFF]+$/g, \"\");\r\n};\r\n\r\n// add class\r\nexport function addClass(el, cls) {\r\n    if (!el) return;\r\n    var curClass = el.className;\r\n    var classes = (cls || \"\").split(\" \");\r\n\r\n    for (var i = 0, j = classes.length; i < j; i++) {\r\n        var clsName = classes[i];\r\n        if (!clsName) continue;\r\n\r\n        if (el.classList) {\r\n            el.classList.add(clsName);\r\n        } else if (!hasClass(el, clsName)) {\r\n            curClass += \" \" + clsName;\r\n        }\r\n    }\r\n    if (!el.classList) {\r\n        el.className = curClass;\r\n    }\r\n}\r\n\r\n// remove class\r\nexport function removeClass(el, cls) {\r\n    if (!el || !cls) return;\r\n    var classes = cls.split(\" \");\r\n    var curClass = \" \" + el.className + \" \";\r\n\r\n    for (var i = 0, j = classes.length; i < j; i++) {\r\n        var clsName = classes[i];\r\n        if (!clsName) continue;\r\n\r\n        if (el.classList) {\r\n            el.classList.remove(clsName);\r\n        } else if (hasClass(el, clsName)) {\r\n            curClass = curClass.replace(\" \" + clsName + \" \", \" \");\r\n        }\r\n    }\r\n    if (!el.classList) {\r\n        el.className = trim(curClass);\r\n    }\r\n}\r\n\r\n// has class\r\nexport function hasClass(el, cls) {\r\n    if (!el || !cls) return false;\r\n    if (cls.indexOf(\" \") !== -1)\r\n        throw new Error(\"className should not contain space.\");\r\n    if (el.classList) {\r\n        return el.classList.contains(cls);\r\n    } else {\r\n        return (\" \" + el.className + \" \").indexOf(\" \" + cls + \" \") > -1;\r\n    }\r\n}\r\n\r\n/*获取当前元素的偏移（相对于整个document）\r\n *   offsetTop：元素最顶端距离文档顶端的距离，包含滚动条\r\n *   offsetleft：元素最左侧距离文档左侧的距离，包含滚动条\r\n *   left：元素最左侧距离文档左侧的距离，不包含滚动条\r\n *   top:元素最顶端距离文档顶端的距离，不包含滚动条\r\n *   right:元素最右侧距离文档右侧的距离，不包含滚动条\r\n *   bottom：元素最底端距离文档底端的距离，不包含滚动条\r\n *   right2：元素最左侧距离文档右侧的距离，不包含滚动条\r\n *   bottom2：元素最底端距离文档最底部的距离，不包含滚动条\r\n * */\r\nexport function getViewportOffset(triggerEl) {\r\n    var doc = document.documentElement,\r\n        box =\r\n            typeof triggerEl.getBoundingClientRect !== \"undefined\"\r\n                ? triggerEl.getBoundingClientRect()\r\n                : 0,\r\n        scrollLeft =\r\n            (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\r\n        scrollTop =\r\n            (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0),\r\n        offsetLeft = box.left + window.pageXOffset,\r\n        offsetTop = box.top + window.pageYOffset;\r\n\r\n    var left = offsetLeft - scrollLeft,\r\n        top = offsetTop - scrollTop;\r\n\r\n    return {\r\n        offsetTop,\r\n        offsetLeft,\r\n        left,\r\n        top,\r\n        right: window.document.documentElement.clientWidth - box.width - left,\r\n        bottom: window.document.documentElement.clientHeight - box.height - top,\r\n        right2: window.document.documentElement.clientWidth - left,\r\n        bottom2: window.document.documentElement.clientHeight - top,\r\n    };\r\n}\r\n\r\n/*获取当前元素的偏移(相对于外层容器)\r\n *   offsetTop：元素最顶端距离文档顶端的距离，包含滚动条\r\n *   offsetleft：元素最左侧距离文档左侧的距离，包含滚动条\r\n *   left：元素最左侧距离文档左侧的距离，不包含滚动条\r\n *   top:元素最顶端距离文档顶端的距离，不包含滚动条\r\n *   right:元素最右侧距离文档右侧的距离，不包含滚动条\r\n *   bottom：元素最底端距离文档底端的距离，不包含滚动条\r\n *   right2：元素最左侧距离文档右侧的距离，不包含滚动条\r\n *   bottom2：元素最底端距离文档最底部的距离，不包含滚动条\r\n * */\r\nexport function getViewportOffsetWithinContainer(triggerEl, containerEl) {\r\n    const {\r\n        offsetTop: tElOffsetTop,\r\n        offsetLeft: tElOffsetLeft,\r\n        left: tElLef,\r\n        top: tElTop,\r\n        right: tElRight,\r\n        bottom: tElBottom,\r\n        right2: tElRight2,\r\n        bottom2: tElBottom2,\r\n    } = getViewportOffset(triggerEl);\r\n\r\n    const {\r\n        offsetTop: cElOffsetTop,\r\n        offsetLeft: cElOffsetLeft,\r\n        left: cElLef,\r\n        top: cElTop,\r\n        right: cElRight,\r\n        bottom: cElBottom,\r\n        right2: cElRight2,\r\n        bottom2: cElBottom2,\r\n    } = getViewportOffset(containerEl);\r\n\r\n    return {\r\n        offsetTop: tElOffsetTop - cElOffsetTop,\r\n        offsetLeft: tElOffsetLeft - cElOffsetLeft,\r\n        left: tElLef - cElLef,\r\n        top: tElTop - cElTop,\r\n        right: tElRight - cElRight,\r\n        bottom: tElBottom - cElBottom,\r\n        right2: tElRight2 - cElRight2,\r\n        bottom2: tElBottom2 - cElBottom2,\r\n    };\r\n}\r\n\r\n/*获取鼠标相对于文档的坐标\r\n *   left：鼠标点击位置距离文档左侧的距离，包含滚动条\r\n *   top: 鼠标点击位置距离文档顶端的距离，包含滚动条\r\n *   right:鼠标点击位置距离文档右侧的距离，不包含滚动条\r\n *   bottom：鼠标点击位置距离文档底端的距离，不包含滚动条\r\n * */\r\nexport function getMousePosition(event) {\r\n    var x = 0,\r\n        y = 0,\r\n        doc = document.documentElement,\r\n        body = document.body;\r\n    if (!event) event = window.event;\r\n    if (window.pageYoffset) {\r\n        //pageYoffset是Netscape特有\r\n        x = window.pageXOffset;\r\n        y = window.pageYOffset;\r\n    } else {\r\n        x =\r\n            ((doc && doc.scrollLeft) || (body && body.scrollLeft) || 0) -\r\n            ((doc && doc.clientLeft) || (body && body.clientLeft) || 0);\r\n        y =\r\n            ((doc && doc.scrollTop) || (body && body.scrollTop) || 0) -\r\n            ((doc && doc.clientTop) || (body && body.clientTop) || 0);\r\n    }\r\n    x += event.clientX;\r\n    y += event.clientY;\r\n\r\n    let right = doc.clientWidth - event.clientX;\r\n    let bottom = doc.clientHeight - event.clientY;\r\n\r\n    return { left: x, top: y, right, bottom };\r\n}\r\n\r\n/**\r\n * Returns caret position in text input.\r\n *\r\n * @author https://stackoverflow.com/questions/263743/how-to-get-caret-position-in-textarea\r\n * @param {HTMLElement} el An element to check.\r\n * @returns {number}\r\n */\r\nexport function getCaretPosition(el) {\r\n    const rootDocument = document;\r\n\r\n    if (el.selectionStart) {\r\n        return el.selectionStart;\r\n    } else if (rootDocument.selection) {\r\n        // IE8\r\n        el.focus();\r\n\r\n        const r = rootDocument.selection.createRange();\r\n\r\n        if (r === null) {\r\n            return 0;\r\n        }\r\n        const re = el.createTextRange();\r\n        const rc = re.duplicate();\r\n\r\n        re.moveToBookmark(r.getBookmark());\r\n        rc.setEndPoint(\"EndToStart\", re);\r\n\r\n        return rc.text.length;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n/**\r\n * Sets caret position in text input.\r\n *\r\n * @author http://blog.vishalon.net/index.php/javascript-getting-and-setting-caret-position-in-textarea/\r\n * @param {Element} element An element to process.\r\n * @param {number} pos The selection start position.\r\n * @param {number} endPos The selection end position.\r\n */\r\nexport function setCaretPosition(element, pos, endPos) {\r\n    if (endPos === void 0) {\r\n        endPos = pos;\r\n    }\r\n    if (element.setSelectionRange) {\r\n        element.focus();\r\n\r\n        try {\r\n            element.setSelectionRange(pos, endPos);\r\n        } catch (err) {\r\n            const elementParent = element.parentNode;\r\n            const parentDisplayValue = elementParent.style.display;\r\n\r\n            elementParent.style.display = \"block\";\r\n            element.setSelectionRange(pos, endPos);\r\n            elementParent.style.display = parentDisplayValue;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Generate a non duplicate ID\r\n */\r\nexport function getRandomId() {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\n","/*\r\nevents outside\r\ndesc:绑定元素触发的事件不在指定事件中，将会触发。此指令可替代 clickoutside\r\n\r\n--------------------vue 模板用法如下：-----------------------------------\r\n<tempate>\r\n    <button v-events-outside=\"{\r\n        events:[\"mousedown\",\"mouseover\"],\r\n        callback:(e)=>{} // \r\n    }\">删除</button>\r\n</tempate>\r\n\r\n--------------------vue jsx 用法如下：-----------------------------------\r\n<script>\r\n    export default{\r\n        render(){\r\n                const props = {\r\n                        directives: [\r\n                                        {\r\n                                            name: \"events-outside\",\r\n                                            value: {\r\n                                                events: [\"mousedown\",\"mouseover\"],\r\n                                                callback: (e) => {\r\n                                                    //\r\n                                                },\r\n                                            },\r\n                                        }\r\n                                    ]\r\n                    };\r\n\r\n            return (\r\n                <div>\r\n                    <button {...props}>删除</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n</script>\r\n\r\n*/\r\n\r\nexport default {\r\n    bind: function (el, binding, vNode) {\r\n        const { events, callback } = binding.value;\r\n\r\n        if (\r\n            Array.isArray(events) &&\r\n            events.length &&\r\n            typeof callback === \"function\"\r\n        ) {\r\n            const handler = (e) => {\r\n                if (!el.contains(e.target) && el !== e.target) {\r\n                    callback(e);\r\n                } else {\r\n                    return false;\r\n                }\r\n            };\r\n\r\n            el.__eventsOutside__ = handler;\r\n\r\n            events.forEach((eventName) => {\r\n                document.addEventListener(eventName, handler, true);\r\n            });\r\n        } else {\r\n            const compName = vNode.context.name;\r\n            console.error(\r\n                `[events-outside] Please provided 'events' and 'callback' in ${compName}`,\r\n            );\r\n        }\r\n    },\r\n\r\n    unbind: function (el, binding, vNode) {\r\n        const { events } = binding.value;\r\n        events.forEach((eventName) => {\r\n            document.removeEventListener(eventName, el.__eventsOutside__, true);\r\n        });\r\n        el.__eventsOutside__ = null;\r\n    },\r\n};\r\n","import { COMPS_NAME } from \"./util/constant\";\r\nimport { clsName } from \"./util/index\";\r\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\r\nimport { ICON_NAMES } from \"../../src/utils/constant\";\r\nimport { getMousePosition, getViewportOffset } from \"../../src/utils/dom\";\r\nimport {\r\n    INIT_DATA,\r\n    EMIT_EVENTS,\r\n    CONTEXTMENU_NODE_TYPES,\r\n    INSTANCE_METHODS,\r\n} from \"./util/constant\";\r\nimport { getRandomId } from \"../../src/utils/random\";\r\nimport { debounce, cloneDeep } from \"lodash\";\r\nimport eventsOutside from \"../../src/directives/events-outside\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_CONTEXTMENU,\r\n    directives: {\r\n        \"events-outside\": eventsOutside,\r\n    },\r\n    props: {\r\n        /*\r\n         options(contextmenu)\r\n            [\r\n                {\r\n                    \r\n                    id: 1,\r\n                    label: \"菜单1\",\r\n                    disabled:true\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: \"菜单2\",\r\n                    children: [\r\n                        {\r\n                            id: \"2-1\",\r\n                            label: \"菜单2-1\",\r\n                        },\r\n                        {\r\n                            id: \"2-2\",\r\n                            label: \"菜单2-2\",\r\n                        },\r\n                    ],\r\n                },\r\n            ]\r\n        */\r\n        options: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        /*\r\n        event target\r\n        contextmenu event will register on it\r\n        */\r\n        eventTarget: {\r\n            type: [String, HTMLElement],\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            /* \r\n            internal options:\r\n            [\r\n                {\r\n                    id: 1,\r\n                    deep: 0,\r\n                    hasChildren: false,\r\n                    label: \"菜单1\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: \"菜单2\",\r\n                    deep: 0,\r\n                    hasChildren: true,\r\n                    children: [\r\n                        {\r\n                            id: \"2-1\",\r\n                            deep: 1,\r\n                            hasChildren: false,\r\n                            label: \"菜单2-1\",\r\n                        },\r\n                        {\r\n                            id: \"2-2\",\r\n                            deep: 1,\r\n                            hasChildren: false,\r\n                            label: \"菜单2-2\",\r\n                        },\r\n                    ],\r\n                },\r\n            ]\r\n            */\r\n            internalOptions: [],\r\n\r\n            /*\r\n            panels option\r\n            {\r\n                    id: 1,\r\n                    menus: [\r\n                        {\r\n                            id: \"\",\r\n                            deep: 0,\r\n                            label: \"菜单1\",\r\n                            hasChildren: true,\r\n                        },\r\n                        {\r\n                            id: \"\",\r\n                            deep: 0,\r\n                            label: \"菜单2\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    id: 2,\r\n                    menus: [\r\n                        {\r\n                            id: \"\",\r\n                            deep: 1,\r\n                            label: \"菜单1\",\r\n                            hasChildren: true,\r\n                        },\r\n                        {\r\n                            id: \"\",\r\n                            deep: 1,\r\n                            label: \"菜单2\",\r\n                        },\r\n                    ],\r\n                },\r\n            */\r\n            panelOptions: [],\r\n            // event target element\r\n            eventTargetEl: \"\",\r\n            // root contextmenu id\r\n            rootContextmenuId: \"\",\r\n            /*\r\n            is children panels clicked\r\n            如果点击了则不关闭 panels\r\n            */\r\n            isChildrenPanelsClicked: false,\r\n            /*\r\n            is panel right direction\r\n            决定了子 panel 默认展示方向\r\n            */\r\n            isPanelRightDirection: true,\r\n            /*\r\n            is panels remove\r\n            防止hover后菜单被移除，仍然显示子集菜单的问题\r\n            */\r\n            isPanelsEmptyed: true,\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        // active menus ids\r\n        activeMenuIds() {\r\n            const { panelOptions } = this;\r\n\r\n            return panelOptions.map((x) => x.parentId);\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        options: {\r\n            handler: function (val) {\r\n                if (Array.isArray(val) && val.length > 0) {\r\n                    /* \r\n                    如果配置项修改,则重新销毁并创建\r\n                    */\r\n                    this.removeOrEmptyPanels(true);\r\n                    this.rootContextmenuId = this.getRandomIdWithPrefix();\r\n                    this.createInternalOptions();\r\n                    this.createPanelOptions({ options: this.internalOptions });\r\n                    this.resetContextmenu();\r\n                    this.addRootContextmenuPanelToBody();\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        eventTarget: {\r\n            handler: function (val) {\r\n                if (val) {\r\n                    this.registerContextmenuEvent();\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // get random id\r\n        getRandomIdWithPrefix() {\r\n            return clsName(getRandomId());\r\n        },\r\n\r\n        // has children\r\n        hasChildren(option) {\r\n            return Array.isArray(option.children) && option.children.length;\r\n        },\r\n\r\n        /*\r\n        get panel option by menu id\r\n        */\r\n        getPanelOptionByMenuId(options, menuId) {\r\n            for (let i = 0; i < options.length; i++) {\r\n                if (options[i].id === menuId) {\r\n                    return options[i].children;\r\n                }\r\n\r\n                if (options[i].children) {\r\n                    const panelOption = this.getPanelOptionByMenuId(\r\n                        options[i].children,\r\n                        menuId,\r\n                    );\r\n                    if (panelOption) return panelOption;\r\n                }\r\n            }\r\n        },\r\n\r\n        // get parent contextmenu panel element\r\n        getParentContextmenuPanelEl(contextmenuPanelId) {\r\n            let result;\r\n\r\n            const { panelOptions } = this;\r\n\r\n            const panelIndex = panelOptions.findIndex(\r\n                (x) => x.parentId === contextmenuPanelId,\r\n            );\r\n            if (panelIndex > 0) {\r\n                // preview panel's panelId\r\n                const parentPanelId = panelOptions[panelIndex - 1].parentId;\r\n                result = document.querySelector(`#${parentPanelId}`);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // create panel by hover\r\n        createPanelByHover({ event, menu }) {\r\n            const { internalOptions, panelOptions } = this;\r\n\r\n            // 如果被移除则不创建\r\n            if (this.isPanelsEmptyed) {\r\n                return false;\r\n            }\r\n\r\n            // has already exists\r\n            if (panelOptions.findIndex((x) => x.parentId === menu.id) > -1) {\r\n                return false;\r\n            }\r\n\r\n            /*\r\n            移除 panel 深度大于等于当前悬浮菜单的。从后往前删除\r\n            remove panels\r\n            */\r\n            const deletePanelDeeps = panelOptions\r\n                .filter((x) => x.parentDeep >= menu.deep)\r\n                .map((x) => x.parentDeep)\r\n                .reverse();\r\n\r\n            if (deletePanelDeeps.length) {\r\n                for (let i = deletePanelDeeps.length - 1; i >= 0; i--) {\r\n                    const delIndex = panelOptions.findIndex(\r\n                        (x) => x.parentDeep === deletePanelDeeps[i],\r\n                    );\r\n                    if (delIndex > -1) {\r\n                        this.panelOptions.splice(delIndex, 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const panelOption = this.getPanelOptionByMenuId(\r\n                internalOptions,\r\n                menu.id,\r\n            );\r\n\r\n            if (panelOption) {\r\n                this.createPanelOptions({\r\n                    options: panelOption,\r\n                    currentMenu: menu,\r\n                });\r\n\r\n                this.$nextTick(() => {\r\n                    this.addContextmenuPanelToBody({\r\n                        contextmenuId: menu.id,\r\n                    });\r\n\r\n                    this.showContextmenuPanel({\r\n                        event,\r\n                        contextmenuId: menu.id,\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        // create panels option\r\n        createPanelOptions({ options, currentMenu }) {\r\n            const { hasChildren, rootContextmenuId } = this;\r\n\r\n            if (Array.isArray(options)) {\r\n                //\r\n                let menus = options.map((option) => {\r\n                    return {\r\n                        hasChildren: hasChildren(option),\r\n                        ...option,\r\n                    };\r\n                });\r\n\r\n                this.panelOptions.push({\r\n                    parentId: currentMenu ? currentMenu.id : rootContextmenuId,\r\n                    parentDeep: currentMenu\r\n                        ? currentMenu.deep\r\n                        : INIT_DATA.PARENT_DEEP,\r\n                    menus: menus,\r\n                });\r\n            }\r\n        },\r\n\r\n        // create internal options recursion\r\n        createInternalOptionsRecursion(options, deep = 0) {\r\n            options.id = this.getRandomIdWithPrefix();\r\n            options.deep = deep;\r\n            deep++;\r\n            if (Array.isArray(options.children)) {\r\n                options.children.map((option) => {\r\n                    return this.createInternalOptionsRecursion(option, deep);\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n\r\n        // create internal options\r\n        createInternalOptions() {\r\n            this.internalOptions = cloneDeep(this.options).map((option) => {\r\n                return this.createInternalOptionsRecursion(option);\r\n            });\r\n        },\r\n\r\n        // show root contextmenu panel\r\n        showRootContextmenuPanel(event) {\r\n            event.preventDefault();\r\n            const { rootContextmenuId } = this;\r\n\r\n            if (rootContextmenuId) {\r\n                // refresh contextmenu\r\n                this.resetContextmenu();\r\n                this.showContextmenuPanel({\r\n                    event,\r\n                    contextmenuId: rootContextmenuId,\r\n                    isRootContextmenu: true,\r\n                });\r\n                this.isPanelsEmptyed = false;\r\n            }\r\n        },\r\n\r\n        // show contextmenu panel\r\n        showContextmenuPanel({ event, contextmenuId, isRootContextmenu }) {\r\n            const { getParentContextmenuPanelEl } = this;\r\n\r\n            let contextmenuPanelEl = document.querySelector(\r\n                `#${contextmenuId}`,\r\n            );\r\n\r\n            if (contextmenuPanelEl) {\r\n                // remove first\r\n                contextmenuPanelEl.innerHTML = \"\";\r\n\r\n                contextmenuPanelEl.appendChild(this.$refs[contextmenuId]);\r\n\r\n                contextmenuPanelEl.style.position = \"absolute\";\r\n                contextmenuPanelEl.classList.add(clsName(\"popper\"));\r\n\r\n                const { width: currentPanelWidth, height: currentPanelHeight } =\r\n                    contextmenuPanelEl.getBoundingClientRect();\r\n                if (isRootContextmenu) {\r\n                    const {\r\n                        left: clickLeft,\r\n                        top: clickTop,\r\n                        right: clickRight,\r\n                        bottom: clickBottom,\r\n                    } = getMousePosition(event);\r\n\r\n                    let panelX = 0;\r\n                    let panelY = 0;\r\n\r\n                    // 右方宽度够显示\r\n                    if (clickRight >= currentPanelWidth) {\r\n                        panelX = clickLeft;\r\n                        this.isPanelRightDirection = true;\r\n                    }\r\n                    // 右方宽度不够显示在鼠标点击左方\r\n                    else {\r\n                        panelX = clickLeft - currentPanelWidth;\r\n                        this.isPanelRightDirection = false;\r\n                    }\r\n\r\n                    // 下方高度够显示\r\n                    if (clickBottom >= currentPanelHeight) {\r\n                        panelY = clickTop;\r\n                    }\r\n                    // 下方高度不够显示在鼠标点击上方\r\n                    else {\r\n                        panelY = clickTop - currentPanelHeight;\r\n                    }\r\n\r\n                    contextmenuPanelEl.style.left = panelX + \"px\";\r\n                    contextmenuPanelEl.style.top = panelY + \"px\";\r\n                } else {\r\n                    const parentContextmenuPanelEl =\r\n                        getParentContextmenuPanelEl(contextmenuId);\r\n\r\n                    if (parentContextmenuPanelEl) {\r\n                        const {\r\n                            left: parentPanelLeft,\r\n                            right: parentPanelRight,\r\n                        } = getViewportOffset(parentContextmenuPanelEl);\r\n\r\n                        const { top: clickTop, bottom: clickBottom } =\r\n                            getMousePosition(event);\r\n\r\n                        const { width: parentPanelWidth } =\r\n                            parentContextmenuPanelEl.getBoundingClientRect();\r\n\r\n                        let panelX = 0;\r\n                        let panelY = 0;\r\n\r\n                        // 如果默认展示在右方向\r\n                        if (this.isPanelRightDirection) {\r\n                            // 右方宽度够显示\r\n                            if (parentPanelRight >= currentPanelWidth) {\r\n                                panelX = parentPanelLeft + parentPanelWidth;\r\n                            }\r\n                            // 右方宽度不够显示在鼠标点击左方\r\n                            else {\r\n                                panelX = parentPanelLeft - parentPanelWidth;\r\n                            }\r\n                        }\r\n                        // 如果默认展示在左方向\r\n                        else {\r\n                            // 左方宽度够显示\r\n                            if (parentPanelLeft >= currentPanelWidth) {\r\n                                panelX = parentPanelLeft - parentPanelWidth;\r\n                            }\r\n                            // 左方宽度不够显示在鼠标点击右方\r\n                            else {\r\n                                panelX = parentPanelLeft + parentPanelWidth;\r\n                            }\r\n                        }\r\n\r\n                        // 下方高度够显示\r\n                        if (clickBottom >= currentPanelHeight) {\r\n                            panelY = clickTop;\r\n                        }\r\n                        // 下方高度不够显示在鼠标点击上方\r\n                        else {\r\n                            panelY = clickTop - currentPanelHeight;\r\n                        }\r\n\r\n                        contextmenuPanelEl.style.left = panelX + \"px\";\r\n                        contextmenuPanelEl.style.top = panelY + \"px\";\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // empty contextmenu panels\r\n        emptyContextmenuPanels() {\r\n            /*\r\n            wait for children panel clicked by setTimeout\r\n            如果点击的是非 root panel 不关闭\r\n            */\r\n            setTimeout(() => {\r\n                if (this.isChildrenPanelsClicked) {\r\n                    this.isChildrenPanelsClicked = false;\r\n                } else {\r\n                    this.removeOrEmptyPanels();\r\n                    this.isPanelsEmptyed = true;\r\n                }\r\n            });\r\n        },\r\n\r\n        // remove or empty panels\r\n        removeOrEmptyPanels(isRemove) {\r\n            const { panelOptions } = this;\r\n\r\n            panelOptions.forEach((panelOption) => {\r\n                let contextmenuPanelEl = document.querySelector(\r\n                    `#${panelOption.parentId}`,\r\n                );\r\n                if (contextmenuPanelEl) {\r\n                    if (isRemove) {\r\n                        contextmenuPanelEl.remove();\r\n                    } else {\r\n                        contextmenuPanelEl.innerHTML = \"\";\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        // reset contextmeny\r\n        resetContextmenu() {\r\n            this.panelOptions = [];\r\n            this.createPanelOptions({ options: this.internalOptions });\r\n        },\r\n\r\n        // add context menu panel to body\r\n        addContextmenuPanelToBody({ contextmenuId }) {\r\n            let contextmenuPanelEl = document.querySelector(\r\n                `#${contextmenuId}`,\r\n            );\r\n\r\n            if (contextmenuPanelEl) {\r\n                return false;\r\n            } else {\r\n                let containerEl = document.createElement(\"div\");\r\n\r\n                containerEl.setAttribute(\"id\", contextmenuId);\r\n\r\n                document.body.appendChild(containerEl);\r\n            }\r\n        },\r\n\r\n        // add root contextmenu panel to body\r\n        addRootContextmenuPanelToBody() {\r\n            if (this.rootContextmenuId) {\r\n                this.addContextmenuPanelToBody({\r\n                    contextmenuId: this.rootContextmenuId,\r\n                });\r\n            }\r\n        },\r\n\r\n        // register contextmenu event\r\n        registerContextmenuEvent() {\r\n            const { eventTarget } = this;\r\n\r\n            if (typeof eventTarget === \"string\" && eventTarget.length > 0) {\r\n                this.eventTargetEl = document.querySelector(eventTarget);\r\n            } else {\r\n                this.eventTargetEl = eventTarget;\r\n            }\r\n\r\n            if (this.eventTargetEl) {\r\n                // contextmenu is on the current element\r\n                this.eventTargetEl.addEventListener(\r\n                    \"contextmenu\",\r\n                    this.showRootContextmenuPanel,\r\n                );\r\n            }\r\n        },\r\n\r\n        // unregister contextmen event\r\n        removeContextmenuEvent() {\r\n            if (this.eventTargetEl) {\r\n                this.eventTargetEl.removeEventListener(\r\n                    \"contextmenu\",\r\n                    this.showRootContextmenuPanel,\r\n                );\r\n            }\r\n        },\r\n\r\n        // hide contextmenu\r\n        [INSTANCE_METHODS.HIDE_CONTEXTMENU]() {\r\n            this.emptyContextmenuPanels();\r\n        },\r\n    },\r\n\r\n    created() {\r\n        // bug fixed #467\r\n        this.debounceCreatePanelByHover = debounce(\r\n            this.createPanelByHover,\r\n            300,\r\n        );\r\n    },\r\n\r\n    mounted() {\r\n        this.addRootContextmenuPanelToBody();\r\n    },\r\n\r\n    destroyed() {\r\n        this.removeContextmenuEvent();\r\n        this.removeOrEmptyPanels(true);\r\n    },\r\n\r\n    render() {\r\n        const {\r\n            panelOptions,\r\n            activeMenuIds,\r\n            hasChildren,\r\n            emptyContextmenuPanels,\r\n            debounceCreatePanelByHover,\r\n        } = this;\r\n\r\n        const contextmenuProps = {\r\n            class: [\"ve-contextmenu\"],\r\n            style: {\r\n                display: \"none\",\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div {...contextmenuProps}>\r\n                {panelOptions.map((panelOption, panelIndex) => {\r\n                    const contextmenuPanelProps = {\r\n                        ref: panelOption.parentId,\r\n                        class: {\r\n                            [clsName(\"panel\")]: true,\r\n                        },\r\n                        directives: [\r\n                            {\r\n                                name: \"events-outside\",\r\n                                value: {\r\n                                    events: [\"click\"],\r\n                                    callback: (e) => {\r\n                                        // only for root panel\r\n                                        if (panelIndex === 0) {\r\n                                            emptyContextmenuPanels();\r\n                                        }\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                        on: {\r\n                            click: () => {\r\n                                if (panelIndex !== 0) {\r\n                                    this.isChildrenPanelsClicked = true;\r\n                                }\r\n                            },\r\n                            contextmenu: (e) => {\r\n                                e.preventDefault();\r\n                            },\r\n                        },\r\n                    };\r\n                    return (\r\n                        <div {...contextmenuPanelProps}>\r\n                            <ul class={clsName(\"list\")}>\r\n                                {panelOption.menus.map((menu) => {\r\n                                    let contextmenuNodeProps;\r\n\r\n                                    if (\r\n                                        menu.type !==\r\n                                        CONTEXTMENU_NODE_TYPES.SEPARATOR\r\n                                    ) {\r\n                                        contextmenuNodeProps = {\r\n                                            class: {\r\n                                                [clsName(\"node\")]: true,\r\n                                                [clsName(\"node-active\")]:\r\n                                                    activeMenuIds.includes(\r\n                                                        menu.id,\r\n                                                    ),\r\n                                                [clsName(\"node-disabled\")]:\r\n                                                    menu.disabled,\r\n                                            },\r\n                                            on: {\r\n                                                mouseover: (event) => {\r\n                                                    // disable\r\n                                                    if (!menu.disabled) {\r\n                                                        debounceCreatePanelByHover(\r\n                                                            {\r\n                                                                event,\r\n                                                                menu,\r\n                                                            },\r\n                                                        );\r\n                                                    }\r\n                                                },\r\n                                                click: () => {\r\n                                                    if (\r\n                                                        !menu.disabled &&\r\n                                                        !hasChildren(menu)\r\n                                                    ) {\r\n                                                        this.$emit(\r\n                                                            EMIT_EVENTS.ON_NODE_CLICK,\r\n                                                            menu.type,\r\n                                                        );\r\n                                                        setTimeout(() => {\r\n                                                            emptyContextmenuPanels();\r\n                                                        }, 50);\r\n                                                    }\r\n                                                },\r\n                                            },\r\n                                        };\r\n                                    }\r\n                                    // separator\r\n                                    else {\r\n                                        //\r\n                                        contextmenuNodeProps = {\r\n                                            class: {\r\n                                                [clsName(\r\n                                                    \"node-separator\",\r\n                                                )]: true,\r\n                                            },\r\n                                        };\r\n                                    }\r\n\r\n                                    if (\r\n                                        menu.type !==\r\n                                        CONTEXTMENU_NODE_TYPES.SEPARATOR\r\n                                    ) {\r\n                                        return (\r\n                                            <li {...contextmenuNodeProps}>\r\n                                                <span\r\n                                                    class={clsName(\r\n                                                        \"node-label\",\r\n                                                    )}\r\n                                                >\r\n                                                    {menu.label}\r\n                                                </span>\r\n                                                {menu.hasChildren && (\r\n                                                    <VeIcon\r\n                                                        class={clsName(\r\n                                                            \"node-icon-postfix\",\r\n                                                        )}\r\n                                                        name={\r\n                                                            ICON_NAMES.RIGHT_ARROW\r\n                                                        }\r\n                                                    />\r\n                                                )}\r\n                                            </li>\r\n                                        );\r\n                                    } else {\r\n                                        return (\r\n                                            <li {...contextmenuNodeProps}></li>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import VeContextmenu from \"./src/index.jsx\";\r\n\r\nVeContextmenu.install = function (Vue) {\r\n    Vue.component(VeContextmenu.name, VeContextmenu);\r\n};\r\n\r\nexport default VeContextmenu;\r\n","export default {\r\n    bind: function (el, binding, vNode) {\r\n        if (typeof binding.value !== \"function\") {\r\n            let msg = `in [clickoutside] directives, provided expression '${binding.expression}' is not a function `;\r\n\r\n            const compName = vNode.context.name;\r\n\r\n            if (compName) {\r\n                msg += `in ${compName}`;\r\n            }\r\n            console.error(msg);\r\n        }\r\n\r\n        var handler = (e) => {\r\n            if (!el.contains(e.target) && el !== e.target) {\r\n                binding.value(e);\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        el.__clickOutSide__ = handler;\r\n\r\n        document.addEventListener(\"click\", handler, true);\r\n    },\r\n\r\n    unbind: function (el) {\r\n        document.removeEventListener(\"click\", el.__clickOutSide__, true);\r\n        el.__clickOutSide__ = null;\r\n    },\r\n};\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-radio-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    // on radio change\r\n    ON_RADIO_CHANGE: \"on-radio-change\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_RADIO: \"VeRadio\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_RADIO,\r\n    props: {\r\n        // 当前checkbox 选中状态,实现 v-model\r\n        value: {\r\n            type: [String, Number, Boolean],\r\n            default: null,\r\n        },\r\n        label: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // is disabled checked\r\n        disabled: Boolean,\r\n        // 是否是可控组件\r\n        isControlled: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // isControlled 为true 时生效\r\n        isSelected: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // 当前checkbox 选中状态\r\n            model: this.value,\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        radioClass() {\r\n            return [\r\n                clsName(\"container\"),\r\n                {\r\n                    [clsName(\"checked\")]: this.internalIsSelected,\r\n                    [clsName(\"disabled\")]: this.disabled,\r\n                },\r\n            ];\r\n        },\r\n\r\n        // 是否选中\r\n        internalIsSelected() {\r\n            return this.isControlled ? this.isSelected : this.model;\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        value() {\r\n            this.updateModelBySingle();\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // checked change\r\n        checkedChange(event) {\r\n            if (this.disabled) {\r\n                return false;\r\n            }\r\n            const isChecked = event.target.checked;\r\n\r\n            if (!this.isControlled) {\r\n                this.$emit(\"input\", isChecked);\r\n            }\r\n            this.$emit(EMIT_EVENTS.ON_RADIO_CHANGE, isChecked);\r\n        },\r\n\r\n        // get label content\r\n        getLabelContent() {\r\n            const { label, $slots } = this;\r\n\r\n            return label ? label : $slots.default;\r\n        },\r\n\r\n        initModel() {\r\n            this.model = this.value;\r\n        },\r\n\r\n        // 通过单选更新 model\r\n        updateModelBySingle() {\r\n            if (!this.disabled) {\r\n                this.model = this.value;\r\n            }\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.initModel();\r\n    },\r\n    render() {\r\n        const {\r\n            label,\r\n            radioClass,\r\n            checkedChange,\r\n            getLabelContent,\r\n            internalIsSelected,\r\n        } = this;\r\n\r\n        return (\r\n            <label class={\"ve-radio\"}>\r\n                <span class={radioClass}>\r\n                    <input\r\n                        checked={internalIsSelected}\r\n                        class={clsName(\"input\")}\r\n                        type=\"radio\"\r\n                        value={label}\r\n                        on-change={checkedChange}\r\n                    />\r\n\r\n                    <span class={clsName(\"inner\")}></span>\r\n                </span>\r\n                <span class={clsName(\"label\")}>{getLabelContent()}</span>\r\n            </label>\r\n        );\r\n    },\r\n};\r\n","import VeRadio from \"./src/index\";\r\n\r\nVeRadio.install = function (Vue) {\r\n    Vue.component(VeRadio.name, VeRadio);\r\n};\r\n\r\nexport default VeRadio;\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-dropdown-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    FILTER_RESET: \"on-filter-reset\",\r\n    FILTER_CONFIRM: \"on-filter-confirm\",\r\n    VISIBLE_CHANGE: \"on-dropdown-visible-change\",\r\n    ITEM_SELECT_CHANGE: \"on-item-select-change\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_DROPDOWN: \"VeDropdown\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","import clickoutside from \"../../src/directives/clickoutside.js\";\r\nimport VeCheckbox from \"vue-easytable/packages/ve-checkbox\";\r\nimport VeRadio from \"vue-easytable/packages/ve-radio\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\r\nimport { clsName } from \"./util/index\";\r\nimport { isFunction, isBoolean } from \"../../src/utils\";\r\nimport { getRandomId } from \"../../src/utils/random\";\r\nimport {\r\n    getViewportOffset,\r\n    getViewportOffsetWithinContainer,\r\n} from \"../../src/utils/dom\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_DROPDOWN,\r\n    directives: {\r\n        \"click-outside\": clickoutside,\r\n    },\r\n    props: {\r\n        // 如果是select 组件将特殊处理\r\n        isSelect: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        showOperation: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n\r\n        width: {\r\n            type: Number,\r\n            default: 90,\r\n        },\r\n\r\n        // select的最大宽度(超出隐藏)\r\n        maxWidth: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        // max height\r\n        maxHeight: {\r\n            type: Number,\r\n            default: 1000,\r\n        },\r\n\r\n        // 如果为true 会包含 checkbox\r\n        isMultiple: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n\r\n        // 用户传入v-model 的值 [{value/label/selected}]\r\n        value: {\r\n            type: [Array],\r\n            default: null,\r\n        },\r\n\r\n        // 文本居中方式 left|center|right\r\n        textAlign: {\r\n            type: String,\r\n            default: \"left\",\r\n        },\r\n\r\n        // 是否支持输入input\r\n        isInput: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // confirm filter text\r\n        confirmFilterText: {\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        // confirm filter text\r\n        resetFilterText: {\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        // hide by single selection item click\r\n        hideByItemClick: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // is show radio when single selection\r\n        showRadio: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // 当 isControlled=true ,visible 生效\r\n        visible: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // is controlled\r\n        isControlled: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // is custom content\r\n        isCustomContent: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // instance between dropdown items and trigger element\r\n        defaultInstance: {\r\n            type: Number,\r\n            default: 5,\r\n        },\r\n        // popper append to element\r\n        popperAppendTo: {\r\n            type: [String, HTMLElement],\r\n            default: function () {\r\n                return document.body;\r\n            },\r\n        },\r\n        /*\r\n        before visible change\r\n        如果返回false 则阻止显示或者关闭\r\n        */\r\n        beforeVisibleChange: {\r\n            type: Function,\r\n            default: null,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            internalVisible: false,\r\n            internalOptions: [],\r\n            inputValue: \"\",\r\n            // 是否显示触发器被点击了（被点击将忽略 clickOutside 事件）\r\n            isDropdownShowTriggerClicked: false,\r\n            // root id\r\n            rootId: \"\",\r\n            // dropdown items panel id\r\n            dropdownItemsPanelId: \"\",\r\n            // 弹出被添加到的目标元素\r\n            popperAppendToEl: null,\r\n            // 弹出被添加到的目标元素标签名称\r\n            appendToElTagName: null,\r\n        };\r\n    },\r\n    computed: {\r\n        // is dropdown visible\r\n        isDropdownVisible() {\r\n            return this.isControlled ? this.visible : this.internalVisible;\r\n        },\r\n\r\n        // 获取最大宽度(不设置则是无穷大)\r\n        getMaxWidth() {\r\n            var result = Infinity,\r\n                maxWidth = this.maxWidth,\r\n                width = this.width;\r\n\r\n            if (maxWidth && maxWidth > 0 && maxWidth > width) {\r\n                result = maxWidth;\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // selected labels\r\n        selectedLabels() {\r\n            return this.internalOptions\r\n                .filter((x) => x.selected)\r\n                .map((x) => {\r\n                    if (x.selected) {\r\n                        return x.label;\r\n                    }\r\n                });\r\n        },\r\n        // operation buttons class\r\n        operationFilterClass() {\r\n            let result = null;\r\n            result = {\r\n                [clsName(\"filter-disable\")]: this.selectedLabels.length === 0,\r\n            };\r\n\r\n            return result;\r\n        },\r\n        // dropdown items class\r\n        dropdownItemsClass() {\r\n            return {\r\n                [clsName(\"dd\")]: true,\r\n                [clsName(\"dd-show\")]: this.isDropdownVisible,\r\n            };\r\n        },\r\n    },\r\n    watch: {\r\n        value: function () {\r\n            this.init();\r\n        },\r\n        visible: {\r\n            handler(visible) {\r\n                const { isControlled, showDropDown, hideDropDown } = this;\r\n                // deal after mounted hook\r\n                setTimeout(() => {\r\n                    if (isControlled) {\r\n                        if (visible) {\r\n                            showDropDown();\r\n                        } else {\r\n                            hideDropDown();\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n    methods: {\r\n        // 初始化\r\n        init() {\r\n            this.internalOptions = Object.assign([], this.value);\r\n\r\n            if (this.isInput) {\r\n                this.setInputValue();\r\n            }\r\n        },\r\n\r\n        // operation filter confirm\r\n        confirm() {\r\n            // 使用户传入的v-model 生效\r\n            this.$emit(\"input\", this.internalOptions);\r\n            this.$emit(EMIT_EVENTS.FILTER_CONFIRM, this.internalOptions);\r\n            this.hideDropDown();\r\n        },\r\n\r\n        // operation filter reset\r\n        reset() {\r\n            if (this.internalOptions.some((x) => x.selected)) {\r\n                this.internalOptions.map((x) => {\r\n                    if (x.selected) {\r\n                        x.selected = false;\r\n                    }\r\n                    return x;\r\n                });\r\n\r\n                // 使用户传入的v-model 生效\r\n                this.$emit(\"input\", this.internalOptions);\r\n\r\n                this.$emit(EMIT_EVENTS.FILTER_RESET, this.internalOptions);\r\n            }\r\n\r\n            this.hideDropDown();\r\n        },\r\n\r\n        // show dropdown\r\n        showDropDown() {\r\n            const { rootId, dropdownItemsPanelId } = this;\r\n\r\n            const nextVisible = true;\r\n\r\n            const allowChange = this.beforeVisibleChangeCallback(nextVisible);\r\n            if (isBoolean(allowChange) && !allowChange) {\r\n                return false;\r\n            }\r\n\r\n            let rootEl = document.querySelector(`#${rootId}`);\r\n\r\n            if (rootEl) {\r\n                // remove first\r\n                rootEl.innerHTML = \"\";\r\n                rootEl.appendChild(this.$refs[dropdownItemsPanelId]);\r\n\r\n                rootEl.style.position = \"absolute\";\r\n                rootEl.classList.add(clsName(\"popper\"));\r\n\r\n                this.changDropdownPanelPosition();\r\n            }\r\n\r\n            this.internalVisible = true;\r\n\r\n            this.$emit(EMIT_EVENTS.VISIBLE_CHANGE, nextVisible);\r\n        },\r\n\r\n        // hide dropdown\r\n        hideDropDown() {\r\n            const nextVisible = false;\r\n\r\n            const allowChange = this.beforeVisibleChangeCallback(nextVisible);\r\n            if (isBoolean(allowChange) && !allowChange) {\r\n                return false;\r\n            }\r\n\r\n            this.$emit(EMIT_EVENTS.VISIBLE_CHANGE, nextVisible);\r\n\r\n            setTimeout(() => {\r\n                this.internalVisible = false;\r\n                this.removeOrEmptyRootPanel();\r\n            }, 150);\r\n        },\r\n\r\n        // before visible change callback\r\n        beforeVisibleChangeCallback(nextVisible) {\r\n            const { beforeVisibleChange, isDropdownVisible } = this;\r\n\r\n            if (\r\n                nextVisible !== isDropdownVisible &&\r\n                isFunction(beforeVisibleChange)\r\n            ) {\r\n                // next visible\r\n                return beforeVisibleChange({\r\n                    nextVisible,\r\n                });\r\n            }\r\n        },\r\n\r\n        // remove or emoty root panel\r\n        removeOrEmptyRootPanel() {\r\n            const { rootId } = this;\r\n\r\n            let rootEl = document.querySelector(`#${rootId}`);\r\n            if (rootEl) {\r\n                rootEl.innerHTML = \"\";\r\n            }\r\n        },\r\n\r\n        // change dropdown panel position\r\n        changDropdownPanelPosition() {\r\n            const {\r\n                defaultInstance,\r\n                rootId,\r\n                popperAppendToEl,\r\n                appendToElTagName,\r\n            } = this;\r\n\r\n            let rootEl = document.querySelector(`#${rootId}`);\r\n\r\n            if (rootEl) {\r\n                const { width: currentPanelWidth, height: currentPanelHeight } =\r\n                    rootEl.getBoundingClientRect();\r\n\r\n                const triggerEl = this.$el.querySelector(\".ve-dropdown-dt\");\r\n                const { height: triggerElHeight } =\r\n                    triggerEl.getBoundingClientRect();\r\n\r\n                if (!popperAppendToEl) {\r\n                    return false;\r\n                }\r\n\r\n                // is append to body\r\n                const isAppendToBody = appendToElTagName === \"BODY\";\r\n\r\n                const {\r\n                    offsetLeft: triggerElLeft,\r\n                    offsetTop: triggerElTop,\r\n                    right: triggerElRight,\r\n                    bottom: triggerElBottom,\r\n                } = isAppendToBody\r\n                    ? getViewportOffset(triggerEl)\r\n                    : getViewportOffsetWithinContainer(\r\n                          triggerEl,\r\n                          popperAppendToEl,\r\n                      );\r\n\r\n                let panelX = 0;\r\n                let panelY = 0;\r\n\r\n                // 如果不是添加到body 需要考虑外层容器滚动调的影响\r\n                let scrollLeft = 0;\r\n                let scrollTop = 0;\r\n                if (!isAppendToBody) {\r\n                    scrollLeft = popperAppendToEl.scrollLeft;\r\n                    scrollTop = popperAppendToEl.scrollTop;\r\n                }\r\n\r\n                // 右方宽度够显示\r\n                if (triggerElRight >= currentPanelWidth) {\r\n                    panelX = triggerElLeft + scrollLeft;\r\n                }\r\n                // 右方宽度不够显示在鼠标点击左方\r\n                else {\r\n                    panelX = triggerElLeft - currentPanelWidth + scrollLeft;\r\n                }\r\n\r\n                // 下方高度够显示\r\n                if (triggerElBottom >= currentPanelHeight) {\r\n                    panelY =\r\n                        triggerElTop +\r\n                        triggerElHeight +\r\n                        defaultInstance +\r\n                        scrollTop;\r\n                }\r\n                // 下方高度不够显示在鼠标点击上方\r\n                else {\r\n                    panelY =\r\n                        triggerElTop -\r\n                        currentPanelHeight -\r\n                        defaultInstance +\r\n                        scrollTop;\r\n                }\r\n\r\n                rootEl.style.left = panelX + \"px\";\r\n                rootEl.style.top = panelY + \"px\";\r\n            }\r\n        },\r\n\r\n        // 设置文本框的值\r\n        setInputValue() {\r\n            var result, labels;\r\n\r\n            labels = this.selectedLabels;\r\n            if (Array.isArray(labels) && labels.length > 0) {\r\n                result = labels.join();\r\n            }\r\n\r\n            this.inputValue = result;\r\n        },\r\n\r\n        // dropdown panel click\r\n        dropdownPanelClick() {\r\n            this.isDropdownShowTriggerClicked = true;\r\n            this.dropdownShowToggle();\r\n        },\r\n\r\n        // dropdown show toggle\r\n        dropdownShowToggle() {\r\n            if (this.isDropdownVisible) {\r\n                this.hideDropDown();\r\n            } else {\r\n                this.showDropDown();\r\n            }\r\n        },\r\n\r\n        // single select option click\r\n        singleSelectOptionClick(e, item) {\r\n            this.internalOptions = this.internalOptions.map((x) => {\r\n                if (item.label === x.label) {\r\n                    x.selected = true;\r\n                } else {\r\n                    x.selected = false;\r\n                }\r\n                return x;\r\n            });\r\n\r\n            if (this.hideByItemClick) {\r\n                this.hideDropDown();\r\n            }\r\n\r\n            if (this.isInput) {\r\n                this.setInputValue();\r\n            }\r\n\r\n            // 使用户传入的v-model 生效\r\n            this.$emit(\"input\", this.internalOptions);\r\n\r\n            this.$emit(EMIT_EVENTS.ITEM_SELECT_CHANGE, this.internalOptions);\r\n        },\r\n\r\n        // 获取样式名称\r\n        getTextAlignClass() {\r\n            return clsName(`items-li-a-${this.textAlign}`);\r\n        },\r\n\r\n        // dropdown click outSide\r\n        dropdownClickOutside() {\r\n            /*\r\n            是否显示触发器被点击了（被点击将忽略 clickOutside 事件）\r\n            */\r\n            setTimeout(() => {\r\n                if (this.isDropdownShowTriggerClicked) {\r\n                    this.isDropdownShowTriggerClicked = false;\r\n                } else {\r\n                    this.hideDropDown();\r\n                }\r\n            });\r\n        },\r\n\r\n        // checbox 受控属性管理\r\n        checkedChangeControl(item, isChecked) {\r\n            this.internalOptions = this.internalOptions.map((i) => {\r\n                if (i.label === item.label) {\r\n                    i.selected = isChecked;\r\n                }\r\n                return i;\r\n            });\r\n\r\n            this.$emit(EMIT_EVENTS.ITEM_SELECT_CHANGE, this.internalOptions);\r\n        },\r\n\r\n        // get random id\r\n        getRandomIdWithPrefix() {\r\n            return clsName(getRandomId());\r\n        },\r\n\r\n        /*\r\n        add root element to element\r\n        如果不指定则添加到 body\r\n        */\r\n        addRootElementToElement() {\r\n            const { popperAppendTo } = this;\r\n\r\n            this.rootId = this.getRandomIdWithPrefix();\r\n            this.dropdownItemsPanelId = this.getRandomIdWithPrefix();\r\n\r\n            let rootEl = document.querySelector(`#${this.rootId}`);\r\n\r\n            if (rootEl) {\r\n                return false;\r\n            } else {\r\n                // fixed unit test error: [Vue warn]: Error in v-on handler: \"TypeError: Failed to execute 'appendChild' on 'Node': parameter 1 is not of type 'Node'.\"\r\n                this.$nextTick(() => {\r\n                    let containerEl = document.createElement(\"div\");\r\n\r\n                    containerEl.setAttribute(\"id\", this.rootId);\r\n\r\n                    if (\r\n                        typeof popperAppendTo === \"string\" &&\r\n                        popperAppendTo.length > 0\r\n                    ) {\r\n                        this.popperAppendToEl =\r\n                            document.querySelector(popperAppendTo);\r\n                    } else {\r\n                        this.popperAppendToEl = popperAppendTo;\r\n                    }\r\n\r\n                    this.appendToElTagName = this.popperAppendToEl.tagName;\r\n\r\n                    this.popperAppendToEl.appendChild(containerEl);\r\n                });\r\n            }\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.init();\r\n    },\r\n    mounted() {\r\n        this.addRootElementToElement();\r\n\r\n        this.$nextTick(() => {\r\n            const targetEl =\r\n                this.appendToElTagName === \"BODY\"\r\n                    ? document\r\n                    : this.popperAppendToEl;\r\n            targetEl.addEventListener(\r\n                \"scroll\",\r\n                this.changDropdownPanelPosition,\r\n            );\r\n        });\r\n        window.addEventListener(\"resize\", this.changDropdownPanelPosition);\r\n    },\r\n\r\n    destroyed() {\r\n        this.removeOrEmptyRootPanel();\r\n\r\n        this.$nextTick(() => {\r\n            const targetEl =\r\n                this.appendToElTagName === \"BODY\"\r\n                    ? document\r\n                    : this.popperAppendToEl;\r\n            targetEl.removeEventListener(\r\n                \"scroll\",\r\n                this.changDropdownPanelPosition,\r\n            );\r\n        });\r\n        window.removeEventListener(\"resize\", this.changDropdownPanelPosition);\r\n    },\r\n\r\n    render() {\r\n        const {\r\n            isMultiple,\r\n            getTextAlignClass,\r\n            internalOptions,\r\n            isSelect,\r\n            width,\r\n            maxHeight,\r\n            dropdownPanelClick,\r\n            getMaxWidth,\r\n            reset,\r\n            singleSelectOptionClick,\r\n            showOperation,\r\n            isCustomContent,\r\n            dropdownItemsClass,\r\n            dropdownItemsPanelId,\r\n        } = this;\r\n\r\n        let content = \"\";\r\n\r\n        if (isMultiple) {\r\n            content = internalOptions.map((item, index) => {\r\n                const checkboxProps = {\r\n                    key: item.label,\r\n                    props: {\r\n                        isControlled: true,\r\n                        label: item.label,\r\n                        showLine: item.showLine,\r\n                        isSelected: item.selected,\r\n                    },\r\n                    on: {\r\n                        \"on-checked-change\": (isChecked) =>\r\n                            this.checkedChangeControl(item, isChecked),\r\n                    },\r\n                };\r\n\r\n                return (\r\n                    <li\r\n                        key={index}\r\n                        class={[\r\n                            clsName(\"items-multiple\"),\r\n                            clsName(\"items-li\"),\r\n                            getTextAlignClass(),\r\n                        ]}\r\n                    >\r\n                        <VeCheckbox {...checkboxProps} />\r\n                    </li>\r\n                );\r\n            });\r\n        } else {\r\n            content = internalOptions.map((item, index) => {\r\n                const radioProps = {\r\n                    props: {\r\n                        isControlled: true,\r\n                        isSelected: item.selected,\r\n                    },\r\n                    on: {\r\n                        \"on-radio-change\": () => {},\r\n                    },\r\n                };\r\n\r\n                return (\r\n                    <li\r\n                        key={index}\r\n                        class={[\r\n                            clsName(\"items-li\"),\r\n                            item.selected ? \"active\" : \"\",\r\n                        ]}\r\n                        on-click={(e) => singleSelectOptionClick(e, item)}\r\n                    >\r\n                        <a\r\n                            class={[clsName(\"items-li-a\"), getTextAlignClass()]}\r\n                            href=\"javascript:void(0);\"\r\n                        >\r\n                            {this.showRadio ? (\r\n                                <VeRadio {...radioProps}>{item.label}</VeRadio>\r\n                            ) : (\r\n                                item.label\r\n                            )}\r\n                        </a>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n\r\n        const dropdownProps = {\r\n            class: [\"ve-dropdown\"],\r\n        };\r\n\r\n        const dropdownItemsProps = {\r\n            ref: dropdownItemsPanelId,\r\n            class: dropdownItemsClass,\r\n            directives: [\r\n                {\r\n                    name: \"click-outside\",\r\n                    value: this.dropdownClickOutside,\r\n                },\r\n            ],\r\n        };\r\n\r\n        return (\r\n            <dl {...dropdownProps}>\r\n                <dt class=\"ve-dropdown-dt\" on-click={dropdownPanelClick}>\r\n                    <a\r\n                        class={[isSelect ? clsName(\"dt-selected\") : \"\"]}\r\n                        style={{ width: width + \"px\" }}\r\n                    >\r\n                        {this.$slots.default}\r\n                    </a>\r\n                </dt>\r\n                <div style={{ display: \"none\" }}>\r\n                    <dd {...dropdownItemsProps}>\r\n                        <ul\r\n                            class={clsName(\"items\")}\r\n                            style={{\r\n                                \"min-width\": width + \"px\",\r\n                                \"max-width\": getMaxWidth + \"px\",\r\n                            }}\r\n                        >\r\n                            {/* custome content */}\r\n                            {isCustomContent && this.$slots[\"custom-content\"]}\r\n                            {/* not custom content */}\r\n                            {!isCustomContent && (\r\n                                <div>\r\n                                    <div\r\n                                        style={{\r\n                                            \"max-height\": maxHeight + \"px\",\r\n                                        }}\r\n                                        class={clsName(\"items-warpper\")}\r\n                                    >\r\n                                        {content}\r\n                                    </div>\r\n                                    {showOperation && (\r\n                                        <li class={clsName(\"operation\")}>\r\n                                            <a\r\n                                                class={[\r\n                                                    clsName(\"operation-item\"),\r\n                                                    this.operationFilterClass,\r\n                                                ]}\r\n                                                href=\"javascript:void(0)\"\r\n                                                on-click={reset}\r\n                                            >\r\n                                                {this.resetFilterText}\r\n                                            </a>\r\n                                            <a\r\n                                                class={clsName(\r\n                                                    \"operation-item\",\r\n                                                )}\r\n                                                href=\"javascript:void(0)\"\r\n                                                on-click={this.confirm}\r\n                                            >\r\n                                                {this.confirmFilterText}\r\n                                            </a>\r\n                                        </li>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </ul>\r\n                    </dd>\r\n                </div>\r\n            </dl>\r\n        );\r\n    },\r\n};\r\n","import VeDropdown from \"./src/index.jsx\";\r\n\r\nVeDropdown.install = function (Vue) {\r\n    Vue.component(VeDropdown.name, VeDropdown);\r\n};\r\n\r\nexport default VeDropdown;\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-loading-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_LOADING: \"VeLoading\",\r\n    VE_LOADING_PLANE: \"VeLoadingPlane\",\r\n    /* VE_LOADING_CHASE: \"VeLoadingChase\", */\r\n    VE_LOADING_BOUNCE: \"VeLoadingBounce\",\r\n    VE_LOADING_WAVE: \"VeLoadingWave\",\r\n    VE_LOADING_PULSE: \"VeLoadingPulse\",\r\n    VE_LOADING_FLOW: \"VeLoadingFlow\",\r\n    /* VE_LOADING_SWING: \"VeLoadingSwing\", */\r\n    /*  VE_LOADING_CIRCLE: \"VeLoadingCircle\",\r\n    VE_LOADING_CIRCLE_FADE: \"VeLoadingCircleFade\", */\r\n    VE_LOADING_GRID: \"VeLoadingGrid\",\r\n    VE_LOADING_FOLD: \"VeLoadingFold\",\r\n};\r\n\r\n// spin name\r\nexport const SPIN_NAMES = {\r\n    PLANE: \"plane\",\r\n    GRID: \"grid\",\r\n    WAVE: \"wave\",\r\n    FLOW: \"flow\",\r\n    BOUNCE: \"bounce\",\r\n    PULSE: \"pulse\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING_PLANE,\r\n    props: {\r\n        color: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        width: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n        height: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // spin style\r\n        spinStyle() {\r\n            const { color, width, height } = this;\r\n\r\n            let result = {\r\n                width: getValByUnit(width),\r\n                height: getValByUnit(height),\r\n                \"background-color\": color,\r\n            };\r\n\r\n            return result;\r\n        },\r\n    },\r\n    render() {\r\n        return <div style={this.spinStyle} class={clsName(\"plane\")} />;\r\n    },\r\n};\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING_BOUNCE,\r\n    props: {\r\n        color: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        width: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n        height: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // spin style\r\n        spinStyle() {\r\n            const { width, height } = this;\r\n\r\n            let result = {\r\n                width: getValByUnit(width),\r\n                height: getValByUnit(height),\r\n            };\r\n\r\n            return result;\r\n        },\r\n        itemStyle() {\r\n            const { color } = this;\r\n\r\n            return {\r\n                \"background-color\": color,\r\n            };\r\n        },\r\n    },\r\n    render() {\r\n        const { spinStyle, itemStyle } = this;\r\n        return (\r\n            <div style={spinStyle} class={clsName(\"bounce\")}>\r\n                <div style={itemStyle} class={clsName(\"bounce-dot\")}></div>\r\n                <div style={itemStyle} class={clsName(\"bounce-dot\")}></div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING_WAVE,\r\n    props: {\r\n        color: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        width: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n        height: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // spin style\r\n        spinStyle() {\r\n            const { width, height } = this;\r\n\r\n            let result = {\r\n                width: getValByUnit(width),\r\n                height: getValByUnit(height),\r\n            };\r\n\r\n            return result;\r\n        },\r\n        itemStyle() {\r\n            const { color } = this;\r\n\r\n            return {\r\n                \"background-color\": color,\r\n            };\r\n        },\r\n    },\r\n    render() {\r\n        const { spinStyle, itemStyle } = this;\r\n        return (\r\n            <div style={spinStyle} class={clsName(\"wave\")}>\r\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\r\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\r\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\r\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\r\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING_PULSE,\r\n    props: {\r\n        color: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        width: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n        height: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // spin style\r\n        spinStyle() {\r\n            const { color, width, height } = this;\r\n\r\n            let result = {\r\n                width: getValByUnit(width),\r\n                height: getValByUnit(height),\r\n                \"background-color\": color,\r\n            };\r\n\r\n            return result;\r\n        },\r\n    },\r\n    render() {\r\n        return <div style={this.spinStyle} class={clsName(\"pulse\")} />;\r\n    },\r\n};\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING_FLOW,\r\n    props: {\r\n        color: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        width: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n        height: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // spin style\r\n        spinStyle() {\r\n            const { width, height } = this;\r\n\r\n            let result = {\r\n                width: getValByUnit(width),\r\n                height: getValByUnit(height),\r\n            };\r\n\r\n            return result;\r\n        },\r\n        itemStyle() {\r\n            const { color } = this;\r\n\r\n            return {\r\n                \"background-color\": color,\r\n            };\r\n        },\r\n    },\r\n    render() {\r\n        const { spinStyle, itemStyle } = this;\r\n        return (\r\n            <div style={spinStyle} class={clsName(\"flow\")}>\r\n                <div style={itemStyle} class={clsName(\"flow-dot\")}></div>\r\n                <div style={itemStyle} class={clsName(\"flow-dot\")}></div>\r\n                <div style={itemStyle} class={clsName(\"flow-dot\")}></div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"./util/constant\";\r\nimport { getValByUnit } from \"../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING_GRID,\r\n    props: {\r\n        color: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        width: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n        height: {\r\n            type: [Number, String],\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // spin style\r\n        spinStyle() {\r\n            const { width, height } = this;\r\n\r\n            let result = {\r\n                width: getValByUnit(width),\r\n                height: getValByUnit(height),\r\n            };\r\n\r\n            return result;\r\n        },\r\n        itemStyle() {\r\n            const { color } = this;\r\n\r\n            return {\r\n                \"background-color\": color,\r\n            };\r\n        },\r\n    },\r\n    render() {\r\n        const { spinStyle, itemStyle } = this;\r\n        return (\r\n            <div style={spinStyle} class={clsName(\"grid\")}>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","/* thanks for  https://github.com/tobiasahlin/SpinKit*/\r\n\r\nimport { clsName } from \"./util\";\r\nimport { COMPS_NAME } from \"../src/util/constant\";\r\nimport Plane from \"./plane\";\r\nimport Bounce from \"./bounce\";\r\nimport Wave from \"./wave\";\r\nimport Pulse from \"./pulse\";\r\nimport Flow from \"./flow\";\r\nimport Grid from \"./grid\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_LOADING,\r\n    components: { Plane, Bounce, Wave, Pulse, Flow, Grid },\r\n    computed: {\r\n        // loading class\r\n        loadingClass() {\r\n            const { visible, fullscreen } = this;\r\n            return {\r\n                [clsName(\"overlay\")]: true,\r\n                [clsName(\"fixed\")]: fullscreen,\r\n                [clsName(\"hide\")]: !visible,\r\n            };\r\n        },\r\n\r\n        // loading style\r\n        loadingStyle() {\r\n            const { overlayBackgroundColor } = this;\r\n\r\n            return {\r\n                \"background-color\": overlayBackgroundColor,\r\n            };\r\n        },\r\n    },\r\n\r\n    render() {\r\n        const { width, height, color } = this;\r\n\r\n        const spinProps = {\r\n            props: {\r\n                width,\r\n                height,\r\n                color,\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div\r\n                style={this.loadingStyle}\r\n                class={[\"ve-loading\", this.loadingClass]}\r\n            >\r\n                <div class={clsName(\"spin-container\")}>\r\n                    <div class={clsName(\"spin\")}>\r\n                        <this.name {...spinProps}></this.name>\r\n                    </div>\r\n                    <div style={{ color: color }} class={clsName(\"spin-tip\")}>\r\n                        {this.tip}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import Vue from \"vue\";\r\nimport VeLoading from \"./loading.jsx\";\r\nimport { addClass, removeClass } from \"../../src/utils/dom\";\r\nimport { clsName } from \"./util\";\r\nimport { SPIN_NAMES, COMPS_NAME } from \"../src/util/constant\";\r\n\r\n// default options\r\nconst defaultOptions = {\r\n    name: \"plane\",\r\n    visible: false,\r\n    color: \"#1890ff\",\r\n    overlayBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n    width: 40,\r\n    height: 40,\r\n    tip: \"\",\r\n    fullscreen: false,\r\n    target: \"\",\r\n    lock: false,\r\n    // parent “__parent__”会被忽略\r\n    parent__: null,\r\n};\r\n\r\n// parent relative class\r\nconst PARENT_RELATIVE_CLASS = clsName(\"parent-relative\");\r\n// parent lock class\r\nconst PARENT_LOCK_CLASS = clsName(\"parent-lock\");\r\n\r\nconst LoadingConstructor = Vue.extend(VeLoading);\r\n\r\n// show\r\nLoadingConstructor.prototype.show = function () {\r\n    Vue.nextTick(() => {\r\n        if (this.lock) {\r\n            addClass(this.parent__, PARENT_LOCK_CLASS);\r\n        }\r\n        this.visible = true;\r\n    });\r\n};\r\n\r\n// close\r\nLoadingConstructor.prototype.close = function () {\r\n    Vue.nextTick(() => {\r\n        if (this.lock) {\r\n            removeClass(this.parent__, PARENT_LOCK_CLASS);\r\n        }\r\n        this.visible = false;\r\n    });\r\n};\r\n\r\n// destroy\r\nLoadingConstructor.prototype.destroy = function () {\r\n    removeClass(this.parent__, PARENT_RELATIVE_CLASS);\r\n    removeClass(this.parent__, PARENT_LOCK_CLASS);\r\n\r\n    if (this.$el && this.$el.parentNode) {\r\n        this.$el.parentNode.removeChild(this.$el);\r\n    }\r\n    this.$destroy();\r\n    this.visible = false;\r\n};\r\n\r\n// create instance\r\nfunction createInstance(options = {}) {\r\n    return new LoadingConstructor({\r\n        el: document.createElement(\"div\"),\r\n        data: options,\r\n    });\r\n}\r\n\r\n// check spin name\r\nfunction checkSpinName(name) {\r\n    if (!Object.values(SPIN_NAMES).includes(name)) {\r\n        console.error(`${name} is not found in ${COMPS_NAME.VE_LOADING}.`);\r\n    }\r\n}\r\n\r\n// Loading instance\r\nfunction Loading(options = {}) {\r\n    options = Object.assign({}, defaultOptions, options);\r\n\r\n    if (typeof options.target === \"string\" && options.target.length > 0) {\r\n        options.target = document.querySelector(options.target);\r\n    }\r\n    options.target = options.target || document.body;\r\n\r\n    checkSpinName(options.name);\r\n\r\n    if (options.target !== document.body) {\r\n        options.fullscreen = false;\r\n    } else {\r\n        options.fullscreen = true;\r\n    }\r\n\r\n    let loadingInstance = createInstance(options);\r\n\r\n    // set parent\r\n    options.parent__ = options.fullscreen ? document.body : options.target;\r\n\r\n    addClass(options.parent__, PARENT_RELATIVE_CLASS);\r\n\r\n    options.parent__.appendChild(loadingInstance.$el);\r\n\r\n    return loadingInstance;\r\n}\r\n\r\nexport default Loading;\r\n","import Vue from \"vue\";\r\nimport VeLoading from \"./src/index.js\";\r\n\r\nVeLoading.install = function (Vue) {\r\n    Vue.prototype.$veLoading = VeLoading;\r\n};\r\n\r\nexport default VeLoading;\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-pagination-\";\r\n\r\n// locale comp name\r\nexport const LOCALE_COMP_NAME = \"pagination\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    PAGE_NUMBER_CHANGE: \"on-page-number-change\",\r\n    PAGE_SIZE_CHANGE: \"on-page-size-change\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_PAGINATION: \"VePagination\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","import VeIcon from \"vue-easytable/packages/ve-icon\";\r\nimport { clsName } from \"./util\";\r\nimport { LOCALE_COMP_NAME } from \"./util/constant\";\r\nimport { createLocale } from \"../../src/utils/index\";\r\nimport { ICON_NAMES } from \"../../src/utils/constant\";\r\nconst t = createLocale(LOCALE_COMP_NAME);\r\n\r\nexport default {\r\n    props: {\r\n        pageCount: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        pageIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        pagingCount: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        numOffset() {\r\n            return Math.floor((this.pagingCount + 2) / 2) - 1;\r\n        },\r\n\r\n        showJumpPrev() {\r\n            if (this.pageCount > this.pagingCount + 2) {\r\n                if (this.pageIndex > this.pagingCount) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        showJumpNext() {\r\n            if (this.pageCount > this.pagingCount + 2) {\r\n                //if (this.pageIndex < this.pageCount - this.numOffset) {\r\n                if (this.pageIndex <= this.pageCount - this.pagingCount) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // 当前要显示的数字按钮集合\r\n        pagingCounts() {\r\n            let startNum,\r\n                result = [],\r\n                showJumpPrev = this.showJumpPrev,\r\n                showJumpNext = this.showJumpNext;\r\n\r\n            if (showJumpPrev && !showJumpNext) {\r\n                startNum = this.pageCount - this.pagingCount;\r\n                for (let i = startNum; i < this.pageCount; i++) {\r\n                    result.push(i);\r\n                }\r\n            } else if (!showJumpPrev && showJumpNext) {\r\n                for (let i = 2; i < this.pagingCount + 2; i++) {\r\n                    result.push(i);\r\n                }\r\n            } else if (showJumpPrev && showJumpNext) {\r\n                for (\r\n                    let i = this.pageIndex - this.numOffset;\r\n                    i <= this.pageIndex + this.numOffset;\r\n                    i++\r\n                ) {\r\n                    result.push(i);\r\n                }\r\n            } else {\r\n                for (let i = 2; i < this.pageCount; i++) {\r\n                    result.push(i);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n    },\r\n    methods: {\r\n        jumpPage(pageIndex) {\r\n            this.$emit(\"jumpPageHandler\", pageIndex);\r\n        },\r\n    },\r\n    render() {\r\n        const {\r\n            pageIndex,\r\n            jumpPage,\r\n            showJumpPrev,\r\n            pagingCount,\r\n            pagingCounts,\r\n            showJumpNext,\r\n            pageCount,\r\n        } = this;\r\n\r\n        return (\r\n            <span class={clsName(\"pager\")}>\r\n                <li\r\n                    class={[\r\n                        pageIndex === 1 ? clsName(\"li-active\") : \"\",\r\n                        clsName(\"li\"),\r\n                    ]}\r\n                    on-click={() => jumpPage(1)}\r\n                >\r\n                    <a>1</a>\r\n                </li>\r\n\r\n                {showJumpPrev && (\r\n                    <li\r\n                        class={[\r\n                            pageIndex === 1 ? \"disabled\" : \"\",\r\n                            clsName(\"li\"),\r\n                            clsName(\"jump-prev\"),\r\n                        ]}\r\n                        title={t(\"prev5\", pagingCount)}\r\n                        on-click={() => jumpPage(pageIndex - pagingCount)}\r\n                    >\r\n                        <a>\r\n                            <VeIcon name={ICON_NAMES.DOUBLE_LEFT_ARROW} />\r\n                        </a>\r\n                    </li>\r\n                )}\r\n                {pagingCounts.map((number, index) => {\r\n                    return (\r\n                        <li\r\n                            key={index}\r\n                            class={[\r\n                                number === pageIndex\r\n                                    ? clsName(\"li-active\")\r\n                                    : \"\",\r\n                                clsName(\"li\"),\r\n                            ]}\r\n                            on-click={() => jumpPage(number)}\r\n                        >\r\n                            <a>{number}</a>\r\n                        </li>\r\n                    );\r\n                })}\r\n\r\n                {showJumpNext && (\r\n                    <li\r\n                        class={[clsName(\"li\"), clsName(\"jump-next\")]}\r\n                        title={t(\"next5\", pagingCount)}\r\n                        on-click={() => jumpPage(pageIndex + pagingCount)}\r\n                    >\r\n                        <a>\r\n                            <VeIcon name={ICON_NAMES.DOUBLE_RIGHT_ARROW} />\r\n                        </a>\r\n                    </li>\r\n                )}\r\n\r\n                {pageCount > 1 && (\r\n                    <li\r\n                        class={[\r\n                            pageIndex === pageCount ? clsName(\"li-active\") : \"\",\r\n                            clsName(\"li\"),\r\n                        ]}\r\n                        on-click={() => jumpPage(pageCount)}\r\n                    >\r\n                        <a>{pageCount}</a>\r\n                    </li>\r\n                )}\r\n            </span>\r\n        );\r\n    },\r\n};\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-select-\";\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    // on select change\r\n    SELECT_CHANGE: \"on-select-change\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_SELECT: \"VeSelect\",\r\n};\r\n","import { PREFIX_CLS } from \"./constant\";\r\n\r\n/*\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n","import VeDropdown from \"vue-easytable/packages/ve-dropdown\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\r\nimport { clsName } from \"./util/index\";\r\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\r\nimport { ICON_NAMES } from \"../../src/utils/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_SELECT,\r\n    props: {\r\n        width: {\r\n            type: Number,\r\n            default: 90,\r\n        },\r\n\r\n        // select的最大宽度(超出隐藏)\r\n        maxWidth: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n\r\n        // 如果为true 会包含 checkbox\r\n        isMultiple: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n\r\n        // 用户传入v-model 的值 [{value/label/selected}]\r\n        value: {\r\n            type: Array,\r\n            default: null,\r\n        },\r\n\r\n        // 占位符\r\n        placeholder: {\r\n            type: String,\r\n            default: \"请选择\",\r\n            validator: function (value) {\r\n                return value.length > 0;\r\n            },\r\n        },\r\n\r\n        // 文本居中方式 left|center|right\r\n        textAlign: {\r\n            type: String,\r\n            default: \"left\",\r\n        },\r\n\r\n        // 是否支持输入input\r\n        isInput: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // popper append to element\r\n        popperAppendTo: {\r\n            type: [String, HTMLElement],\r\n            default: function () {\r\n                return document.body;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            visible: false,\r\n\r\n            internalOptions: [],\r\n\r\n            inputValue: \"\",\r\n            // dorpdown visible\r\n            dropdownVisible: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // icon class\r\n        iconClass() {\r\n            return {\r\n                [clsName(\"show\")]: this.dropdownVisible,\r\n                [clsName(\"toggle-icon\")]: true,\r\n            };\r\n        },\r\n    },\r\n    watch: {\r\n        value: function () {\r\n            this.init();\r\n        },\r\n    },\r\n    methods: {\r\n        // 初始化\r\n        init() {\r\n            this.internalOptions = Object.assign([], this.value);\r\n        },\r\n\r\n        // 显示选中的信息\r\n        showSelectInfo() {\r\n            var result, labels;\r\n\r\n            labels = this.selectedLabels();\r\n            if (Array.isArray(labels) && labels.length > 0) {\r\n                result = labels.join();\r\n            } else {\r\n                result = this.placeholder;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // 当前选中项的label\r\n        selectedLabels() {\r\n            return this.internalOptions\r\n                .filter((x) => x.selected)\r\n                .map((x) => {\r\n                    if (x.selected) {\r\n                        return x.label;\r\n                    }\r\n                });\r\n        },\r\n\r\n        // dropdown change event\r\n        dropdownChange() {\r\n            // 使用户传入的v-model 生效\r\n            this.$emit(\"input\", this.internalOptions);\r\n            this.$emit(EMIT_EVENTS.SELECT_CHANGE, this.internalOptions);\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.init();\r\n    },\r\n    render() {\r\n        const { isInput } = this;\r\n\r\n        const props = {\r\n            class: \"ve-select\",\r\n            props: {\r\n                isSelect: true,\r\n                width: this.width,\r\n                maxWidth: this.maxWidth,\r\n                isMultiple: this.isMultiple,\r\n                textAlign: this.textAlign,\r\n                isInput: this.isInput,\r\n                // v-model\r\n                value: this.internalOptions,\r\n                hideByItemClick: true,\r\n                popperAppendTo: this.popperAppendTo,\r\n            },\r\n            style: {\r\n                width: this.width,\r\n            },\r\n            on: {\r\n                //change: this.dropdownChange,\r\n                // v-model\r\n                input: (val) => {\r\n                    this.internalOptions = val;\r\n                    this.dropdownChange();\r\n                },\r\n                // dropdown visible change\r\n                \"dropdown-visible-change\": (visible) => {\r\n                    this.dropdownVisible = visible;\r\n                },\r\n            },\r\n        };\r\n\r\n        let content = \"\";\r\n        if (isInput) {\r\n            content = (\r\n                <input\r\n                    class={clsName(\"input\")}\r\n                    placeholder={this.placeholder}\r\n                    type=\"text\"\r\n                    v-model={this.inputValue}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <span class={clsName(\"selected-span\")}>\r\n                    {this.showSelectInfo()}\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <VeDropdown {...props}>\r\n                <span>\r\n                    {content}\r\n                    <VeIcon\r\n                        name={ICON_NAMES.BOTTOM_ARROW}\r\n                        class={this.iconClass}\r\n                    />\r\n                    {/* <i class={[this.iconClass]}></i> */}\r\n                </span>\r\n            </VeDropdown>\r\n        );\r\n    },\r\n};\r\n","import VeSelect from \"./src/index.jsx\";\r\n\r\nVeSelect.install = function (Vue) {\r\n    Vue.component(VeSelect.name, VeSelect);\r\n};\r\n\r\nexport default VeSelect;\r\n","import Pager from \"./pager.jsx\";\r\nimport VeSelect from \"vue-easytable/packages/ve-select\";\r\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\r\nimport { COMPS_NAME, EMIT_EVENTS, LOCALE_COMP_NAME } from \"./util/constant\";\r\nimport { clsName } from \"./util\";\r\nimport { createLocale } from \"../../src/utils/index\";\r\nimport { ICON_NAMES } from \"../../src/utils/constant\";\r\n\r\nconst t = createLocale(LOCALE_COMP_NAME);\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_PAGINATION,\r\n\r\n    components: {\r\n        Total: {\r\n            render() {\r\n                return (\r\n                    <span class={clsName(\"total\")}>\r\n                        {t(\"total\", this.$parent.total)}\r\n                    </span>\r\n                );\r\n            },\r\n        },\r\n\r\n        Prev: {\r\n            render() {\r\n                return (\r\n                    <li\r\n                        on-click={this.$parent.prevPage}\r\n                        class={[\r\n                            this.$parent.newPageIndex === 1\r\n                                ? clsName(\"disabled\")\r\n                                : \"\",\r\n                            clsName(\"li\"),\r\n                            clsName(\"prev\"),\r\n                        ]}\r\n                    >\r\n                        <a>\r\n                            <VeIcon name={ICON_NAMES.LEFT_ARROW} />\r\n                        </a>\r\n                    </li>\r\n                );\r\n            },\r\n        },\r\n\r\n        Pager,\r\n\r\n        Next: {\r\n            render() {\r\n                return (\r\n                    <li\r\n                        on-click={this.$parent.nextPage}\r\n                        class={[\r\n                            this.$parent.newPageIndex === this.$parent.pageCount\r\n                                ? clsName(\"disabled\")\r\n                                : \"\",\r\n                            clsName(\"li\"),\r\n                            clsName(\"next\"),\r\n                        ]}\r\n                    >\r\n                        <a>\r\n                            <VeIcon name={ICON_NAMES.RIGHT_ARROW} />\r\n                        </a>\r\n                    </li>\r\n                );\r\n            },\r\n        },\r\n\r\n        Sizer: {\r\n            render() {\r\n                return (\r\n                    <VeSelect\r\n                        class={clsName(\"select\")}\r\n                        value={this.$parent.newPageSizeOption}\r\n                        popperAppendTo={this.$parent.popperAppendTo}\r\n                        on-input={this.handleChange}\r\n                        //v-model={this.$parent.newPageSizeOption}\r\n                    />\r\n                );\r\n            },\r\n\r\n            methods: {\r\n                handleChange(items) {\r\n                    if (Array.isArray(items) && items.length > 0) {\r\n                        let item = items.find((x) => x.selected);\r\n                        if (item) {\r\n                            this.$parent.pageSizeChangeHandler(item.value);\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        },\r\n\r\n        Jumper: {\r\n            methods: {\r\n                jumperEnter(event) {\r\n                    if (event.keyCode !== 13) return;\r\n\r\n                    var val = this.$parent.getValidNum(event.target.value);\r\n                    // bug fixed #483\r\n                    event.target.value = val;\r\n                    this.$parent.jumpPageHandler(val);\r\n                },\r\n            },\r\n            render() {\r\n                return (\r\n                    <span class={clsName(\"goto\")}>\r\n                        &nbsp;{t(\"goto\")}&nbsp;\r\n                        <input\r\n                            class={clsName(\"goto-input\")}\r\n                            domProps-value={this.$parent.newPageIndex}\r\n                            on-keyup={this.jumperEnter}\r\n                            type=\"input\"\r\n                        />\r\n                        &nbsp;{t(\"page\")}&nbsp;\r\n                    </span>\r\n                );\r\n            },\r\n        },\r\n    },\r\n    props: {\r\n        layout: {\r\n            type: Array,\r\n            default() {\r\n                return [\"total\", \"prev\", \"pager\", \"next\", \"sizer\", \"jumper\"];\r\n            },\r\n        },\r\n\r\n        // 总条数\r\n        total: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n\r\n        // 当前页\r\n        pageIndex: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n\r\n        // 最多显示几个数字按钮\r\n        pagingCount: {\r\n            type: Number,\r\n            default: 5,\r\n        },\r\n\r\n        // 每页大小\r\n        pageSize: {\r\n            type: Number,\r\n            default: 10,\r\n        },\r\n\r\n        // 每页大小下拉配置\r\n        pageSizeOption: {\r\n            type: Array,\r\n            default: function () {\r\n                return [10, 20, 30];\r\n            },\r\n        },\r\n        // popper append to element\r\n        popperAppendTo: {\r\n            type: [String, HTMLElement],\r\n            default: function () {\r\n                return document.body;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            newPageIndex:\r\n                this.pageIndex && this.pageIndex > 0\r\n                    ? parseInt(this.pageIndex)\r\n                    : 1,\r\n\r\n            newPageSize: this.pageSize,\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        pageCount() {\r\n            return Math.ceil(this.total / this.newPageSize);\r\n        },\r\n        newPageSizeOption() {\r\n            return this.pageSizeOption.map((x) => {\r\n                var temp = {};\r\n\r\n                temp.value = x;\r\n                temp.label = x + t(\"itemsPerPage\");\r\n                if (this.newPageSize == x) {\r\n                    temp.selected = true;\r\n                }\r\n\r\n                return temp;\r\n            });\r\n        },\r\n    },\r\n    watch: {\r\n        pageIndex: function (newVal) {\r\n            this.newPageIndex = newVal;\r\n        },\r\n\r\n        pageSize: function (newVal) {\r\n            this.newPageSize = newVal;\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        getValidNum(value) {\r\n            let result = 1;\r\n\r\n            value = parseInt(value, 10);\r\n\r\n            if (isNaN(value) || value < 1) {\r\n                result = 1;\r\n            } else {\r\n                if (value < 1) {\r\n                    result = 1;\r\n                } else if (value > this.pageCount) {\r\n                    result = this.pageCount;\r\n                } else {\r\n                    result = value;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n\r\n        jumpPageHandler(newPageIndex) {\r\n            this.newPageIndex = newPageIndex;\r\n            this.$emit(EMIT_EVENTS.PAGE_NUMBER_CHANGE, this.newPageIndex);\r\n        },\r\n\r\n        // 上一页\r\n        prevPage() {\r\n            if (this.newPageIndex > 1) {\r\n                this.newPageIndex = this.newPageIndex - 1;\r\n                this.$emit(EMIT_EVENTS.PAGE_NUMBER_CHANGE, this.newPageIndex);\r\n            }\r\n        },\r\n\r\n        // 下一页\r\n        nextPage() {\r\n            if (this.newPageIndex < this.pageCount) {\r\n                this.newPageIndex = this.newPageIndex + 1;\r\n                this.$emit(EMIT_EVENTS.PAGE_NUMBER_CHANGE, this.newPageIndex);\r\n            }\r\n        },\r\n\r\n        // 改变页面大小\r\n        pageSizeChangeHandler() {\r\n            let item = this.newPageSizeOption.find((x) => x.selected);\r\n\r\n            if (item) {\r\n                this.newPageSize = item.value;\r\n                this.newPageIndex = 1;\r\n                this.$emit(EMIT_EVENTS.PAGE_SIZE_CHANGE, this.newPageSize);\r\n            }\r\n        },\r\n\r\n        // 回到初始页码\r\n        goBackPageIndex() {\r\n            this.newPageIndex =\r\n                this.pageIndex && this.pageIndex > 0\r\n                    ? parseInt(this.pageIndex)\r\n                    : 1;\r\n        },\r\n\r\n        // 还原每页大小\r\n        goBackPageSize() {\r\n            if (this.pageSize > 0) {\r\n                this.newPageSize = this.pageSize;\r\n            }\r\n        },\r\n    },\r\n    render() {\r\n        let template = <ul class=\"ve-pagination\"></ul>;\r\n\r\n        var comps = {\r\n            //'total','prev','pager','next','sizer','jumper'\r\n            total: <total></total>,\r\n            prev: <prev></prev>,\r\n            pager: (\r\n                <pager\r\n                    pageCount={this.pageCount}\r\n                    pageIndex={this.newPageIndex}\r\n                    pagingCount={this.pagingCount}\r\n                    onJumpPageHandler={this.jumpPageHandler}\r\n                ></pager>\r\n            ),\r\n            next: <next></next>,\r\n            sizer: <sizer></sizer>,\r\n            jumper: <jumper onJumpPageHandler={this.jumpPageHandler}></jumper>,\r\n        };\r\n\r\n        // https://github.com/ElemeFE/element/issues/10033\r\n        // https://github.com/ElemeFE/element/issues/9587\r\n        template.children = template.children || [];\r\n\r\n        this.layout.forEach((item) => {\r\n            template.children.push(comps[item]);\r\n        });\r\n\r\n        return template;\r\n    },\r\n};\r\n","import VePagination from \"./src/index.jsx\";\r\n\r\nVePagination.install = function (Vue) {\r\n    Vue.component(VePagination.name, VePagination);\r\n};\r\n\r\nexport default VePagination;\r\n","// prefix\r\nexport const PREFIX_CLS = \"ve-table-\";\r\n\r\n// locale comp name\r\nexport const LOCALE_COMP_NAME = \"table\";\r\n\r\n// column types\r\nexport const COLUMN_TYPES = {\r\n    // expand row\r\n    EXPAND: \"expand\",\r\n    // checkbox\r\n    CHECKBOX: \"checkbox\",\r\n    // radio\r\n    RADIO: \"radio\",\r\n};\r\n\r\n// column fixed type\r\nexport const COLUMN_FIXED_TYPE = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\",\r\n};\r\n\r\n// expand row trigger types\r\nexport const EXPAND_TRIGGER_TYPES = {\r\n    // trigger by click icon\r\n    ICON: \"icon\",\r\n    // trigger by click cell(td)\r\n    CELL: \"cell\",\r\n    // trigger by click row\r\n    ROW: \"row\",\r\n};\r\n\r\n// cell selection direction\r\nexport const CELL_SELECTION_DIRECTION = {\r\n    UP: \"up\",\r\n    RIGHT: \"right\",\r\n    DOWN: \"down\",\r\n    LEFT: \"left\",\r\n};\r\n\r\n// autofilling direction\r\nexport const AUTOFILLING_DIRECTION = {\r\n    UP: \"up\",\r\n    RIGHT: \"right\",\r\n    DOWN: \"down\",\r\n    LEFT: \"left\",\r\n};\r\n\r\n// current cell selection types\r\nexport const CURRENT_CELL_SELECTION_TYPES = {\r\n    SINGLE: \"single\",\r\n    RANGE: \"range\",\r\n};\r\n\r\n// emit events\r\nexport const EMIT_EVENTS = {\r\n    // body-cell-width-change\r\n    BODY_CELL_WIDTH_CHANGE: \"on-body-cell-width-change\",\r\n    // header-row-height-change\r\n    HEADER_ROW_HEIGHT_CHANGE: \"on-header-row-height-change\",\r\n    // footer-row-height-change\r\n    FOOTER_ROW_HEIGHT_CHANGE: \"on-footer-row-height-change\",\r\n    // body-row-height-change\r\n    BODY_ROW_HEIGHT_CHANGE: \"on-body-row-height-change\",\r\n    // body row click\r\n    BODY_ROW_CLICK: \"on-body-row-click\",\r\n    // body cell click\r\n    BODY_CELL_CLICK: \"on-body-cell-click\",\r\n    // body cell mouseover\r\n    BODY_CELL_MOUSEOVER: \"on-body-cell-mouseover\",\r\n    // body cell mousedown\r\n    BODY_CELL_MOUSEDOWN: \"on-body-cell-mousedown\",\r\n    // body cell mousemove\r\n    BODY_CELL_MOUSEMOVE: \"on-body-cell-mousemove\",\r\n    // body cell mouseup\r\n    BODY_CELL_MOUSEUP: \"on-body-cell-mouseup\",\r\n    // body cell double click\r\n    BODY_CELL_DOUBLE_CLICK: \"on-body-cell-double-click\",\r\n    // body cell contextmenu\r\n    BODY_CELL_CONTEXTMENU: \"on-body-cell-contextmenu\",\r\n    // expand row change\r\n    EXPAND_ROW_CHANGE: \"on-expand-row-change\",\r\n    // checkbox selected row change\r\n    CHECKBOX_SELECTED_ROW_CHANGE: \"on-checkbox-selected-row-change\",\r\n    // checkbox selected all change\r\n    CHECKBOX_SELECTED_ALL_CHANGE: \"on-checkbox-selected-all-change\",\r\n    // checkbox selected all ino\r\n    CHECKBOX_SELECTED_ALL_INFO: \"on-checkbox-selected-all-info\",\r\n    // radio selected row change\r\n    RADIO_SELECTED_ROW_CHANGE: \"on-radio-selected-row-change\",\r\n    // sort change\r\n    SORT_CHANGE: \"on-sort-change\",\r\n    // on-cell-selection-key-change\r\n    CELL_SELECTION_KEY_CHANGE: \"on-cell-selection-key-change\",\r\n    // on-cell-selection-range-data-change\r\n    CELL_SELECTION_RANGE_DATA_CHANGE: \"on-cell-selection-range-data-change\",\r\n    // header filter confirm\r\n    HEADER_FILTER_CONFIRM: \"on-filter-confirm\",\r\n    // header filter reset\r\n    HEADER_FILTER_RESET: \"on-filter-reset\",\r\n    // header cell click\r\n    HEADER_CELL_CLICK: \"on-header-cell-click\",\r\n    // header cell contextmenu\r\n    HEADER_CELL_CONTEXTMENU: \"on-header-cell-contextmenu\",\r\n    // header cell mousedown\r\n    HEADER_CELL_MOUSEDOWN: \"on-header-cell-mousedown\",\r\n    // header cell mouseover\r\n    HEADER_CELL_MOUSEOVER: \"on-header-cell-mouseover\",\r\n    // header cell mousemove\r\n    HEADER_CELL_MOUSEMOVE: \"on-header-cell-mousemove\",\r\n    // header cell mouseleave\r\n    HEADER_CELL_MOUSELEAVE: \"on-header-cell-mouseleave\",\r\n    // highlight row change\r\n    HIGHLIGHT_ROW_CHANGE: \"on-highlight-row-change\",\r\n\r\n    // edit input clicked\r\n    EDIT_INPUT_CLICK: \"on-edit-input-click\",\r\n    // edit input blur\r\n    EDIT_INPUT_BLUR: \"on-edit-input-blur\",\r\n    // edit input value change\r\n    EDIT_INPUT_VALUE_CHANGE: \"on-edit-input-value-change\",\r\n    // edit input copy\r\n    EDIT_INPUT_COPY: \"on-edit-input-copy\",\r\n    // edit input paste\r\n    EDIT_INPUT_PASTE: \"on-edit-input-paste\",\r\n    // edit input cut\r\n    EDIT_INPUT_CUT: \"on-edit-input-cut\",\r\n\r\n    // selection corner mousedown\r\n    SELECTION_CORNER_MOUSEDOWN: \"selection-corner-mousedown\",\r\n    // selection corner mouseup\r\n    SELECTION_CORNER_MOUSEUP: \"selection-corner-mouseup\",\r\n    // autofilling direction change\r\n    AUTOFILLING_DIRECTION_CHANGE: \"autofilling-direction-change\",\r\n};\r\n\r\n// hooks name\r\nexport const HOOKS_NAME = {\r\n    //table container scroll\r\n    TABLE_CONTAINER_SCROLL: \"table-container-scroll\",\r\n    // table-container-mouseup\r\n    TABLE_CONTAINER_MOUSEUP: \"table-container-mouseup\",\r\n    // table-container-mousemove\r\n    //TABLE_CONTAINER_MOUSEMOVE: \"table-container-mousemove\",\r\n    // table size change\r\n    TABLE_SIZE_CHANGE: \"table-size-change\",\r\n    // table td width change\r\n    TABLE_CELL_WIDTH_CHANGE: \"table-cell-width-change\",\r\n    /*\r\n    clipboard cell value change\r\n    可能导致单元格高度变化，需要重新修改区域选择的定位信息\r\n    */\r\n    CLIPBOARD_CELL_VALUE_CHANGE: \"clipboard-cell-value-change\",\r\n    // header cell mousedown\r\n    //HEADER_CELL_MOUSEDOWN: \"header-cell-mousedown\",\r\n    // header cell mousemove\r\n    HEADER_CELL_MOUSEMOVE: \"header-cell-mousemove\",\r\n    // body cell mousemove\r\n    BODY_CELL_MOUSEMOVE: \"body-cell-mousemove\",\r\n};\r\n\r\n// comps name\r\nexport const COMPS_NAME = {\r\n    VE_TABLE: \"VeTable\",\r\n\r\n    VE_TABLE_THADER: \"VeTableHeader\",\r\n    VE_TABLE_THADER_TR: \"VeTableHeaderTr\",\r\n    VE_TABLE_THADER_Th: \"VeTableHeaderTh\",\r\n    VE_TABLE_HEADER_CHECKBOX_CONTENT: \"VeTableHeaderCheckboxContent\",\r\n    VE_TABLE_HEADER_FILTER_CONTENT: \"VeTableHeaderFilterContent\",\r\n    VE_TABLE_HEADER_FILTER_CUSTOM_CONTENT: \"VeTableHeaderFilterCustomContent\",\r\n\r\n    VE_TABLE_BODY: \"VeTableBody\",\r\n    VE_TABLE_BODY_TR: \"VeTableBodyTr\",\r\n    VE_TABLE_BODY_TR_SCROLLING: \"VeTableBodyTrScrolling\",\r\n    VE_TABLE_BODY_CHECKBOX_CONTENT: \"VeTableBodyCheckboxContent\",\r\n    VE_TABLE_BODY_RADIO_CONTENT: \"VeTableBodyRadioContent\",\r\n    VE_TABLE_BODY_TD: \"VeTableBodyTd\",\r\n\r\n    VE_TABLE_COLGROUP: \"VeTableColgroup\",\r\n    VE_TABLE_FOOTER: \"VeTableFooter\",\r\n\r\n    VE_TABLE_EXPAND_TR: \"VeTableExpandTr\",\r\n    VE_TABLE_EXPAND_TR_ICON: \"VeTableExpandTrIcon\",\r\n\r\n    VE_TABLE_EDIT_INPUT: \"VeTableEditInput\",\r\n\r\n    VE_TABLE_SELECTION: \"VeTableSelection\",\r\n\r\n    VE_TABLE_COLUMN_RESISZER: \"VeTableColumnResizer\",\r\n};\r\n\r\n// comps custom attrs\r\nexport const COMPS_CUSTOM_ATTRS = {\r\n    // body row key\r\n    BODY_ROW_KEY: \"row-key\",\r\n    // body column key\r\n    BODY_COLUMN_KEY: \"col-key\",\r\n};\r\n\r\n// instance methods\r\nexport const INSTANCE_METHODS = {\r\n    // scroll to pixels\r\n    SCROLL_TO: \"scrollTo\",\r\n    // scroll to rowKey\r\n    SCROLL_TO_ROW_KEY: \"scrollToRowKey\",\r\n    // scroll to colKey\r\n    SCROLL_TO_COL_KEY: \"scrollToColKey\",\r\n    // start editing cell\r\n    START_EDITING_CELL: \"startEditingCell\",\r\n    // stop editing cell\r\n    STOP_EDITING_CELL: \"stopEditingCell\",\r\n    // set highlight row\r\n    SET_HIGHLIGHT_ROW: \"setHighlightRow\",\r\n    // set cell selection\r\n    SET_CELL_SELECTION: \"setCellSelection\",\r\n    // set range cell selection\r\n    SET_RANGE_CELL_SELECTION: \"setRangeCellSelection\",\r\n    // get range cell selection\r\n    GET_RANGE_CELL_SELECTION: \"getRangeCellSelection\",\r\n    // set all cell selection\r\n    SET_ALL_CELL_SELECTION: \"setAllCellSelection\",\r\n    // hide columns by keys\r\n    HIDE_COLUMNS_BY_KEYS: \"hideColumnsByKeys\",\r\n    // show columns by keys\r\n    SHOW_COLUMNS_BY_KEYS: \"showColumnsByKeys\",\r\n};\r\n\r\n// contextmenu types\r\nexport const CONTEXTMENU_TYPES = {\r\n    HEADER_CONTEXTMENU: \"headerContextmenu\",\r\n    BODY_CONTEXTMENU: \"bodyContextmenu\",\r\n};\r\n\r\n// contextmenu node types\r\nexport const CONTEXTMENU_NODE_TYPES = {\r\n    // separator\r\n    SEPARATOR: \"SEPARATOR\",\r\n    // cut\r\n    CUT: \"CUT\",\r\n    // copy\r\n    COPY: \"COPY\",\r\n    // paste todo\r\n    //PASTE: \"PASTE\",\r\n    // insert row above\r\n    INSERT_ROW_ABOVE: \"INSERT_ROW_ABOVE\",\r\n    // insert row below\r\n    INSERT_ROW_BELOW: \"INSERT_ROW_BELOW\",\r\n    // remove row\r\n    REMOVE_ROW: \"REMOVE_ROW\",\r\n    // empty row\r\n    EMPTY_ROW: \"EMPTY_ROW\",\r\n    // remove column\r\n    //REMOVE_COLUMN: \"REMOVE_COLUMN\",\r\n    // empty column\r\n    EMPTY_COLUMN: \"EMPTY_COLUMN\",\r\n    // hide column\r\n    //HIDE_COLUMN: \"HIDE_COLUMN\",\r\n    // empty cell\r\n    EMPTY_CELL: \"EMPTY_CELL\",\r\n    // left fixed column to\r\n    LEFT_FIXED_COLUMN_TO: \"LEFT_FIXED_COLUMN_TO\",\r\n    // cancel left fixed column to\r\n    CANCEL_LEFT_FIXED_COLUMN_TO: \"CANCEL_LEFT_FIXED_COLUMN_TO\",\r\n    // right fixed column to\r\n    RIGHT_FIXED_COLUMN_TO: \"RIGHT_FIXED_COLUMN_TO\",\r\n    // cancel right fixed column to\r\n    CANCEL_RIGHT_FIXED_COLUMN_TO: \"CANCEL_RIGHT_FIXED_COLUMN_TO\",\r\n};\r\n","import {\r\n    PREFIX_CLS,\r\n    CONTEXTMENU_NODE_TYPES,\r\n    COLUMN_FIXED_TYPE,\r\n    AUTOFILLING_DIRECTION,\r\n} from \"./constant\";\r\nimport { MOUSE_EVENT_CLICK_TYPE } from \"../../../src/utils/constant\";\r\nimport {\r\n    isEmptyValue,\r\n    isEmptyArray,\r\n    isFunction,\r\n} from \"../../../src/utils/index\";\r\nimport { getRandomId } from \"../../../src/utils/random\";\r\n\r\n/**\r\n * @clsName\r\n * @desc  get class name\r\n * @param {string} cls - class\r\n */\r\nexport function clsName(cls) {\r\n    return PREFIX_CLS + cls;\r\n}\r\n\r\n/**\r\n * @getRowKey\r\n * @desc  get row key\r\n * @param {Object} rowData - rowData\r\n * @param {string} rowKeyFieldName - row key field name\r\n */\r\nexport function getRowKey(rowData, rowKeyFieldName) {\r\n    let result = null;\r\n\r\n    if (rowData && rowKeyFieldName) {\r\n        result = rowData[rowKeyFieldName];\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getColumnByColkey\r\n * @desc  get column by col key\r\n * @param {string} colKey - column key\r\n */\r\nexport function getColumnByColkey(colKey, colgroups) {\r\n    if (colKey) {\r\n        return colgroups.find((x) => x.key === colKey);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @isLastColumnByColKey\r\n * @desc is last column by column key\r\n * @param {string} colKey - column key\r\n */\r\nexport function isLastColumnByColKey(colKey, colgroups) {\r\n    if (!isEmptyValue(colKey) && !isEmptyArray(colgroups)) {\r\n        return colgroups[colgroups.length - 1].key === colKey;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @isOperationColumn\r\n * @desc is operation column\r\n * @param {string} colKey - column key\r\n * @param {arrat<object>} colgroups - column key\r\n */\r\nexport function isOperationColumn(colKey, colgroups) {\r\n    if (!isEmptyValue(colKey) && !isEmptyArray(colgroups)) {\r\n        const firstCol = colgroups[0];\r\n        if (firstCol.key === colKey && firstCol.operationColumn) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @isLastRowByRowKey\r\n * @desc is last row by row key\r\n * @param {string} rowKey - row key\r\n */\r\nexport function isLastRowByRowKey(rowKey, allRowKeys) {\r\n    if (!isEmptyValue(rowKey) && !isEmptyArray(allRowKeys)) {\r\n        return allRowKeys[allRowKeys.length - 1] === rowKey;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @getDomResizeObserverCompKey\r\n * @desc  get dom resize observer comp key\r\n * @param {Any} originalKey - original key\r\n * @param {Number} columnsOptionResetTime - columns option change time\r\n */\r\nexport function getDomResizeObserverCompKey(\r\n    originalKey,\r\n    columnsOptionResetTime,\r\n) {\r\n    let result = originalKey;\r\n\r\n    if (result || result == 0) {\r\n        result = originalKey + \"@\" + columnsOptionResetTime;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @recursiveRemoveColumnByKey\r\n * @desc recursive remove column key\r\n * @param {object} columns - deep clone column\r\n * @param {any} key - column key\r\n */\r\nexport function recursiveRemoveColumnByKey(columns, key) {\r\n    return columns.filter((item) => {\r\n        if (\"children\" in item) {\r\n            item.children = recursiveRemoveColumnByKey(item.children, key);\r\n        }\r\n        return item.key !== key;\r\n    });\r\n}\r\n\r\n/**\r\n * @getFixedTotalWidthByColumnKey\r\n * @desc  get fixed total width by column key\r\n * @param {object} colgroups - columns info\r\n * @param {any} colKey - column key\r\n * @param {string} fixed - left|right\r\n */\r\nexport function getFixedTotalWidthByColumnKey({ colgroups, colKey, fixed }) {\r\n    const currentIndex = colgroups.findIndex((x) => x.key === colKey);\r\n\r\n    let result = 0;\r\n\r\n    if (fixed === COLUMN_FIXED_TYPE.LEFT) {\r\n        // 只计算左列固定的\r\n        result = colgroups.reduce((total, currentVal, index) => {\r\n            return index < currentIndex &&\r\n                currentVal.fixed == COLUMN_FIXED_TYPE.LEFT\r\n                ? currentVal._realTimeWidth + total\r\n                : total;\r\n        }, 0);\r\n    } else if (fixed === COLUMN_FIXED_TYPE.RIGHT) {\r\n        // 只计算右列固定的\r\n        result = colgroups.reduce((total, currentVal, index) => {\r\n            return index > currentIndex &&\r\n                currentVal.fixed == COLUMN_FIXED_TYPE.RIGHT\r\n                ? currentVal._realTimeWidth + total\r\n                : total;\r\n        }, 0);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getNotFixedTotalWidthByColumnKey\r\n * @desc  get not fixed total width by column key\r\n * @param {object} colgroups - 列信息\r\n * @param {any} colKey - column key\r\n * @param {string} direction - left|right\r\n */\r\nexport function getNotFixedTotalWidthByColumnKey({ colgroups, colKey, fixed }) {\r\n    const currentIndex = colgroups.findIndex((x) => x.key === colKey);\r\n\r\n    let result = 0;\r\n\r\n    if (fixed === COLUMN_FIXED_TYPE.LEFT) {\r\n        // 只计算左侧非固定列\r\n        result = colgroups.reduce((total, currentVal, index) => {\r\n            return index < currentIndex && !currentVal.fixed\r\n                ? currentVal._realTimeWidth + total\r\n                : total;\r\n        }, 0);\r\n    } else if (fixed === COLUMN_FIXED_TYPE.RIGHT) {\r\n        // 只计算右侧非固定列\r\n        result = colgroups.reduce((total, currentVal, index) => {\r\n            return index > currentIndex && !currentVal.fixed\r\n                ? currentVal._realTimeWidth + total\r\n                : total;\r\n        }, 0);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getTotalWidthByColKeys\r\n * @desc get total width by collumn keys\r\n * @param {array<T>} colKeys\r\n * @param {array<object>} colgroups\r\n * @return {number} width\r\n */\r\nexport function getTotalWidthByColKeys({ colKeys, colgroups }) {\r\n    let result = colgroups.reduce((total, currentVal, index) => {\r\n        return colKeys.indexOf(currentVal.key) > -1\r\n            ? currentVal._realTimeWidth + total\r\n            : total;\r\n    }, 0);\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @initGroupColumns\r\n * @desc  int group columns\r\n * @param {array} cloneColumns - clone columns\r\n * @return {\r\n   isGroupHeader,\r\n   colgroups,\r\n   groupColumns\r\n}\r\n */\r\nexport function initGroupColumns(cloneColumns) {\r\n    let colgroups = [];\r\n    let groupColumns = [];\r\n\r\n    // set column level\r\n    let maxLevel = 1;\r\n    const setColumnLevel = (column, parent) => {\r\n        if (parent) {\r\n            column._level = parent._level + 1;\r\n            if (maxLevel < column._level) {\r\n                maxLevel = column._level;\r\n            }\r\n        }\r\n        if (column.children) {\r\n            column.children.forEach((item) => {\r\n                item.fixed = column.fixed;\r\n                setColumnLevel(item, column);\r\n            });\r\n        }\r\n    };\r\n    cloneColumns.forEach((column) => {\r\n        column._level = 1;\r\n        setColumnLevel(column);\r\n    });\r\n\r\n    // set colspan and rowspan and keys\r\n    const setColspanAndRowspanAndKeys = (column) => {\r\n        if (column.children) {\r\n            let keys = \"\";\r\n            let colspan = 0;\r\n            column.children.forEach((item) => {\r\n                setColspanAndRowspanAndKeys(item);\r\n\r\n                colspan += item._colspan;\r\n                keys += item._keys.endsWith(\"|\")\r\n                    ? item._keys\r\n                    : item._keys + \"|\";\r\n            });\r\n            column._keys = keys;\r\n            column._colspan = colspan;\r\n            column._rowspan = 1;\r\n        } else {\r\n            column._keys = column.key;\r\n            column._colspan = 1;\r\n            column._rowspan = maxLevel - column._level + 1;\r\n        }\r\n    };\r\n\r\n    cloneColumns.forEach((column) => {\r\n        setColspanAndRowspanAndKeys(column);\r\n    });\r\n\r\n    // init groupColumns\r\n    for (let i = 0; i < maxLevel; i++) {\r\n        groupColumns.push([]);\r\n    }\r\n    // set colgroups and groupColumns\r\n    const setColgroupsAndGroupColumns = (column) => {\r\n        // column has children || column key is not empty\r\n        if (!isEmptyArray(column.children) || !isEmptyValue(column.key)) {\r\n            // set groupColumns\r\n            const { ...groupColumn } = column;\r\n            groupColumns[column._level - 1].push(groupColumn);\r\n\r\n            if (column.children) {\r\n                column.children.forEach((item) => {\r\n                    setColgroupsAndGroupColumns(item);\r\n                });\r\n            } else {\r\n                // set colgroups\r\n                const { ...colgroup } = column;\r\n                colgroup._realTimeWidth = colgroup.width;\r\n                colgroups.push(colgroup);\r\n            }\r\n        }\r\n    };\r\n\r\n    cloneColumns.forEach((column) => {\r\n        setColgroupsAndGroupColumns(column);\r\n    });\r\n\r\n    return {\r\n        // set is group header\r\n        isGroupHeader: maxLevel > 1,\r\n        // set colgroups\r\n        colgroups,\r\n        // set groupColumns\r\n        groupColumns,\r\n    };\r\n}\r\n\r\n// get header contextmenu option collection\r\nexport function getHeaderContextmenuOptionCollection(t) {\r\n    return [\r\n        {\r\n            type: CONTEXTMENU_NODE_TYPES.SEPARATOR,\r\n        },\r\n        {\r\n            label: t(\"cut\"),\r\n            type: CONTEXTMENU_NODE_TYPES.CUT,\r\n        },\r\n        {\r\n            label: t(\"copy\"),\r\n            type: CONTEXTMENU_NODE_TYPES.COPY,\r\n        },\r\n        // {\r\n        //     label: t(\"paste\"),\r\n        //     type: CONTEXTMENU_NODE_TYPES.PASTE,\r\n        // },\r\n        {\r\n            label: t(\"removeColumn\"),\r\n            type: CONTEXTMENU_NODE_TYPES.REMOVE_COLUMN,\r\n        },\r\n        {\r\n            label: t(\"emptyColumn\"),\r\n            type: CONTEXTMENU_NODE_TYPES.EMPTY_COLUMN,\r\n        },\r\n        {\r\n            label: t(\"hideColumn\"),\r\n            type: CONTEXTMENU_NODE_TYPES.HIDE_COLUMN,\r\n        },\r\n        {\r\n            label: t(\"leftFixedColumnTo\"),\r\n            type: CONTEXTMENU_NODE_TYPES.LEFT_FIXED_COLUMN_TO,\r\n        },\r\n        {\r\n            label: t(\"cancelLeftFixedColumnTo\"),\r\n            type: CONTEXTMENU_NODE_TYPES.CANCEL_LEFT_FIXED_COLUMN_TO,\r\n        },\r\n        {\r\n            label: t(\"rightFixedColumnTo\"),\r\n            type: CONTEXTMENU_NODE_TYPES.RIGHT_FIXED_COLUMN_TO,\r\n        },\r\n        {\r\n            label: t(\"cancelRightFixedColumnTo\"),\r\n            type: CONTEXTMENU_NODE_TYPES.CANCEL_RIGHT_FIXED_COLUMN_TO,\r\n        },\r\n    ];\r\n}\r\n\r\n// get body contextmenu option collection\r\nexport function getBodyContextmenuOptionCollection(t) {\r\n    return [\r\n        {\r\n            type: CONTEXTMENU_NODE_TYPES.SEPARATOR,\r\n        },\r\n        {\r\n            label: t(\"cut\"),\r\n            type: CONTEXTMENU_NODE_TYPES.CUT,\r\n        },\r\n        {\r\n            label: t(\"copy\"),\r\n            type: CONTEXTMENU_NODE_TYPES.COPY,\r\n        },\r\n        // {\r\n        //     label: t(\"paste\"),\r\n        //     type: CONTEXTMENU_NODE_TYPES.PASTE,\r\n        // },\r\n        {\r\n            label: t(\"insertRowAbove\"),\r\n            type: CONTEXTMENU_NODE_TYPES.INSERT_ROW_ABOVE,\r\n        },\r\n        {\r\n            label: t(\"insertRowBelow\"),\r\n            type: CONTEXTMENU_NODE_TYPES.INSERT_ROW_BELOW,\r\n        },\r\n        {\r\n            label: t(\"removeRow\"),\r\n            type: CONTEXTMENU_NODE_TYPES.REMOVE_ROW,\r\n        },\r\n        {\r\n            label: t(\"emptyRow\"),\r\n            type: CONTEXTMENU_NODE_TYPES.EMPTY_ROW,\r\n        },\r\n        {\r\n            label: t(\"removeColumn\"),\r\n            type: CONTEXTMENU_NODE_TYPES.REMOVE_COLUMN,\r\n        },\r\n        {\r\n            label: t(\"emptyCell\"),\r\n            type: CONTEXTMENU_NODE_TYPES.EMPTY_CELL,\r\n        },\r\n    ];\r\n}\r\n\r\n/***\r\n * @setHeaderContextmenuOptions\r\n * @desc set header contextmenu options\r\n * @param {array<object>} column\r\n * @param {array<object>} contextmenuHeaderOption\r\n * @param {object} cellSelectionRangeData\r\n * @param {array<object>} colgroups\r\n * @param {object} headerIndicatorColKeys\r\n * @param {boolean} enableHeaderContextmenu\r\n * @param {boolean} t locale\r\n * @return headerContextmenuOptions\r\n */\r\nexport function setHeaderContextmenuOptions({\r\n    column,\r\n    contextmenuHeaderOption,\r\n    cellSelectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n    headerIndicatorColKeys,\r\n    enableHeaderContextmenu,\r\n    t,\r\n}) {\r\n    let result = [];\r\n\r\n    if (enableHeaderContextmenu) {\r\n        let selectionRangeKeys = getSelectionRangeKeys({\r\n            cellSelectionRangeData,\r\n        });\r\n\r\n        let selectionRangeIndexes = getSelectionRangeIndexes({\r\n            cellSelectionRangeData,\r\n            colgroups,\r\n            allRowKeys,\r\n        });\r\n\r\n        const isOperationCol = isOperationColumn(column.key, colgroups);\r\n\r\n        const colCount =\r\n            selectionRangeIndexes.endColIndex -\r\n            selectionRangeIndexes.startColIndex +\r\n            1;\r\n\r\n        const { contextmenus, beforeShow } = contextmenuHeaderOption;\r\n\r\n        const isWholeColSelection = !isEmptyValue(\r\n            headerIndicatorColKeys.startColKey,\r\n        );\r\n\r\n        const leftFixedColKeys = getColKeysByFixedType({\r\n            fixedType: COLUMN_FIXED_TYPE.LEFT,\r\n            colgroups,\r\n            isExcludeOperationColumn: true,\r\n        });\r\n\r\n        const rightFixedColKeys = getColKeysByFixedType({\r\n            fixedType: COLUMN_FIXED_TYPE.RIGHT,\r\n            colgroups,\r\n            isExcludeOperationColumn: true,\r\n        });\r\n\r\n        if (isFunction(beforeShow)) {\r\n            beforeShow({\r\n                isWholeColSelection,\r\n                selectionRangeKeys,\r\n                selectionRangeIndexes,\r\n            });\r\n        }\r\n\r\n        const headerContextmenuOptionCollection =\r\n            getHeaderContextmenuOptionCollection(t);\r\n\r\n        contextmenus.forEach((contextmenu) => {\r\n            const contentmenuCollectionItem =\r\n                headerContextmenuOptionCollection.find(\r\n                    (x) => x.type === contextmenu.type,\r\n                );\r\n            if (contentmenuCollectionItem) {\r\n                let isContinue = true;\r\n                // empty column. 选中整列时支持\r\n                if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.EMPTY_COLUMN\r\n                ) {\r\n                    if (isWholeColSelection) {\r\n                        contentmenuCollectionItem.label =\r\n                            contentmenuCollectionItem.label.replace(\r\n                                \"$1\",\r\n                                colCount,\r\n                            );\r\n                    } else {\r\n                        isContinue = false;\r\n                    }\r\n                }\r\n                // left fixed column to\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.LEFT_FIXED_COLUMN_TO\r\n                ) {\r\n                    //\r\n                    if (isOperationCol) {\r\n                        contentmenuCollectionItem.disabled = true;\r\n                    }\r\n                }\r\n                // calcel left fixed column to\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.CANCEL_LEFT_FIXED_COLUMN_TO\r\n                ) {\r\n                    if (leftFixedColKeys.length < 1) {\r\n                        contentmenuCollectionItem.disabled = true;\r\n                    }\r\n                }\r\n                // right fixed column to\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.RIGHT_FIXED_COLUMN_TO\r\n                ) {\r\n                    //\r\n                    if (isOperationCol) {\r\n                        contentmenuCollectionItem.disabled = true;\r\n                    }\r\n                }\r\n                // calcel right fixed column to\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.CANCEL_RIGHT_FIXED_COLUMN_TO\r\n                ) {\r\n                    if (rightFixedColKeys.length < 1) {\r\n                        contentmenuCollectionItem.disabled = true;\r\n                    }\r\n                }\r\n\r\n                if (isContinue) {\r\n                    result.push(contentmenuCollectionItem);\r\n                }\r\n            } else {\r\n                result.push(contextmenu);\r\n            }\r\n        });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/***\r\n * @setHeaderContextmenuOptions\r\n * @desc set header contextmenu options\r\n * @param {array<object>} column\r\n * @param {array<object>} contextmenuBodyOption\r\n * @param {object} cellSelectionRangeData\r\n * @param {array<object>} colgroups\r\n * @param {object} bodyIndicatorRowKeys\r\n * @param {boolean} enableHeaderContextmenu\r\n * @param {boolean} t locale\r\n * @return headerContextmenuOptions\r\n */\r\nexport function setBodyContextmenuOptions({\r\n    enableBodyContextmenu,\r\n    contextmenuBodyOption,\r\n    cellSelectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n    bodyIndicatorRowKeys,\r\n    t,\r\n}) {\r\n    let result = [];\r\n    if (enableBodyContextmenu) {\r\n        let selectionRangeKeys = getSelectionRangeKeys({\r\n            cellSelectionRangeData,\r\n        });\r\n\r\n        let selectionRangeIndexes = getSelectionRangeIndexes({\r\n            cellSelectionRangeData,\r\n            colgroups,\r\n            allRowKeys,\r\n        });\r\n\r\n        const rowCount =\r\n            selectionRangeIndexes.endRowIndex -\r\n            selectionRangeIndexes.startRowIndex +\r\n            1;\r\n        const colCount =\r\n            selectionRangeIndexes.endColIndex -\r\n            selectionRangeIndexes.startColIndex +\r\n            1;\r\n\r\n        const { contextmenus, beforeShow } = contextmenuBodyOption;\r\n\r\n        const isWholeRowSelection = !isEmptyValue(\r\n            bodyIndicatorRowKeys.startRowKey,\r\n        );\r\n        if (isFunction(beforeShow)) {\r\n            beforeShow({\r\n                isWholeRowSelection,\r\n                selectionRangeKeys,\r\n                selectionRangeIndexes,\r\n            });\r\n        }\r\n\r\n        const bodyContextmenuOptionCollection =\r\n            getBodyContextmenuOptionCollection(t);\r\n\r\n        contextmenus.forEach((contextmenu) => {\r\n            const contentmenuCollectionItem =\r\n                bodyContextmenuOptionCollection.find(\r\n                    (x) => x.type === contextmenu.type,\r\n                );\r\n            if (contentmenuCollectionItem) {\r\n                let isContinue = true;\r\n\r\n                // remove row\r\n                if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.REMOVE_ROW\r\n                ) {\r\n                    contentmenuCollectionItem.label =\r\n                        contentmenuCollectionItem.label.replace(\"$1\", rowCount);\r\n                }\r\n                // empty row. 选中整行时支持\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.EMPTY_ROW\r\n                ) {\r\n                    if (isWholeRowSelection) {\r\n                        contentmenuCollectionItem.label =\r\n                            contentmenuCollectionItem.label.replace(\r\n                                \"$1\",\r\n                                rowCount,\r\n                            );\r\n                    } else {\r\n                        isContinue = false;\r\n                    }\r\n                }\r\n                // empty cell.没选中整行时支持\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.EMPTY_CELL\r\n                ) {\r\n                    isContinue = !isWholeRowSelection;\r\n                }\r\n                // remove column.没选中整行时支持\r\n                else if (\r\n                    contentmenuCollectionItem.type ===\r\n                    CONTEXTMENU_NODE_TYPES.REMOVE_COLUMN\r\n                ) {\r\n                    if (isWholeRowSelection) {\r\n                        isContinue = false;\r\n                    } else {\r\n                        contentmenuCollectionItem.label =\r\n                            contentmenuCollectionItem.label.replace(\r\n                                \"$1\",\r\n                                colCount,\r\n                            );\r\n                    }\r\n                }\r\n\r\n                if (isContinue) {\r\n                    result.push(contentmenuCollectionItem);\r\n                }\r\n            } else {\r\n                result.push(contextmenu);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\n// create empty row data\r\nexport function createEmptyRowData({ colgroups, rowKeyFieldName }) {\r\n    let rowData = {\r\n        [rowKeyFieldName]: getRandomId(),\r\n    };\r\n\r\n    colgroups.forEach((column) => {\r\n        if (column.field) {\r\n            rowData[column.field] = \"\";\r\n        }\r\n    });\r\n\r\n    return rowData;\r\n}\r\n\r\n//  empty row data\r\n// export function emptyRowData({ rowData, rowKeyFieldName }) {\r\n//     Object.keys(rowData).forEach((key) => {\r\n//         if (key !== rowKeyFieldName) {\r\n//             rowData[key] = \"\";\r\n//         }\r\n//     });\r\n\r\n//     return rowData;\r\n// }\r\n\r\n// is contextmenu panel clicked\r\nexport function isContextmenuPanelClicked(event) {\r\n    let result = false;\r\n    const contextmenuPanelEls = document.querySelectorAll(\r\n        \".ve-contextmenu-popper\",\r\n    );\r\n    [].forEach.call(contextmenuPanelEls, function (el) {\r\n        if (el.contains(event.target)) {\r\n            result = true;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getColKeysByHeaderColumn\r\n * @desc\r\n * @param {object} headerColumnItem\r\n * @param {any} colKey2\r\n * @return Array<colKeys>\r\n */\r\nexport function getColKeysByHeaderColumn({ headerColumnItem }) {\r\n    let result = null;\r\n\r\n    const { _keys } = headerColumnItem;\r\n\r\n    result = _keys.split(\"|\");\r\n    if (result.length > 1) {\r\n        result = result.slice(0, result.length - 1);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getColKeysByRangeColKeys\r\n * @desc  get col keys by range col keys\r\n * @param {any} colKey1\r\n * @param {any} colKey2\r\n * @return Array<colKeys>\r\n */\r\nexport function getColKeysByRangeColKeys({ colKey1, colKey2, colgroups }) {\r\n    let result = null;\r\n\r\n    const index1 = colgroups.findIndex((x) => x.key === colKey1);\r\n    const index2 = colgroups.findIndex((x) => x.key === colKey2);\r\n\r\n    if (index1 !== -1 && index1 !== -1) {\r\n        const beginIndex = index1 < index2 ? index1 : index2;\r\n        const endIndex = index1 < index2 ? index2 : index1;\r\n        result = colgroups.slice(beginIndex, endIndex + 1).map((x) => x.key);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getColKeysByFixedTypeWithinColKeys\r\n * @desc  get col keys by fixed type\r\n * @param {array<T>} colKeys\r\n * @param {string} fixedType - fixed type\r\n * @param {array<object>} colgroups\r\n * @return {array} colKeys\r\n */\r\nexport function getColKeysByFixedTypeWithinColKeys({\r\n    colKeys,\r\n    fixedType,\r\n    colgroups,\r\n}) {\r\n    let result = null;\r\n\r\n    if (Array.isArray(colKeys)) {\r\n        result = colgroups\r\n            .filter((x) => colKeys.indexOf(x.key) > -1 && x.fixed === fixedType)\r\n            .map((x) => x.key);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getColKeysByFixedType\r\n * @desc get col keys by fixed type\r\n * @param {string} fixedType - fixed type\r\n * @param {array<object>} colgroups\r\n * * @param {boolean} isExcludeOperationColumn\r\n * @return colKey\r\n */\r\nexport function getColKeysByFixedType({\r\n    fixedType,\r\n    colgroups,\r\n    isExcludeOperationColumn,\r\n}) {\r\n    let result = null;\r\n\r\n    result = colgroups\r\n        .filter((x) => {\r\n            const condition = x.fixed === fixedType;\r\n\r\n            // 排除操作列\r\n            if (isExcludeOperationColumn) {\r\n                return condition && !x.operationColumn;\r\n            }\r\n\r\n            return condition;\r\n        })\r\n        .map((x) => x.key);\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getRowKeysByRangeRowKeys\r\n * @desc get row keys by range row keys\r\n * @param {any} topRowKey - top row key\r\n * @param {any} bottomRowKey - bottom row key\r\n * @return Array<colKeys>\r\n */\r\nexport function getRowKeysByRangeRowKeys({\r\n    topRowKey,\r\n    bottomRowKey,\r\n    allRowKeys,\r\n}) {\r\n    let result = null;\r\n\r\n    const beginIndex = allRowKeys.findIndex((x) => x === topRowKey);\r\n    const endIndex = allRowKeys.findIndex((x) => x === bottomRowKey);\r\n\r\n    if (beginIndex !== -1 && endIndex !== -1) {\r\n        result = allRowKeys.slice(beginIndex, endIndex + 1);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @isCellInSelectionRange\r\n * @desc is cell in selection range\r\n * @param {object} cellData - cell data\r\n * @param {object} cellSelectionRangeData\r\n * @param {array<object>} colgroups\r\n * @param {array<object>} allRowKeys\r\n * @return {Array<colKeys>}\r\n */\r\nexport function isCellInSelectionRange({\r\n    cellData,\r\n    cellSelectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n\r\n    const colKeys = getColKeysByRangeColKeys({\r\n        colKey1: leftColKey,\r\n        colKey2: rightColKey,\r\n        colgroups,\r\n    });\r\n    const rowKeys = getRowKeysByRangeRowKeys({\r\n        topRowKey,\r\n        bottomRowKey,\r\n        allRowKeys,\r\n    });\r\n\r\n    if (\r\n        colKeys.indexOf(cellData.colKey) > -1 &&\r\n        rowKeys.indexOf(cellData.rowKey) > -1\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @isClearSelectionByBodyCellRightClick\r\n * @desc is clear selection by body cell click\r\n * @param {number} mouseEventClickType\r\n * @param {object} cellData - cell data\r\n * @param {object} cellSelectionRangeData\r\n * @param {array<object>} colgroups\r\n * @param {array<object>} allRowKeys\r\n * @return {bool}\r\n */\r\nexport function isClearSelectionByBodyCellRightClick({\r\n    mouseEventClickType,\r\n    cellData,\r\n    cellSelectionData,\r\n    cellSelectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    let result = true;\r\n    if (mouseEventClickType === MOUSE_EVENT_CLICK_TYPE.RIGHT_MOUSE) {\r\n        const { normalEndCell } = cellSelectionData;\r\n        if (normalEndCell.rowIndex > -1) {\r\n            result = !isCellInSelectionRange({\r\n                cellData,\r\n                cellSelectionRangeData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getSelectionRangeKeys\r\n * @desc get selection range keys\r\n * @param {object} cellSelectionRangeData\r\n * @return Array<colKeys>\r\n */\r\nexport function getSelectionRangeKeys({ cellSelectionRangeData }) {\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n    return {\r\n        startColKey: leftColKey,\r\n        endColKey: rightColKey,\r\n        startRowKey: topRowKey,\r\n        endRowKey: bottomRowKey,\r\n    };\r\n}\r\n\r\n/**\r\n * @getSelectionRangeIndexes\r\n * @desc get selection range indexes\r\n * @param {object} cellSelectionRangeData\r\n * @param {array<object>} colgroups\r\n * @param {array<object>} allRowKeys\r\n * @return Array<colKeys>\r\n */\r\nexport function getSelectionRangeIndexes({\r\n    cellSelectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n    return {\r\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\r\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\r\n        startRowIndex: allRowKeys.indexOf(topRowKey),\r\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\r\n    };\r\n}\r\n\r\n/**\r\n * @getSelectionRangeData\r\n * @desc get selection range data\r\n * @param {object} cellSelectionRangeData\r\n * @param {string} resultType \"normal\": contains key/value ; \"flat\":only contains value\r\n * @param {array<object>} tableData\r\n * @param {array<object>} colgroups\r\n * @param {array<object>} allRowKeys\r\n * @return Array<colKeys>\r\n */\r\nexport function getSelectionRangeData({\r\n    cellSelectionRangeData,\r\n    resultType = \"normal\",\r\n    tableData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    let result = null;\r\n\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n\r\n    const startColIndex = colgroups.findIndex((x) => x.key === leftColKey);\r\n    const endColIndex = colgroups.findIndex((x) => x.key === rightColKey);\r\n    const startRowIndex = allRowKeys.indexOf(topRowKey);\r\n    const endRowIndex = allRowKeys.indexOf(bottomRowKey);\r\n\r\n    const fieldNames = colgroups\r\n        .slice(startColIndex, endColIndex + 1)\r\n        .map((x) => x.field);\r\n\r\n    if (resultType === \"normal\") {\r\n        result = tableData\r\n            .slice(startRowIndex, endRowIndex + 1)\r\n            .map((rowData) => {\r\n                let newRow = {};\r\n\r\n                fieldNames.forEach((fieldName) => {\r\n                    newRow[fieldName] = rowData[fieldName] ?? \"\";\r\n                });\r\n\r\n                return newRow;\r\n            });\r\n    } else {\r\n        result = tableData\r\n            .slice(startRowIndex, endRowIndex + 1)\r\n            .map((rowData) => {\r\n                let newRow = [];\r\n\r\n                fieldNames.forEach((fieldName) => {\r\n                    newRow.push(rowData[fieldName] ?? \"\");\r\n                });\r\n\r\n                return newRow;\r\n            });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @isExistFixedColKey\r\n * @desc is exist given fixed col key\r\n * @param {string} fixedType - fixed type\r\n * @param {array<T>} colKeys\r\n * @param {array<object>} colgroups\r\n * @return bool\r\n */\r\nexport function isExistGivenFixedColKey({ fixedType, colKeys, colgroups }) {\r\n    let result = false;\r\n    if (Array.isArray(colKeys)) {\r\n        result = colgroups.some((x) => {\r\n            return colKeys.indexOf(x.key) > -1 && x.fixed === fixedType;\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @isExistNotFixedColKey\r\n * @desc is exist not fixed col key\r\n * @param {array<T>} colKeys\r\n * @param {array<object>} colgroups\r\n * @return bool\r\n */\r\nexport function isExistNotFixedColKey({ colKeys, colgroups }) {\r\n    let result = false;\r\n    if (Array.isArray(colKeys)) {\r\n        result = colgroups.filter(\r\n            (x) => !x.fixed && colKeys.indexOf(x.key) > -1,\r\n        ).length;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getLeftmostOrRightmostColKey\r\n * @desc get leftmost or rightmost column key\r\n * @param {string} type\r\n * @param {array<object>} colgroups\r\n * @param {array<any>} colKeys\r\n * @return colKey\r\n */\r\nfunction getLeftmostOrRightmostColKey({ type, colgroups, colKeys }) {\r\n    let result = null;\r\n\r\n    if (Array.isArray(colKeys) && colKeys.length) {\r\n        let mostObj = {\r\n            colKey: null,\r\n            colIndex: null,\r\n        };\r\n        colKeys.forEach((colKey) => {\r\n            const colIndex = colgroups.findIndex((x) => x.key === colKey);\r\n\r\n            if (colIndex === -1) {\r\n                console.warn(\r\n                    `getLeftmostOrRightmostColKey error:: can't find colKey:${colKey}`,\r\n                );\r\n                return false;\r\n            }\r\n\r\n            if (isEmptyValue(mostObj.colKey)) {\r\n                mostObj = {\r\n                    colKey,\r\n                    colIndex: colIndex,\r\n                };\r\n            } else {\r\n                if (type === \"leftmost\") {\r\n                    if (colIndex < mostObj.colIndex) {\r\n                        mostObj = {\r\n                            colKey,\r\n                            colIndex: colIndex,\r\n                        };\r\n                    }\r\n                } else if (type === \"rightmost\") {\r\n                    if (colIndex > mostObj.colIndex) {\r\n                        mostObj = {\r\n                            colKey,\r\n                            colIndex: colIndex,\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        result = mostObj.colKey;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getLeftmostColKey\r\n * @desc get leftmost column key\r\n * @param {array<object>} colgroups\r\n * @param {array<any>} colKeys\r\n * @return colKey\r\n */\r\nexport function getLeftmostColKey({ colgroups, colKeys }) {\r\n    return getLeftmostOrRightmostColKey({\r\n        type: \"leftmost\",\r\n        colgroups,\r\n        colKeys,\r\n    });\r\n}\r\n\r\n/**\r\n * @getRightmostColKey\r\n * @desc get rightmost column key\r\n * @param {array<object>} colgroups\r\n * @param {array<any>} colKeys\r\n * @return colKey\r\n */\r\nexport function getRightmostColKey({ colgroups, colKeys }) {\r\n    return getLeftmostOrRightmostColKey({\r\n        type: \"rightmost\",\r\n        colgroups,\r\n        colKeys,\r\n    });\r\n}\r\n\r\n/**\r\n * @getPreviewColKey\r\n * @desc get preview column key\r\n * @param {array<object>} colgroups\r\n * @param {any} currentColKey\r\n * @return colKey\r\n */\r\nexport function getPreviewColKey({ colgroups, currentColKey }) {\r\n    let result = null;\r\n\r\n    if (!isEmptyValue(currentColKey)) {\r\n        const index = colgroups.findIndex((x) => x.key === currentColKey);\r\n        if (index === 0) {\r\n            result = currentColKey;\r\n        } else if (index > 0) {\r\n            result = colgroups[index - 1].key;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @getNextColKey\r\n * @desc get next column key\r\n * @param {array<object>} colgroups\r\n * @param {any} currentColKey\r\n * @return colKey\r\n */\r\nexport function getNextColKey({ colgroups, currentColKey }) {\r\n    let result = null;\r\n\r\n    if (!isEmptyValue(currentColKey)) {\r\n        const index = colgroups.findIndex((x) => x.key === currentColKey);\r\n        if (index === colgroups.length - 1) {\r\n            result = currentColKey;\r\n        } else if (index < colgroups.length - 1) {\r\n            result = colgroups[index + 1].key;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/***\r\n * @cellAutofill\r\n * @desc cell auto fill\r\n * @param {bool} isReplaceData\r\n * @param {array<object>} tableData\r\n * @param {array<any>} allRowKeys\r\n * @param {array<object>} colgroups\r\n * @param {string} direction\r\n * @param {string} rowKeyFieldName\r\n * @param {object} nextCurrentCell next current cell\r\n * @param {object} nextNormalEndCell next normal end cell\r\n * @return autofillChangeDatas\r\n */\r\nexport function cellAutofill({\r\n    isReplaceData,\r\n    tableData,\r\n    allRowKeys,\r\n    colgroups,\r\n    direction,\r\n    rowKeyFieldName,\r\n    cellSelectionRangeData,\r\n    nextCurrentCell,\r\n    nextNormalEndCell,\r\n}) {\r\n    let cellSelectionTableData = [];\r\n\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n\r\n    // source selection range\r\n    let sourceSelectionRangeIndexes = {\r\n        startRowIndex: -1,\r\n        endRowIndex: -1,\r\n        startColIndex: -1,\r\n        endColIndex: -1,\r\n    };\r\n    // target selection range\r\n    let targetSelectionRangeIndexes = {\r\n        startRowIndex: -1,\r\n        endRowIndex: -1,\r\n        startColIndex: -1,\r\n        endColIndex: -1,\r\n    };\r\n\r\n    sourceSelectionRangeIndexes.startRowIndex = allRowKeys.indexOf(topRowKey);\r\n    sourceSelectionRangeIndexes.endRowIndex = allRowKeys.indexOf(bottomRowKey);\r\n    sourceSelectionRangeIndexes.startColIndex = colgroups.findIndex(\r\n        (x) => x.key === leftColKey,\r\n    );\r\n    sourceSelectionRangeIndexes.endColIndex = colgroups.findIndex(\r\n        (x) => x.key === rightColKey,\r\n    );\r\n\r\n    cellSelectionTableData = tableData.slice(\r\n        sourceSelectionRangeIndexes.startRowIndex,\r\n        sourceSelectionRangeIndexes.endRowIndex + 1,\r\n    );\r\n\r\n    if (direction === AUTOFILLING_DIRECTION.UP) {\r\n        //\r\n        targetSelectionRangeIndexes.startRowIndex = allRowKeys.indexOf(\r\n            nextCurrentCell.rowKey,\r\n        );\r\n        targetSelectionRangeIndexes.endRowIndex =\r\n            sourceSelectionRangeIndexes.startRowIndex - 1;\r\n        targetSelectionRangeIndexes.startColIndex =\r\n            sourceSelectionRangeIndexes.startColIndex;\r\n        targetSelectionRangeIndexes.endColIndex =\r\n            sourceSelectionRangeIndexes.endColIndex;\r\n\r\n        if (isReplaceData) {\r\n            let cellSelectionTableDataRowIndex =\r\n                cellSelectionTableData.length - 1;\r\n            for (\r\n                let rowIndex = targetSelectionRangeIndexes.endRowIndex;\r\n                rowIndex >= targetSelectionRangeIndexes.startRowIndex;\r\n                rowIndex--\r\n            ) {\r\n                for (\r\n                    let colIndex = targetSelectionRangeIndexes.startColIndex;\r\n                    colIndex <= targetSelectionRangeIndexes.endColIndex;\r\n                    colIndex++\r\n                ) {\r\n                    const fieldName = colgroups[colIndex].field;\r\n\r\n                    // repeat autofill cell selection data\r\n                    if (cellSelectionTableDataRowIndex < 0) {\r\n                        cellSelectionTableDataRowIndex =\r\n                            cellSelectionTableData.length - 1;\r\n                    }\r\n                    tableData[rowIndex][fieldName] =\r\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\r\n                            fieldName\r\n                        ];\r\n                }\r\n\r\n                --cellSelectionTableDataRowIndex;\r\n            }\r\n        }\r\n    } else if (direction === AUTOFILLING_DIRECTION.DOWN) {\r\n        //\r\n        targetSelectionRangeIndexes.startRowIndex =\r\n            sourceSelectionRangeIndexes.endRowIndex + 1;\r\n        targetSelectionRangeIndexes.endRowIndex = allRowKeys.indexOf(\r\n            nextNormalEndCell.rowKey,\r\n        );\r\n        targetSelectionRangeIndexes.startColIndex =\r\n            sourceSelectionRangeIndexes.startColIndex;\r\n        targetSelectionRangeIndexes.endColIndex =\r\n            sourceSelectionRangeIndexes.endColIndex;\r\n\r\n        if (isReplaceData) {\r\n            let cellSelectionTableDataRowIndex = 0;\r\n            for (\r\n                let rowIndex = targetSelectionRangeIndexes.startRowIndex;\r\n                rowIndex <= targetSelectionRangeIndexes.endRowIndex;\r\n                rowIndex++\r\n            ) {\r\n                for (\r\n                    let colIndex = targetSelectionRangeIndexes.startColIndex;\r\n                    colIndex <= targetSelectionRangeIndexes.endColIndex;\r\n                    colIndex++\r\n                ) {\r\n                    const fieldName = colgroups[colIndex].field;\r\n\r\n                    // repeat autofill cell selection data\r\n                    if (\r\n                        cellSelectionTableDataRowIndex >\r\n                        cellSelectionTableData.length - 1\r\n                    ) {\r\n                        cellSelectionTableDataRowIndex = 0;\r\n                    }\r\n                    tableData[rowIndex][fieldName] =\r\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\r\n                            fieldName\r\n                        ];\r\n                }\r\n\r\n                ++cellSelectionTableDataRowIndex;\r\n            }\r\n        }\r\n    } else if (direction === AUTOFILLING_DIRECTION.LEFT) {\r\n        //\r\n        targetSelectionRangeIndexes.startRowIndex =\r\n            sourceSelectionRangeIndexes.startRowIndex;\r\n        targetSelectionRangeIndexes.endRowIndex =\r\n            sourceSelectionRangeIndexes.endRowIndex;\r\n        targetSelectionRangeIndexes.startColIndex = colgroups.findIndex(\r\n            (x) => x.key === nextCurrentCell.colKey,\r\n        );\r\n        targetSelectionRangeIndexes.endColIndex =\r\n            sourceSelectionRangeIndexes.startColIndex - 1;\r\n\r\n        if (isReplaceData) {\r\n            let cellSelectionTableDataRowIndex = 0;\r\n            for (\r\n                let rowIndex = targetSelectionRangeIndexes.startRowIndex;\r\n                rowIndex <= targetSelectionRangeIndexes.endRowIndex;\r\n                rowIndex++\r\n            ) {\r\n                let cellSelectionTableDataColIndex =\r\n                    sourceSelectionRangeIndexes.endColIndex;\r\n\r\n                for (\r\n                    let colIndex = targetSelectionRangeIndexes.endColIndex;\r\n                    colIndex >= targetSelectionRangeIndexes.startColIndex;\r\n                    colIndex--\r\n                ) {\r\n                    const fieldName = colgroups[colIndex].field;\r\n\r\n                    // repeat autofill cell selection data\r\n                    if (\r\n                        cellSelectionTableDataColIndex <\r\n                        sourceSelectionRangeIndexes.startColIndex\r\n                    ) {\r\n                        cellSelectionTableDataColIndex =\r\n                            sourceSelectionRangeIndexes.endColIndex;\r\n                    }\r\n\r\n                    tableData[rowIndex][fieldName] =\r\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\r\n                            colgroups[cellSelectionTableDataColIndex].field\r\n                        ];\r\n                    --cellSelectionTableDataColIndex;\r\n                }\r\n                ++cellSelectionTableDataRowIndex;\r\n            }\r\n        }\r\n    } else if (direction === AUTOFILLING_DIRECTION.RIGHT) {\r\n        //\r\n        targetSelectionRangeIndexes.startRowIndex =\r\n            sourceSelectionRangeIndexes.startRowIndex;\r\n        targetSelectionRangeIndexes.endRowIndex =\r\n            sourceSelectionRangeIndexes.endRowIndex;\r\n        targetSelectionRangeIndexes.startColIndex =\r\n            sourceSelectionRangeIndexes.endColIndex + 1;\r\n        targetSelectionRangeIndexes.endColIndex = colgroups.findIndex(\r\n            (x) => x.key === nextNormalEndCell.colKey,\r\n        );\r\n\r\n        if (isReplaceData) {\r\n            let cellSelectionTableDataRowIndex = 0;\r\n            for (\r\n                let rowIndex = targetSelectionRangeIndexes.startRowIndex;\r\n                rowIndex <= targetSelectionRangeIndexes.endRowIndex;\r\n                rowIndex++\r\n            ) {\r\n                let cellSelectionTableDataColIndex =\r\n                    sourceSelectionRangeIndexes.startColIndex;\r\n\r\n                for (\r\n                    let colIndex = targetSelectionRangeIndexes.startColIndex;\r\n                    colIndex <= targetSelectionRangeIndexes.endColIndex;\r\n                    colIndex++\r\n                ) {\r\n                    const fieldName = colgroups[colIndex].field;\r\n\r\n                    // repeat autofill cell selection data\r\n                    if (\r\n                        cellSelectionTableDataColIndex >\r\n                        sourceSelectionRangeIndexes.startColIndex +\r\n                            (sourceSelectionRangeIndexes.endColIndex -\r\n                                sourceSelectionRangeIndexes.startColIndex)\r\n                    ) {\r\n                        cellSelectionTableDataColIndex =\r\n                            sourceSelectionRangeIndexes.startColIndex;\r\n                    }\r\n\r\n                    tableData[rowIndex][fieldName] =\r\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\r\n                            colgroups[cellSelectionTableDataColIndex].field\r\n                        ];\r\n                    ++cellSelectionTableDataColIndex;\r\n                }\r\n                ++cellSelectionTableDataRowIndex;\r\n            }\r\n        }\r\n    }\r\n\r\n    let response = {\r\n        direction,\r\n        sourceSelectionRangeIndexes,\r\n        targetSelectionRangeIndexes,\r\n        sourceSelectionData: [],\r\n        targetSelectionData: [],\r\n    };\r\n\r\n    const sourceFieldNames = colgroups\r\n        .slice(\r\n            sourceSelectionRangeIndexes.startColIndex,\r\n            sourceSelectionRangeIndexes.endColIndex + 1,\r\n        )\r\n        .map((x) => x.field);\r\n    response.sourceSelectionData = tableData\r\n        .slice(\r\n            sourceSelectionRangeIndexes.startRowIndex,\r\n            sourceSelectionRangeIndexes.endRowIndex + 1,\r\n        )\r\n        .map((rowData) => {\r\n            let newData = {\r\n                [rowKeyFieldName]: rowData[rowKeyFieldName],\r\n            };\r\n            sourceFieldNames.forEach((fieldName) => {\r\n                newData[fieldName] = rowData[fieldName];\r\n            });\r\n            return newData;\r\n        });\r\n\r\n    const targetFieldNames = colgroups\r\n        .slice(\r\n            targetSelectionRangeIndexes.startColIndex,\r\n            targetSelectionRangeIndexes.endColIndex + 1,\r\n        )\r\n        .map((x) => x.field);\r\n    response.targetSelectionData = tableData\r\n        .slice(\r\n            targetSelectionRangeIndexes.startRowIndex,\r\n            targetSelectionRangeIndexes.endRowIndex + 1,\r\n        )\r\n        .map((rowData) => {\r\n            let newData = {\r\n                [rowKeyFieldName]: rowData[rowKeyFieldName],\r\n            };\r\n            targetFieldNames.forEach((fieldName) => {\r\n                newData[fieldName] = rowData[fieldName];\r\n            });\r\n            return newData;\r\n        });\r\n\r\n    return response;\r\n}\r\n\r\n/***\r\n * @setColumnFixed\r\n * @desc set column fixed\r\n * @param {array<object>} cloneColumns\r\n * @param {object} cellSelectionRangeData\r\n * @param {string} fixedType COLUMN_FIXED_TYPE\r\n * @param {array<object>} colgroups\r\n * @param {bool} enableColumnResize\r\n * @return cloneColumns\r\n */\r\nexport function setColumnFixed({\r\n    cloneColumns,\r\n    cellSelectionRangeData,\r\n    fixedType,\r\n    colgroups,\r\n    enableColumnResize,\r\n}) {\r\n    let result = cloneColumns;\r\n\r\n    const { leftColKey, rightColKey } = cellSelectionRangeData;\r\n\r\n    let colKey;\r\n\r\n    if (COLUMN_FIXED_TYPE.LEFT === fixedType) {\r\n        colKey = rightColKey;\r\n    } else if (COLUMN_FIXED_TYPE.RIGHT === fixedType) {\r\n        colKey = leftColKey;\r\n    }\r\n\r\n    // find col index from cloneColumns\r\n    const fixedColIndex = cloneColumns.findIndex((colItem) => {\r\n        if (colItem._level === 1 && colItem.key === colKey) {\r\n            return true;\r\n        } else {\r\n            const colKeys = getColKeysByHeaderColumn({\r\n                headerColumnItem: colItem,\r\n            });\r\n            if (colKeys.indexOf(colKey) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n    });\r\n\r\n    if (fixedColIndex > -1) {\r\n        // 不允许改变原有固定列方向\r\n        const oldFixedType = cloneColumns[fixedColIndex].fixed;\r\n        if (!isEmptyValue(oldFixedType) && oldFixedType !== fixedType) {\r\n            return false;\r\n        }\r\n\r\n        result = cloneColumns.map((colItem, index) => {\r\n            // 清除所有固定\r\n            if (colItem.fixed === fixedType) {\r\n                colItem.fixed = \"\";\r\n            }\r\n\r\n            // 允许列自适应 && 不是多列表头\r\n            if (\r\n                enableColumnResize &&\r\n                !(Array.isArray(colItem.children) && colItem.children.length)\r\n            ) {\r\n                const _colItem = colgroups.find(\r\n                    (x) => x.key === colItem.key && !isEmptyValue(x.key),\r\n                );\r\n                if (_colItem) {\r\n                    colItem.width = _colItem._columnResizeWidth;\r\n                }\r\n            }\r\n\r\n            if (COLUMN_FIXED_TYPE.LEFT === fixedType) {\r\n                // 不允许左冻结最后一列\r\n                if (index <= fixedColIndex && index < cloneColumns.length) {\r\n                    colItem.fixed = fixedType;\r\n                }\r\n            } else {\r\n                // 不允许右冻结第一列\r\n                if (index >= fixedColIndex && index > 0) {\r\n                    colItem.fixed = fixedType;\r\n                }\r\n            }\r\n            return colItem;\r\n        });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/***\r\n * @cancelColumnFixed\r\n * @desc cancel column fixed\r\n * @param {array<object>} cloneColumns\r\n * @param {array<object>} colgroups\r\n * @param {string} fixedType COLUMN_FIXED_TYPE\r\n * @param {bool} enableColumnResize\r\n * @return cloneColumns\r\n */\r\nexport function cancelColumnFixed({\r\n    cloneColumns,\r\n    colgroups,\r\n    fixedType,\r\n    enableColumnResize,\r\n}) {\r\n    return cloneColumns.map((colItem) => {\r\n        // 允许列自适应 && 不是多列表头\r\n        if (\r\n            enableColumnResize &&\r\n            !(Array.isArray(colItem.children) && colItem.children.length)\r\n        ) {\r\n            const _colItem = colgroups.find(\r\n                (x) => x.key === colItem.key && !isEmptyValue(x.key),\r\n            );\r\n            if (_colItem) {\r\n                colItem.width = _colItem._columnResizeWidth;\r\n            }\r\n        }\r\n\r\n        if (COLUMN_FIXED_TYPE.LEFT === fixedType) {\r\n            if (\r\n                colItem.fixed === fixedType &&\r\n                !isOperationColumn(colItem.key, colgroups)\r\n            ) {\r\n                colItem.fixed = \"\";\r\n            }\r\n        } else {\r\n            if (colItem.fixed === fixedType) {\r\n                colItem.fixed = \"\";\r\n            }\r\n        }\r\n        return colItem;\r\n    });\r\n}\r\n","const regUniversalNewLine = /^(\\r\\n|\\n\\r|\\r|\\n)/;\r\nconst regNextCellNoQuotes = /^[^\\t\\r\\n]+/;\r\nconst regNextEmptyCell = /^\\t/;\r\n\r\n/**\r\n * @decodeSpreadsheetStr\r\n * @desc Decode spreadsheet string into array.  refer from http://github.com/warpech/sheetclip/\r\n * @param {string} str The string to parse.\r\n * @returns {array}\r\n */\r\nexport function decodeSpreadsheetStr(str) {\r\n    let arr = [[\"\"]];\r\n\r\n    if (str.length === 0) {\r\n        return arr;\r\n    }\r\n\r\n    let column = 0;\r\n    let row = 0;\r\n    let lastLength;\r\n\r\n    while (str.length > 0) {\r\n        if (lastLength === str.length) {\r\n            // In the case If in last cycle we didn't match anything, we have to leave the infinite loop\r\n            break;\r\n        }\r\n\r\n        lastLength = str.length;\r\n\r\n        if (str.match(regNextEmptyCell)) {\r\n            str = str.replace(regNextEmptyCell, \"\");\r\n\r\n            column += 1;\r\n            arr[row][column] = \"\";\r\n        } else if (str.match(regUniversalNewLine)) {\r\n            str = str.replace(regUniversalNewLine, \"\");\r\n            column = 0;\r\n            row += 1;\r\n\r\n            arr[row] = [\"\"];\r\n        } else {\r\n            let nextCell = \"\";\r\n\r\n            if (str.startsWith('\"')) {\r\n                let quoteNo = 0;\r\n                let isStillCell = true;\r\n\r\n                while (isStillCell) {\r\n                    const nextChar = str.slice(0, 1);\r\n\r\n                    if (nextChar === '\"') {\r\n                        quoteNo += 1;\r\n                    }\r\n\r\n                    nextCell += nextChar;\r\n\r\n                    str = str.slice(1);\r\n\r\n                    if (\r\n                        str.length === 0 ||\r\n                        (str.match(/^[\\t\\r\\n]/) && quoteNo % 2 === 0)\r\n                    ) {\r\n                        isStillCell = false;\r\n                    }\r\n                }\r\n\r\n                nextCell = nextCell\r\n                    .replace(/^\"/, \"\")\r\n                    .replace(/\"$/, \"\")\r\n                    .replace(/[\"]*/g, (match) =>\r\n                        new Array(Math.floor(match.length / 2))\r\n                            .fill('\"')\r\n                            .join(\"\"),\r\n                    );\r\n            } else {\r\n                const matchedText = str.match(regNextCellNoQuotes);\r\n\r\n                nextCell = matchedText ? matchedText[0] : \"\";\r\n                str = str.slice(nextCell.length);\r\n            }\r\n\r\n            arr[row][column] = nextCell;\r\n        }\r\n    }\r\n    // 去除 excel 最后一个多余的换行数据\r\n    if (Array.isArray(arr) && arr.length > 1) {\r\n        if (arr[arr.length - 1].length === 1 && arr[arr.length - 1][0] === \"\") {\r\n            arr = arr.slice(0, arr.length - 1);\r\n        }\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\n/**\r\n * @decodeSpreadsheetStr\r\n * @desc encode array to spreadsheet string.  refer from http://github.com/warpech/sheetclip/\r\n * @param {array} str The string to parse.\r\n * @returns {string}\r\n */\r\nexport function encodeToSpreadsheetStr(arr) {\r\n    let r;\r\n    let rLen;\r\n    let c;\r\n    let cLen;\r\n    let str = \"\";\r\n    let val;\r\n\r\n    for (r = 0, rLen = arr.length; r < rLen; r += 1) {\r\n        cLen = arr[r].length;\r\n\r\n        for (c = 0; c < cLen; c += 1) {\r\n            if (c > 0) {\r\n                str += \"\\t\";\r\n            }\r\n            val = arr[r][c];\r\n\r\n            if (typeof val === \"string\") {\r\n                if (val.indexOf(\"\\n\") > -1) {\r\n                    str += `\"${val.replace(/\"/g, '\"\"')}\"`;\r\n                } else {\r\n                    str += val;\r\n                }\r\n            } else if (val === null || val === void 0) {\r\n                // void 0 resolves to undefined\r\n                str += \"\";\r\n            } else {\r\n                str += val;\r\n            }\r\n        }\r\n\r\n        if (r !== rLen - 1) {\r\n            str += \"\\n\";\r\n        }\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\n/**\r\n * @onBeforeCopy\r\n * @desc on before copy\r\n * @param {Event} event\r\n * @return {selectionRangeIndexes,selectionRangeKeys,data}\r\n */\r\nexport function onBeforeCopy({\r\n    cellSelectionRangeData,\r\n    selectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n\r\n    const selectionRangeIndexes = {\r\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\r\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\r\n        startRowIndex: allRowKeys.indexOf(topRowKey),\r\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\r\n    };\r\n\r\n    const selectionRangeKeys = {\r\n        startColKey: leftColKey,\r\n        endColKey: rightColKey,\r\n        startRowKey: topRowKey,\r\n        endRowKey: bottomRowKey,\r\n    };\r\n\r\n    const response = {\r\n        selectionRangeIndexes,\r\n        selectionRangeKeys,\r\n        data: selectionRangeData,\r\n    };\r\n\r\n    return response;\r\n}\r\n\r\n/**\r\n * @onAfterCopy\r\n * @desc on after copy\r\n * @param {Event} event\r\n * @return\r\n */\r\nexport function onAfterCopy({ event, selectionRangeData }) {\r\n    const spreadsheetStr = encodeToSpreadsheetStr(selectionRangeData);\r\n\r\n    if (event.clipboardData) {\r\n        event.clipboardData.setData(\"text/plain\", spreadsheetStr);\r\n    }\r\n    // IE browser\r\n    else if (window.clipboardData) {\r\n        window.clipboardData.setData(\"Text\", spreadsheetStr);\r\n    }\r\n}\r\n\r\n/**\r\n * @onBeforePaste\r\n * @desc on before paste\r\n * @param {Event} event\r\n * @return\r\n */\r\nexport function onBeforePaste({\r\n    event,\r\n    cellSelectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    let pastedData;\r\n\r\n    if (event.clipboardData) {\r\n        pastedData = event.clipboardData.getData(\"text/plain\");\r\n    }\r\n    // IE browser\r\n    else if (window.clipboardData) {\r\n        pastedData = window.clipboardData.getData(\"Text\");\r\n    }\r\n\r\n    if (typeof pastedData !== \"string\") {\r\n        return null;\r\n    }\r\n\r\n    let decodePasteData = decodeSpreadsheetStr(pastedData);\r\n\r\n    const startColIndex = colgroups.findIndex(\r\n        (x) => x.key === cellSelectionRangeData.leftColKey,\r\n    );\r\n    const endColIndex = Math.min(\r\n        startColIndex + decodePasteData[0].length - 1,\r\n        colgroups.length - 1,\r\n    );\r\n    const startRowIndex = allRowKeys.indexOf(cellSelectionRangeData.topRowKey);\r\n    const endRowIndex = Math.min(\r\n        startRowIndex + decodePasteData.length - 1,\r\n        allRowKeys.length - 1,\r\n    );\r\n\r\n    let response = {\r\n        selectionRangeIndexes: {\r\n            startColIndex,\r\n            endColIndex,\r\n            startRowIndex,\r\n            endRowIndex,\r\n        },\r\n        selectionRangeKeys: {\r\n            startColKey: colgroups[startColIndex].key,\r\n            endColKey: colgroups[endColIndex].key,\r\n            startRowKey: allRowKeys[startRowIndex],\r\n            endRowKey: allRowKeys[endRowIndex],\r\n        },\r\n        data: [],\r\n    };\r\n\r\n    const sourceFieldNames = colgroups\r\n        .slice(startColIndex, endColIndex + 1)\r\n        .map((x) => x.field);\r\n\r\n    response.data = decodePasteData\r\n        .slice(0, endRowIndex - startRowIndex + 1)\r\n        .map((rowData) => {\r\n            let newRow = {};\r\n\r\n            rowData.forEach((cellData, cellIndex) => {\r\n                if (cellIndex <= endColIndex - startColIndex) {\r\n                    newRow[sourceFieldNames[cellIndex]] = cellData;\r\n                }\r\n            });\r\n            return newRow;\r\n        });\r\n\r\n    return response;\r\n}\r\n\r\n/**\r\n * @onAfterPaste\r\n * @desc on after paste\r\n * @param {Event} event\r\n * @return\r\n */\r\nexport function onAfterPaste({ tableData, beforePasteResponse }) {\r\n    const { data: pasteData, selectionRangeIndexes } = beforePasteResponse;\r\n\r\n    pasteData.forEach((rowData, rowIndex) => {\r\n        Object.assign(\r\n            tableData[selectionRangeIndexes.startRowIndex + rowIndex],\r\n            rowData,\r\n        );\r\n    });\r\n}\r\n\r\n/**\r\n * @onBeforeCut\r\n * @desc on before cut\r\n * @param {Event} event\r\n * @return {selectionRangeIndexes,selectionRangeKeys,data}\r\n */\r\nexport function onBeforeCut({\r\n    cellSelectionRangeData,\r\n    selectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n\r\n    const selectionRangeIndexes = {\r\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\r\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\r\n        startRowIndex: allRowKeys.indexOf(topRowKey),\r\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\r\n    };\r\n\r\n    const selectionRangeKeys = {\r\n        startColKey: leftColKey,\r\n        endColKey: rightColKey,\r\n        startRowKey: topRowKey,\r\n        endRowKey: bottomRowKey,\r\n    };\r\n\r\n    const response = {\r\n        selectionRangeIndexes,\r\n        selectionRangeKeys,\r\n        data: selectionRangeData,\r\n    };\r\n\r\n    return response;\r\n}\r\n\r\n/**\r\n * @onAfterCut\r\n * @desc on after cut\r\n * @param {Event} event\r\n * @return\r\n */\r\nexport function onAfterCut({\r\n    event,\r\n    tableData,\r\n    colgroups,\r\n    selectionRangeData,\r\n    selectionRangeIndexes,\r\n}) {\r\n    const spreadsheetStr = encodeToSpreadsheetStr(selectionRangeData);\r\n\r\n    const { endColIndex, endRowIndex, startColIndex, startRowIndex } =\r\n        selectionRangeIndexes;\r\n\r\n    // 移除制定的表格数据\r\n    const fieldNames = colgroups\r\n        .slice(startColIndex, endColIndex + 1)\r\n        .map((x) => x.field);\r\n\r\n    tableData.forEach((rowData, rowIndex) => {\r\n        if (rowIndex >= startRowIndex && rowIndex <= endRowIndex) {\r\n            fieldNames.forEach((fieldName) => {\r\n                rowData[fieldName] = \"\";\r\n            });\r\n        }\r\n    });\r\n\r\n    if (event.clipboardData) {\r\n        event.clipboardData.setData(\"text/plain\", spreadsheetStr);\r\n    }\r\n    // IE browser\r\n    else if (window.clipboardData) {\r\n        window.clipboardData.setData(\"Text\", spreadsheetStr);\r\n    }\r\n}\r\n\r\n/**\r\n * @onBeforeDelete\r\n * @desc on before delete\r\n * @param {Event} event\r\n * @return {selectionRangeIndexes,selectionRangeKeys,data}\r\n */\r\nexport function onBeforeDelete({\r\n    cellSelectionRangeData,\r\n    selectionRangeData,\r\n    colgroups,\r\n    allRowKeys,\r\n}) {\r\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n        cellSelectionRangeData;\r\n\r\n    const selectionRangeIndexes = {\r\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\r\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\r\n        startRowIndex: allRowKeys.indexOf(topRowKey),\r\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\r\n    };\r\n\r\n    const selectionRangeKeys = {\r\n        startColKey: leftColKey,\r\n        endColKey: rightColKey,\r\n        startRowKey: topRowKey,\r\n        endRowKey: bottomRowKey,\r\n    };\r\n\r\n    const response = {\r\n        selectionRangeIndexes,\r\n        selectionRangeKeys,\r\n        data: selectionRangeData,\r\n    };\r\n\r\n    return response;\r\n}\r\n\r\n/**\r\n * @onAfterDelete\r\n * @desc on after delete\r\n * @param {Event} event\r\n * @return\r\n */\r\nexport function onAfterDelete({ tableData, colgroups, selectionRangeIndexes }) {\r\n    const { endColIndex, endRowIndex, startColIndex, startRowIndex } =\r\n        selectionRangeIndexes;\r\n\r\n    // 移除制定的表格数据\r\n    const fieldNames = colgroups\r\n        .slice(startColIndex, endColIndex + 1)\r\n        .map((x) => x.field);\r\n\r\n    tableData.forEach((rowData, rowIndex) => {\r\n        if (rowIndex >= startRowIndex && rowIndex <= endRowIndex) {\r\n            fieldNames.forEach((fieldName) => {\r\n                rowData[fieldName] = \"\";\r\n            });\r\n        }\r\n    });\r\n}\r\n","/*\r\nfork from:\r\nhttps://github.com/bvaughn/react-virtualized/blob/HEAD/source/utils/animationFrame.js\r\n*/\r\n\r\n// Properly handle server-side rendering.\r\nlet win;\r\nif (typeof window !== \"undefined\") {\r\n    win = window;\r\n} else if (typeof self !== \"undefined\") {\r\n    win = self;\r\n} else {\r\n    win = {};\r\n}\r\n\r\n// requestAnimationFrame() shim by Paul Irish\r\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\nconst request =\r\n    win.requestAnimationFrame ||\r\n    win.webkitRequestAnimationFrame ||\r\n    win.mozRequestAnimationFrame ||\r\n    win.oRequestAnimationFrame ||\r\n    win.msRequestAnimationFrame ||\r\n    function (callback) {\r\n        return win.setTimeout(callback, 1000 / 60);\r\n    };\r\n\r\nconst cancel =\r\n    win.cancelAnimationFrame ||\r\n    win.webkitCancelAnimationFrame ||\r\n    win.mozCancelAnimationFrame ||\r\n    win.oCancelAnimationFrame ||\r\n    win.msCancelAnimationFrame ||\r\n    function (id) {\r\n        win.clearTimeout(id);\r\n    };\r\n\r\nexport const raf = request;\r\nexport const caf = cancel;\r\n","/*\r\n * @getScrollbarWidth\r\n * @desc get scroll bar width\r\n * @param\r\n * @return\r\n */\r\nexport function getScrollbarWidth() {\r\n    const outer = document.createElement(\"div\");\r\n    outer.className = \"ve-scrollbar-wrap\";\r\n    outer.style.visibility = \"hidden\";\r\n    outer.style.width = \"100px\";\r\n    outer.style.position = \"absolute\";\r\n    outer.style.top = \"-9999px\";\r\n    document.body.appendChild(outer);\r\n\r\n    const widthNoScroll = outer.offsetWidth;\r\n    outer.style.overflow = \"scroll\";\r\n\r\n    const inner = document.createElement(\"div\");\r\n    inner.style.width = \"100%\";\r\n    outer.appendChild(inner);\r\n\r\n    const widthWithScroll = inner.offsetWidth;\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    return widthNoScroll - widthWithScroll;\r\n}\r\n","/*\r\nfork from:\r\nhttps://github.com/bvaughn/react-virtualized/blob/HEAD/source/utils/requestAnimationTimeout.js\r\n*/\r\n\r\nimport { caf, raf } from \"./animation-frame\";\r\n\r\nexport const cancelAnimationTimeout = (frame) => caf(frame.id);\r\n\r\n/**\r\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\r\n * When the delay time has been reached the function you're timing out will be called.\r\n *\r\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\r\n */\r\nexport const requestAnimationTimeout = (callback, delay) => {\r\n    let start;\r\n    // wait for end of processing current event handler, because event handler may be long\r\n    Promise.resolve().then(() => {\r\n        start = Date.now();\r\n    });\r\n\r\n    const timeout = () => {\r\n        if (Date.now() - start >= delay) {\r\n            callback.call();\r\n        } else {\r\n            frame.id = raf(timeout);\r\n        }\r\n    };\r\n\r\n    const frame = {\r\n        id: raf(timeout),\r\n    };\r\n\r\n    return frame;\r\n};\r\n","// is input key code\r\nexport function isInputKeyCode(event) {\r\n    let result = false;\r\n\r\n    const { keyCode, altKey, ctrlKey, shiftKey } = event;\r\n\r\n    // exclude keys\r\n    if (altKey || ctrlKey || shiftKey) {\r\n        return result;\r\n    }\r\n\r\n    // Digit0 to Digit9\r\n    if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105)) {\r\n        result = true;\r\n    }\r\n    // A to Z\r\n    else if (keyCode >= 65 && keyCode <= 90) {\r\n        result = true;\r\n    } else if (\r\n        [186, 187, 188, 189, 190, 191, 192, 219, 220, 221, 222].indexOf(\r\n            keyCode,\r\n        ) > -1\r\n    ) {\r\n        /*\r\n    Semicolon:186\r\n    Equal(\"=\"):187\r\n    Comma (\",\"):188\r\n    Minus(\"-\"):189\r\n    Period(\".\"):190\r\n    Slash(\"/\"):191\r\n    Backquote(\"`\"):192\r\n    Open square bracket (\"[\"):219\r\n    Backslash(\"\\\"):220\r\n    Close square bracket (\"]\"):221\r\n    Quote(\"'\"):222\r\n    */\r\n        result = true;\r\n    }\r\n    // Support non-English languages. Chinese, Japanese, French, etc.\r\n    else if (keyCode == 229) {\r\n        result = true;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// is direction key code\r\nexport function isDirectionKeyCode(keyCode) {\r\n    return [37, 38, 39, 40].indexOf(keyCode) > -1;\r\n}\r\n\r\n// is single key\r\n// export function isSingleKey() {}\r\n","/* \r\nhook system\r\n\r\n*/\r\nexport default class Hooks {\r\n    constructor() {\r\n        // ...\r\n\r\n        this.hooks = {\r\n            /* \r\n            table-scroll1:[\r\n                function(){},\r\n                function(){}\r\n            ],\r\n            table-scroll2:[\r\n                function(){},\r\n                function(){}\r\n            ]\r\n            \r\n            */\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Add listener to plugin hooks system.\r\n     *\r\n     * @param {string} hookName The hook name.\r\n     * @param {Function} callback The listener function to add.\r\n     */\r\n    addHook(hookName, callback) {\r\n        let hooks;\r\n\r\n        if (!this.hooks[hookName]) {\r\n            this.hooks[hookName] = [];\r\n        }\r\n\r\n        hooks = this.hooks[hookName];\r\n\r\n        // exclude repeat hook\r\n        let isRepeat = false;\r\n        for (let i = 0; i < hooks.length; i++) {\r\n            if (hooks[i] === callback) {\r\n                isRepeat = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isRepeat) {\r\n            console.warn(`Repeat hook name:${hookName}`);\r\n        } else {\r\n            hooks.push(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger hook.\r\n     *\r\n     * @param {string} hookName The hook name.\r\n     * @param {Argument} args\r\n     */\r\n    triggerHook(hookName) {\r\n        const hooks = this.hooks[hookName];\r\n\r\n        if (hooks && hooks.length) {\r\n            const args = Array.prototype.slice.call(arguments);\r\n\r\n            hooks.forEach((hook) => {\r\n                // exclude hookName param\r\n                hook.apply(null, args.slice(1));\r\n            });\r\n        }\r\n        // else {\r\n        //     console.warn(`Can't find hook name:${hookName}`);\r\n        // }\r\n    }\r\n}\r\n","import { MOUSE_EVENT_CLICK_TYPE } from \"./constant\";\r\n\r\n/* \r\nget mouse event key type by mousedown\\mouseup\\... event\r\n*/\r\nexport function getMouseEventClickType(event) {\r\n    let result = null;\r\n\r\n    if (!event) {\r\n        return result;\r\n    }\r\n\r\n    const button =\r\n        typeof event.which != \"undefined\" ? event.which : event.button;\r\n    if (button == 1) {\r\n        result = MOUSE_EVENT_CLICK_TYPE.LEFT_MOUSE;\r\n    } else if (button == 2) {\r\n        result = MOUSE_EVENT_CLICK_TYPE.MIDDLE_MOUSE;\r\n    } else if (button == 3) {\r\n        result = MOUSE_EVENT_CLICK_TYPE.RIGHT_MOUSE;\r\n    }\r\n\r\n    return result;\r\n}\r\n","/*\r\nfork from:\r\nhttps://github.com/ElemeFE/element\r\n*/\r\nfunction broadcast(componentName, eventName, params) {\r\n    this.$children.forEach((child) => {\r\n        var name = child.$options.name;\r\n\r\n        if (name === componentName) {\r\n            child.$emit.apply(child, [eventName].concat(params));\r\n        } else {\r\n            broadcast.apply(child, [componentName, eventName].concat([params]));\r\n        }\r\n    });\r\n}\r\nexport default {\r\n    methods: {\r\n        dispatch(componentName, eventName, params) {\r\n            var parent = this.$parent || this.$root;\r\n            var name = parent.$options.name;\r\n\r\n            while (parent && (!name || name !== componentName)) {\r\n                parent = parent.$parent;\r\n\r\n                if (parent) {\r\n                    name = parent.$options.name;\r\n                }\r\n            }\r\n            if (parent) {\r\n                parent.$emit.apply(parent, [eventName].concat(params));\r\n            } else {\r\n                console.error(`${componentName} was not found.`);\r\n            }\r\n        },\r\n        broadcast(componentName, eventName, params) {\r\n            broadcast.call(this, componentName, eventName, params);\r\n        },\r\n    },\r\n};\r\n","import { getValByUnit } from \"../../../src/utils/index.js\";\r\nimport { COMPS_NAME } from \"../util/constant\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_COLGROUP,\r\n    props: {\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        enableColumnResize: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n    },\r\n    methods: {\r\n        getValByUnit(item) {\r\n            const { enableColumnResize } = this;\r\n\r\n            let width;\r\n            // 开启 column resize\r\n            if (enableColumnResize) {\r\n                // 解决使用 _columnResizeWidth 在多表头下宽度计算异常的问题\r\n                width = item._columnResizeWidth\r\n                    ? item._columnResizeWidth\r\n                    : item.width;\r\n            } else {\r\n                width = item.width;\r\n            }\r\n            return getValByUnit(width);\r\n        },\r\n    },\r\n    render() {\r\n        return (\r\n            <colgroup>\r\n                {this.colgroups.map((item) => {\r\n                    return (\r\n                        <col\r\n                            key={item.key}\r\n                            style={{\r\n                                width: this.getValByUnit(item),\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n            </colgroup>\r\n        );\r\n    },\r\n};\r\n","import VeCheckbox from \"vue-easytable/packages/ve-checkbox\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\r\nimport { clsName } from \"../util\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_HEADER_CHECKBOX_CONTENT,\r\n    mixins: [emitter],\r\n    props: {\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // is selected\r\n            isSelected: false,\r\n            isIndeterminate: false,\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        // selected change\r\n        selectedChange(isSelected) {\r\n            this.isSelected = isSelected;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE,\r\n                {\r\n                    isSelected,\r\n                },\r\n            );\r\n        },\r\n\r\n        // set selected all info\r\n        setSelectedAllInfo({ isSelected, isIndeterminate }) {\r\n            this.isSelected = isSelected;\r\n            this.isIndeterminate = isIndeterminate;\r\n        },\r\n    },\r\n    mounted() {\r\n        // receive selected all info\r\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO, (params) => {\r\n            this.setSelectedAllInfo(params);\r\n        });\r\n    },\r\n    render() {\r\n        const { isSelected, isIndeterminate, selectedChange } = this;\r\n\r\n        const checkboxProps = {\r\n            class: clsName(\"checkbox-wrapper\"),\r\n            props: {\r\n                isControlled: true,\r\n                isSelected: isSelected,\r\n                indeterminate: isIndeterminate,\r\n            },\r\n            on: {\r\n                \"on-checked-change\": (isSelectedParam) =>\r\n                    selectedChange(isSelectedParam),\r\n            },\r\n        };\r\n\r\n        return <VeCheckbox {...checkboxProps} />;\r\n    },\r\n};\r\n","import VeDropdown from \"vue-easytable/packages/ve-dropdown\";\nimport { COMPS_NAME, EMIT_EVENTS, LOCALE_COMP_NAME } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport { createLocale, isFunction } from \"../../../src/utils/index\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\n\nconst t = createLocale(LOCALE_COMP_NAME);\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_HEADER_FILTER_CONTENT,\n    props: {\n        column: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            filterList: [],\n        };\n    },\n    watch: {\n        column: {\n            handler: function (column) {\n                if (column.filter && Array.isArray(column.filter.filterList)) {\n                    this.filterList = column.filter.filterList;\n                }\n            },\n            immediate: true,\n            deep: true,\n        },\n    },\n    methods: {\n        /*\n         * @filterConfirm\n         * @desc  filter confirm\n         * @param {Array} val - filter list\n         */\n        filterConfirm() {\n            const { filterConfirm } = this.column.filter;\n            filterConfirm && filterConfirm(this.filterList);\n        },\n        // filter reset\n        filterReset() {\n            const { filterReset } = this.column.filter;\n            filterReset && filterReset(this.filterList);\n        },\n        // getIcon\n        getIcon(h) {\n            let result;\n            const { filterIcon } = this.column.filter;\n            if (isFunction(filterIcon)) {\n                result = filterIcon(h);\n            } else {\n                result = <VeIcon name={ICON_NAMES.FILTER} />;\n            }\n            return result;\n        },\n    },\n    render(h) {\n        const { filterList, isMultiple, maxHeight, beforeVisibleChange } =\n            this.column.filter;\n\n        const compProps = {\n            props: {\n                value: filterList,\n                showOperation: true,\n                isMultiple: isMultiple,\n                showRadio: true, // when single selection\n                confirmFilterText: t(\"confirmFilter\"),\n                resetFilterText: t(\"resetFilter\"),\n                beforeVisibleChange: beforeVisibleChange,\n            },\n            on: {\n                [EMIT_EVENTS.HEADER_FILTER_CONFIRM]: this.filterConfirm,\n                [EMIT_EVENTS.HEADER_FILTER_RESET]: this.filterReset,\n                // v-model\n                input: (val) => {\n                    this.filterList = val;\n                },\n            },\n        };\n\n        if (typeof maxHeight === \"number\") {\n            compProps.props.maxHeight = maxHeight;\n        }\n\n        return (\n            <VeDropdown {...compProps}>\n                {/* icon */}\n                <span class={clsName(\"filter\")}>\n                    <span class={clsName(\"filter-icon\")}>\n                        {this.getIcon(h)}\n                    </span>\n                </span>\n            </VeDropdown>\n        );\n    },\n};\n","import VeDropdown from \"vue-easytable/packages/ve-dropdown\";\nimport { COMPS_NAME } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport { isFunction, isBoolean } from \"../../../src/utils/index\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_HEADER_FILTER_CUSTOM_CONTENT,\n    props: {\n        column: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            internalVisible: false,\n        };\n    },\n    watch: {\n        column: {\n            handler: function (column) {\n                if (\n                    column.filterCustom &&\n                    isBoolean(column.filterCustom.defaultVisible)\n                ) {\n                    this.internalVisible = column.filterCustom.defaultVisible;\n                }\n            },\n            immediate: true,\n            deep: true,\n        },\n    },\n    methods: {\n        // visible change\n        visibleChange(visible) {\n            this.internalVisible = visible;\n        },\n        // get custom content\n        getCustomContent(h) {\n            let result = null;\n\n            const { render } = this.column.filterCustom;\n            if (isFunction(render)) {\n                const props = {\n                    slot: \"custom-content\",\n                };\n\n                result = (\n                    <div {...props}>\n                        {render(\n                            {\n                                showFn: this.show,\n                                closeFn: this.close,\n                            },\n                            h,\n                        )}\n                    </div>\n                );\n            }\n            return result;\n        },\n        // getIcon\n        getIcon(h) {\n            let result;\n            const { filterIcon } = this.column.filterCustom;\n            if (isFunction(filterIcon)) {\n                result = filterIcon(h);\n            } else {\n                result = <VeIcon name={ICON_NAMES.FILTER} />;\n            }\n            return result;\n        },\n\n        close() {\n            this.internalVisible = false;\n        },\n        show() {\n            this.internalVisible = true;\n        },\n    },\n    render(h) {\n        const compProps = {\n            props: {\n                isCustomContent: true,\n                isControlled: true,\n                visible: this.internalVisible,\n                beforeVisibleChange:\n                    this.column.filterCustom.beforeVisibleChange,\n            },\n            on: {\n                \"on-dropdown-visible-change\": this.visibleChange,\n            },\n        };\n\n        return (\n            <VeDropdown {...compProps}>\n                {/* icon */}\n                <span class={clsName(\"filter\")}>\n                    <span class={clsName(\"filter-icon\")}>\n                        {this.getIcon(h)}\n                    </span>\n                </span>\n                {/* custom content */}\n                {this.getCustomContent(h)}\n            </VeDropdown>\n        );\n    },\n};\n","import HeaderCheckboxContent from \"./header-checkbox-content\";\r\nimport HeaderFilterContent from \"./header-filter-content\";\r\nimport HeaderFilterCustomContent from \"./header-filter-custom-content\";\r\nimport {\r\n    getFixedTotalWidthByColumnKey,\r\n    clsName,\r\n    getColKeysByRangeColKeys,\r\n    getColKeysByHeaderColumn,\r\n} from \"../util\";\r\nimport { getValByUnit, isEmptyValue } from \"../../../src/utils/index.js\";\r\nimport { COMPS_NAME, COLUMN_TYPES, EMIT_EVENTS } from \"../util/constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\r\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_THADER_Th,\r\n    mixins: [emitter],\r\n    props: {\r\n        // group columns item\r\n        groupColumn: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        // group column item\r\n        groupColumnItem: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        headerRows: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        fixedHeader: {\r\n            type: Boolean,\r\n        },\r\n        isGroupHeader: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection range data\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        headerIndicatorColKeys: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // sort option\r\n        sortOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // sort columns\r\n        sortColumns: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    computed: {\r\n        // is last left fixed column\r\n        isLastLeftFixedColumn() {\r\n            let result = false;\r\n\r\n            const { groupColumn, groupColumnItem: column } = this;\r\n\r\n            const { fixed, _keys } = column;\r\n\r\n            if (fixed === \"left\") {\r\n                const leftFixedColumns = groupColumn.filter(\r\n                    (x) => x.fixed === \"left\",\r\n                );\r\n                const index = leftFixedColumns.findIndex(\r\n                    (x) => x._keys === _keys,\r\n                );\r\n\r\n                if (index === leftFixedColumns.length - 1) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // is first right fixed column\r\n        isfirstRightFixedColumn() {\r\n            let result = false;\r\n\r\n            const { groupColumn, groupColumnItem: column } = this;\r\n\r\n            const { fixed, _keys } = column;\r\n\r\n            if (fixed === \"right\") {\r\n                const leftFixedColumns = groupColumn.filter(\r\n                    (x) => x.fixed === \"right\",\r\n                );\r\n\r\n                if (leftFixedColumns[0]._keys === _keys) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // is last column\r\n        isLastCloumn() {\r\n            let result = false;\r\n\r\n            const { colgroups, groupColumnItem: column } = this;\r\n\r\n            const lastColumnKey = colgroups[colgroups.length - 1].key;\r\n\r\n            const keys = column._keys.split(\"|\");\r\n\r\n            if (keys.length) {\r\n                if (keys.length === 1) {\r\n                    if (keys[0] === lastColumnKey) {\r\n                        result = true;\r\n                    }\r\n                } else if (keys[keys.length - 2] === lastColumnKey) {\r\n                    result = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n    },\r\n    methods: {\r\n        /*\r\n         * @getTheadThClass\r\n         * @desc  get thead th class\r\n         * @param {string} fixed - 固定方式\r\n         */\r\n        getTheadThClass({ fixed }) {\r\n            let result = {\r\n                [clsName(\"header-th\")]: true,\r\n                [clsName(\"fixed-left\")]: fixed === \"left\",\r\n                [clsName(\"fixed-right\")]: fixed === \"right\",\r\n                [clsName(\"last-left-fixed-column\")]: this.isLastLeftFixedColumn,\r\n                [clsName(\"first-right-fixed-column\")]:\r\n                    this.isfirstRightFixedColumn,\r\n                [clsName(\"last-column\")]: this.isLastCloumn,\r\n            };\r\n\r\n            const {\r\n                cellStyleOption,\r\n                rowIndex,\r\n                groupColumnItem: column,\r\n                cellSelectionRangeData,\r\n                colgroups,\r\n                isGroupHeader,\r\n                headerIndicatorColKeys,\r\n            } = this;\r\n\r\n            if (cellSelectionRangeData) {\r\n                const { leftColKey, rightColKey } = cellSelectionRangeData;\r\n                const { startColKeyIndex } = headerIndicatorColKeys;\r\n                const isIndicatorActive = startColKeyIndex > -1;\r\n\r\n                if (!isEmptyValue(leftColKey)) {\r\n                    let indicatorColKeys = [];\r\n                    if (leftColKey === rightColKey) {\r\n                        indicatorColKeys = [leftColKey];\r\n                    } else {\r\n                        indicatorColKeys =\r\n                            getColKeysByRangeColKeys({\r\n                                colKey1: leftColKey,\r\n                                colKey2: rightColKey,\r\n                                colgroups,\r\n                            }) ?? [];\r\n                    }\r\n\r\n                    let showIndicator = false;\r\n                    if (!isGroupHeader) {\r\n                        if (indicatorColKeys.indexOf(column[\"key\"]) > -1) {\r\n                            showIndicator = true;\r\n                        }\r\n                    } else {\r\n                        const colKeys = getColKeysByHeaderColumn({\r\n                            headerColumnItem: column,\r\n                        });\r\n                        showIndicator = colKeys.every((colKey) => {\r\n                            return indicatorColKeys.indexOf(colKey) > -1;\r\n                        });\r\n                    }\r\n                    if (showIndicator) {\r\n                        if (isIndicatorActive) {\r\n                            result[clsName(\"cell-indicator-active\")] = true;\r\n                        } else {\r\n                            result[clsName(\"cell-indicator\")] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (\r\n                cellStyleOption &&\r\n                typeof cellStyleOption.headerCellClass === \"function\"\r\n            ) {\r\n                const customClass = cellStyleOption.headerCellClass({\r\n                    column,\r\n                    rowIndex,\r\n                });\r\n                if (customClass) {\r\n                    result[customClass] = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n        /*\r\n         * @getTheadThStyle\r\n         * @desc  get body td style\r\n         * @param {string} _keys - 当前列包含的key（单元格合并时有多个key值）\r\n         * @param {string} align - 居中方式\r\n         * @param {bool} fixed - 固定方式\r\n         * @param {number} rowIndex - 当前行号\r\n         */\r\n        getTheadThStyle({ _keys, align, fixed }, rowIndex) {\r\n            let result = {};\r\n\r\n            const colgroups = this.colgroups;\r\n            const headerRows = this.headerRows;\r\n\r\n            // text align\r\n            result[\"text-align\"] = align || \"center\";\r\n\r\n            // fixed left total width or right total width\r\n            if (fixed) {\r\n                let key = \"\";\r\n                let totalWidth = 0;\r\n                const keys = _keys.split(\"|\");\r\n                if (fixed === \"left\") {\r\n                    key = keys[0];\r\n                } else if (fixed === \"right\") {\r\n                    key = keys.length === 1 ? keys[0] : keys[keys.length - 2];\r\n                }\r\n\r\n                if (key) {\r\n                    // column index\r\n                    const columnIndex = colgroups.findIndex(\r\n                        (x) => x.key === key,\r\n                    );\r\n                    if (\r\n                        (fixed === \"left\" && columnIndex > 0) ||\r\n                        (fixed === \"right\" &&\r\n                            columnIndex < colgroups.length - 1)\r\n                    ) {\r\n                        totalWidth = getFixedTotalWidthByColumnKey({\r\n                            colgroups,\r\n                            colKey: key,\r\n                            fixed,\r\n                        });\r\n\r\n                        totalWidth = getValByUnit(totalWidth);\r\n                    }\r\n                }\r\n                result[\"left\"] = fixed === \"left\" ? totalWidth : \"\";\r\n                result[\"right\"] = fixed === \"right\" ? totalWidth : \"\";\r\n            }\r\n\r\n            // header row th fixed top\r\n            if (this.fixedHeader) {\r\n                let rowHeight = 0;\r\n                if (rowIndex > 0) {\r\n                    rowHeight = headerRows.reduce(\r\n                        (total, currentVal, index) => {\r\n                            return index < rowIndex\r\n                                ? currentVal.rowHeight + total\r\n                                : total;\r\n                        },\r\n                        0,\r\n                    );\r\n                }\r\n                rowHeight = getValByUnit(rowHeight);\r\n\r\n                result[\"top\"] = rowHeight;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get chcekbox content\r\n        getCheckboxContent() {\r\n            let result = null;\r\n\r\n            const { checkboxOption } = this;\r\n\r\n            if (this.groupColumnItem.type === COLUMN_TYPES.CHECKBOX) {\r\n                if (!checkboxOption.hideSelectAll) {\r\n                    // checkbox content props\r\n                    const checkboxProps = {\r\n                        props: {\r\n                            column: this.groupColumnItem,\r\n                            checkboxOption: this.checkboxOption,\r\n                        },\r\n                    };\r\n\r\n                    result = <HeaderCheckboxContent {...checkboxProps} />;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // sort change\r\n        sortChange() {\r\n            let sortResult = \"\";\r\n            const { sortColumns, groupColumnItem, sortOption } = this;\r\n            const { sortAlways } = sortOption;\r\n\r\n            const currentField = groupColumnItem.field;\r\n            const sortBy = sortColumns[currentField];\r\n\r\n            if (sortAlways) {\r\n                sortResult = sortBy === \"asc\" ? \"desc\" : \"asc\";\r\n            } else {\r\n                sortResult =\r\n                    sortBy === \"asc\" ? \"desc\" : sortBy === \"desc\" ? \"\" : \"asc\";\r\n            }\r\n\r\n            this.dispatch(COMPS_NAME.VE_TABLE_THADER, EMIT_EVENTS.SORT_CHANGE, {\r\n                currentField,\r\n                sortResult,\r\n            });\r\n        },\r\n\r\n        // get sort content\r\n        getSortContent() {\r\n            let result = null;\r\n\r\n            const { sortColumns, groupColumnItem } = this;\r\n            const currentField = groupColumnItem.field;\r\n\r\n            if (Object.keys(sortColumns).includes(currentField)) {\r\n                const sortBy = sortColumns[currentField];\r\n\r\n                const props = {\r\n                    class: clsName(\"sort\"),\r\n                    on: {\r\n                        click: () => this.sortChange(),\r\n                    },\r\n                };\r\n\r\n                result = (\r\n                    <span {...props}>\r\n                        <VeIcon\r\n                            class={[\r\n                                clsName(\"sort-icon\"),\r\n                                clsName(\"sort-icon-top\"),\r\n                                sortBy === \"asc\" ? \"active\" : \"\",\r\n                            ]}\r\n                            name={ICON_NAMES.SORT_TOP_ARROW}\r\n                        />\r\n                        <VeIcon\r\n                            class={[\r\n                                clsName(\"sort-icon\"),\r\n                                clsName(\"sort-icon-bottom\"),\r\n                                sortBy === \"desc\" ? \"active\" : \"\",\r\n                            ]}\r\n                            name={ICON_NAMES.SORT_BOTTOM_ARROW}\r\n                        />\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get filter content\r\n        getFilterContent() {\r\n            let result = null;\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            if (groupColumnItem.filter) {\r\n                // filter content props\r\n                const filterProps = {\r\n                    props: {\r\n                        column: this.groupColumnItem,\r\n                    },\r\n                };\r\n                result = <HeaderFilterContent {...filterProps} />;\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // get filter custom content\r\n        getFilterCustomContent() {\r\n            let result = null;\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            if (groupColumnItem.filterCustom) {\r\n                // filter content props\r\n                const filterProps = {\r\n                    props: {\r\n                        column: this.groupColumnItem,\r\n                    },\r\n                };\r\n                result = <HeaderFilterCustomContent {...filterProps} />;\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // cell click\r\n        cellClick(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            this.dispatch(COMPS_NAME.VE_TABLE, EMIT_EVENTS.HEADER_CELL_CLICK, {\r\n                event: e,\r\n                column: groupColumnItem,\r\n            });\r\n        },\r\n        // dblclick\r\n        cellDblclick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // contextmenu\r\n        cellContextmenu(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.HEADER_CELL_CONTEXTMENU,\r\n                {\r\n                    event: e,\r\n                    column: groupColumnItem,\r\n                },\r\n            );\r\n        },\r\n        // mouseenter\r\n        cellMouseenter(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseleave\r\n        cellMouseleave(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.HEADER_CELL_MOUSELEAVE,\r\n                {\r\n                    event: e,\r\n                    column: groupColumnItem,\r\n                },\r\n            );\r\n        },\r\n        // mousemove\r\n        cellMousemove(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.HEADER_CELL_MOUSEMOVE,\r\n                {\r\n                    event: e,\r\n                    column: groupColumnItem,\r\n                },\r\n            );\r\n        },\r\n        // mouseover\r\n        cellMouseover(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.HEADER_CELL_MOUSEOVER,\r\n                {\r\n                    event: e,\r\n                    column: groupColumnItem,\r\n                },\r\n            );\r\n        },\r\n        // mousedown\r\n        cellMousedown(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { groupColumnItem } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.HEADER_CELL_MOUSEDOWN,\r\n                {\r\n                    event: e,\r\n                    column: groupColumnItem,\r\n                },\r\n            );\r\n        },\r\n        // mouseup\r\n        cellMouseup(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n    },\r\n    render(h) {\r\n        const {\r\n            groupColumnItem,\r\n            getTheadThClass,\r\n            getTheadThStyle,\r\n            rowIndex,\r\n            eventCustomOption,\r\n        } = this;\r\n\r\n        let content;\r\n\r\n        if (typeof groupColumnItem.renderHeaderCell === \"function\") {\r\n            const { ...column } = groupColumnItem;\r\n\r\n            const renderResult = groupColumnItem.renderHeaderCell(\r\n                {\r\n                    column,\r\n                },\r\n                h,\r\n            );\r\n            content = renderResult;\r\n        } else {\r\n            content = groupColumnItem.title;\r\n        }\r\n\r\n        // custom on cell event\r\n        let customEvents = {};\r\n        if (eventCustomOption) {\r\n            const { headerCellEvents } = eventCustomOption;\r\n            customEvents = headerCellEvents\r\n                ? headerCellEvents({ column: groupColumnItem, rowIndex })\r\n                : {};\r\n        }\r\n\r\n        const {\r\n            click,\r\n            dblclick,\r\n            contextmenu,\r\n            mouseenter,\r\n            mouseleave,\r\n            mousemove,\r\n            mouseover,\r\n            mousedown,\r\n            mouseup,\r\n        } = customEvents;\r\n\r\n        const events = {\r\n            click: (e) => {\r\n                this.cellClick(e, click);\r\n            },\r\n            dblclick: (e) => {\r\n                this.cellDblclick(e, dblclick);\r\n            },\r\n            contextmenu: (e) => {\r\n                this.cellContextmenu(e, contextmenu);\r\n            },\r\n            mouseenter: (e) => {\r\n                this.cellMouseenter(e, mouseenter);\r\n            },\r\n            mouseleave: (e) => {\r\n                this.cellMouseleave(e, mouseleave);\r\n            },\r\n            mousemove: (e) => {\r\n                this.cellMousemove(e, mousemove);\r\n            },\r\n            mouseover: (e) => {\r\n                this.cellMouseover(e, mouseover);\r\n            },\r\n            mousedown: (e) => {\r\n                this.cellMousedown(e, mousedown);\r\n            },\r\n            mouseup: (e) => {\r\n                this.cellMouseup(e, mouseup);\r\n            },\r\n        };\r\n\r\n        const thProps = {\r\n            style: getTheadThStyle(groupColumnItem, rowIndex),\r\n            class: getTheadThClass(groupColumnItem),\r\n            attrs: {\r\n                rowspan: groupColumnItem._rowspan,\r\n                colspan: groupColumnItem._colspan,\r\n            },\r\n            on: events,\r\n        };\r\n\r\n        return (\r\n            <th {...thProps}>\r\n                {/* checkbox content */}\r\n                {this.getCheckboxContent()}\r\n                {content}\r\n                {/* sort content */}\r\n                {this.getSortContent()}\r\n                {/* filter content */}\r\n                {this.getFilterContent()}\r\n                {/* filter custom content */}\r\n                {this.getFilterCustomContent()}\r\n            </th>\r\n        );\r\n    },\r\n};\r\n","/*\r\nfork from:\r\nhttps://github.com/ElemeFE/element\r\n*/\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\n/* istanbul ignore next */\r\nconst resizeHandler = function (entries) {\r\n    for (let entry of entries) {\r\n        const listeners = entry.target.__resizeListeners__ || [];\r\n        if (listeners.length) {\r\n            listeners.forEach((fn) => {\r\n                fn(entry.contentRect);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n/* istanbul ignore next */\r\nexport const addResizeListener = function (element, fn) {\r\n    if (!element.__resizeListeners__) {\r\n        element.__resizeListeners__ = [];\r\n        element.__ro__ = new ResizeObserver(resizeHandler);\r\n        element.__ro__.observe(element);\r\n    }\r\n    element.__resizeListeners__.push(fn);\r\n};\r\n\r\n/* istanbul ignore next */\r\nexport const removeResizeListener = function (element, fn) {\r\n    if (!element || !element.__resizeListeners__) return;\r\n    element.__resizeListeners__.splice(\r\n        element.__resizeListeners__.indexOf(fn),\r\n        1,\r\n    );\r\n    if (!element.__resizeListeners__.length) {\r\n        element.__ro__.disconnect();\r\n    }\r\n};\r\n","import {\r\n    addResizeListener,\r\n    removeResizeListener,\r\n} from \"../../../utils/resize-event\";\r\nexport default {\r\n    name: \"vue-dom-resize-observer\",\r\n    props: {\r\n        tagName: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        id: {\r\n            type: [String, Number],\r\n            default: null,\r\n        },\r\n    },\r\n    methods: {\r\n        resizeListener(contentRect) {\r\n            const { left, top, width, height } = contentRect;\r\n            this.$emit(\"on-dom-resize-change\", {\r\n                key: this.id,\r\n                left,\r\n                top,\r\n                width,\r\n                height,\r\n            });\r\n        },\r\n    },\r\n    mounted() {\r\n        addResizeListener(this.$el, this.resizeListener);\r\n    },\r\n    destroyed() {\r\n        removeResizeListener(this.$el, this.resizeListener);\r\n    },\r\n    render() {\r\n        return <this.tagName>{this.$slots.default}</this.tagName>;\r\n    },\r\n};\r\n","import VueDomResizeObserver from \"./src/index\";\r\nexport default VueDomResizeObserver;\r\n","import HeaderTh from \"./header-th\";\r\nimport { clsName, getDomResizeObserverCompKey } from \"../util\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\r\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_THADER_TR,\r\n    mixins: [emitter],\r\n    props: {\r\n        columnsOptionResetTime: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        // group columns item\r\n        groupColumn: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        headerRows: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        fixedHeader: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        isGroupHeader: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection range data\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        headerIndicatorColKeys: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // sort option\r\n        sortOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // sort columns\r\n        sortColumns: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    methods: {\r\n        // tr height change\r\n        trHeightChange({ height }) {\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.HEADER_ROW_HEIGHT_CHANGE,\r\n                {\r\n                    rowIndex: this.rowIndex,\r\n                    height: height,\r\n                },\r\n            );\r\n        },\r\n        // click\r\n        rowClick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // dblclick\r\n        rowDblclick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // contextmenu\r\n        rowContextmenu(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseenter\r\n        rowMouseenter(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseleave\r\n        rowMouseleave(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousemove\r\n        rowMousemove(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseover\r\n        rowMouseover(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousedown\r\n        rowMousedown(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseup\r\n        rowMouseup(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n    },\r\n    render() {\r\n        const {\r\n            groupColumn,\r\n            colgroups,\r\n            headerRows,\r\n            fixedHeader,\r\n            rowIndex,\r\n            trHeightChange,\r\n            checkboxOption,\r\n            sortOption,\r\n            sortColumns,\r\n            cellStyleOption,\r\n            eventCustomOption,\r\n            cellSelectionData,\r\n        } = this;\r\n\r\n        // custom on cell event\r\n        let customEvents = {};\r\n        if (eventCustomOption) {\r\n            const { headerRowEvents } = eventCustomOption;\r\n            customEvents = headerRowEvents ? headerRowEvents({ rowIndex }) : {};\r\n        }\r\n\r\n        const {\r\n            click,\r\n            dblclick,\r\n            contextmenu,\r\n            mouseenter,\r\n            mouseleave,\r\n            mousemove,\r\n            mouseover,\r\n            mousedown,\r\n            mouseup,\r\n        } = customEvents;\r\n\r\n        const events = {\r\n            click: (e) => {\r\n                this.rowClick(e, click);\r\n            },\r\n            dblclick: (e) => {\r\n                this.rowDblclick(e, dblclick);\r\n            },\r\n            contextmenu: (e) => {\r\n                this.rowContextmenu(e, contextmenu);\r\n            },\r\n            mouseenter: (e) => {\r\n                this.rowMouseenter(e, mouseenter);\r\n            },\r\n            mouseleave: (e) => {\r\n                this.rowMouseleave(e, mouseleave);\r\n            },\r\n            mousemove: (e) => {\r\n                this.rowMousemove(e, mousemove);\r\n            },\r\n            mouseover: (e) => {\r\n                this.rowMouseover(e, mouseover);\r\n            },\r\n            mousedown: (e) => {\r\n                this.rowMousedown(e, mousedown);\r\n            },\r\n            mouseup: (e) => {\r\n                this.rowMouseup(e, mouseup);\r\n            },\r\n        };\r\n\r\n        const trProps = {\r\n            key: getDomResizeObserverCompKey(\r\n                rowIndex,\r\n                this.columnsOptionResetTime,\r\n            ),\r\n            class: clsName(\"header-tr\"),\r\n            props: {\r\n                tagName: \"tr\",\r\n            },\r\n            on: {\r\n                \"on-dom-resize-change\": trHeightChange,\r\n            },\r\n            nativeOn: events,\r\n        };\r\n\r\n        return (\r\n            <VueDomResizeObserver {...trProps}>\r\n                {groupColumn.map((groupColumnItem) => {\r\n                    // th props\r\n                    const thProps = {\r\n                        key: groupColumnItem.key,\r\n                        props: {\r\n                            groupColumn,\r\n                            groupColumnItem,\r\n                            colgroups,\r\n                            headerRows,\r\n                            fixedHeader,\r\n                            isGroupHeader: this.isGroupHeader,\r\n                            rowIndex,\r\n                            checkboxOption,\r\n                            sortOption,\r\n                            sortColumns,\r\n                            cellStyleOption,\r\n                            eventCustomOption: this.eventCustomOption,\r\n                            cellSelectionData,\r\n                            cellSelectionRangeData: this.cellSelectionRangeData,\r\n                            headerIndicatorColKeys: this.headerIndicatorColKeys,\r\n                        },\r\n                    };\r\n\r\n                    return <HeaderTh {...thProps} />;\r\n                })}\r\n            </VueDomResizeObserver>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"../util\";\r\nimport HeaderTr from \"./header-tr\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_THADER,\r\n    mixins: [emitter],\r\n    props: {\r\n        columnsOptionResetTime: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        groupColumns: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        fixedHeader: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        isGroupHeader: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection range data\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        headerIndicatorColKeys: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        headerRows: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // sort option\r\n        sortOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            /*\r\n            sort columns\r\n            不要使用computed代替，属性动态添加会造成响应式问题\r\n            */\r\n            sortColumns: {},\r\n        };\r\n    },\r\n    computed: {\r\n        // header class\r\n        headerClass() {\r\n            return {\r\n                [clsName(\"fixed-header\")]: this.fixedHeader,\r\n            };\r\n        },\r\n    },\r\n    watch: {\r\n        // watch colgroups\r\n        colgroups: {\r\n            handler() {\r\n                this.initSortColumns();\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n    methods: {\r\n        // sort change\r\n        sortChange({ currentField, sortResult }) {\r\n            const { sortColumns, sortOption } = this;\r\n            const { multipleSort, sortChange } = sortOption;\r\n\r\n            this.sortColumns[currentField] = sortResult;\r\n\r\n            if (!multipleSort) {\r\n                for (const field in sortColumns) {\r\n                    if (field !== currentField) {\r\n                        sortColumns[field] = \"\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.SORT_CHANGE,\r\n                sortColumns,\r\n            );\r\n\r\n            // invoke\r\n            sortChange(sortColumns);\r\n        },\r\n\r\n        // init sort columns\r\n        initSortColumns() {\r\n            const { colgroups } = this;\r\n            let sortColumns = {};\r\n            colgroups.forEach((item) => {\r\n                if (typeof item.sortBy === \"string\") {\r\n                    sortColumns[item.field] = item.sortBy;\r\n                }\r\n            });\r\n            this.sortColumns = sortColumns;\r\n        },\r\n    },\r\n    mounted() {\r\n        // receive sort change\r\n        this.$on(EMIT_EVENTS.SORT_CHANGE, (params) => {\r\n            this.sortChange(params);\r\n        });\r\n    },\r\n    render() {\r\n        const {\r\n            headerClass,\r\n            groupColumns,\r\n            colgroups,\r\n            fixedHeader,\r\n            headerRows,\r\n            checkboxOption,\r\n            sortOption,\r\n            sortColumns,\r\n            cellStyleOption,\r\n            cellSelectionData,\r\n        } = this;\r\n\r\n        return (\r\n            <thead class={headerClass}>\r\n                {groupColumns.map((groupColumn, rowIndex) => {\r\n                    const trProps = {\r\n                        key: rowIndex,\r\n                        props: {\r\n                            columnsOptionResetTime: this.columnsOptionResetTime,\r\n                            groupColumn,\r\n                            headerRows,\r\n                            colgroups,\r\n                            fixedHeader,\r\n                            isGroupHeader: this.isGroupHeader,\r\n                            rowIndex,\r\n                            checkboxOption,\r\n                            sortOption,\r\n                            sortColumns,\r\n                            cellStyleOption,\r\n                            eventCustomOption: this.eventCustomOption,\r\n                            cellSelectionData,\r\n                            cellSelectionRangeData: this.cellSelectionRangeData,\r\n                            headerIndicatorColKeys: this.headerIndicatorColKeys,\r\n                        },\r\n                    };\r\n                    return <HeaderTr {...trProps} />;\r\n                })}\r\n            </thead>\r\n        );\r\n    },\r\n};\r\n","import VeCheckbox from \"vue-easytable/packages/ve-checkbox\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\r\nimport { clsName } from \"../util\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_CHECKBOX_CONTENT,\r\n    mixins: [emitter],\r\n    props: {\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        rowKey: {\r\n            type: [String, Number],\r\n            required: true,\r\n        },\r\n        internalCheckboxSelectedRowKeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            isSelected: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // disabled\r\n        disabled() {\r\n            let result = false;\r\n\r\n            const { checkboxOption, rowKey } = this;\r\n\r\n            if (!checkboxOption) {\r\n                return;\r\n            }\r\n\r\n            const { disableSelectedRowKeys } = checkboxOption;\r\n\r\n            if (\r\n                Array.isArray(disableSelectedRowKeys) &&\r\n                disableSelectedRowKeys.includes(rowKey)\r\n            ) {\r\n                result = true;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // 是否是受控属性（取决于selectedRowKeys）\r\n        isControlledProp() {\r\n            const { checkboxOption } = this;\r\n\r\n            return (\r\n                checkboxOption && Array.isArray(checkboxOption.selectedRowKeys)\r\n            );\r\n        },\r\n    },\r\n    watch: {\r\n        // watch internalCheckboxSelectedRowKeys\r\n        internalCheckboxSelectedRowKeys: {\r\n            handler: function () {\r\n                this.initSelected();\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n    methods: {\r\n        // init selected\r\n        initSelected() {\r\n            let result = false;\r\n\r\n            const { rowKey, internalCheckboxSelectedRowKeys } = this;\r\n\r\n            if (\r\n                Array.isArray(internalCheckboxSelectedRowKeys) &&\r\n                internalCheckboxSelectedRowKeys.includes(rowKey)\r\n            ) {\r\n                result = true;\r\n            }\r\n\r\n            this.isSelected = result;\r\n        },\r\n\r\n        // selected change\r\n        selectedChange(isSelected) {\r\n            const { isControlledProp } = this;\r\n\r\n            // 非受控\r\n            if (!isControlledProp) {\r\n                this.isSelected = isSelected;\r\n            }\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE_BODY,\r\n                EMIT_EVENTS.CHECKBOX_SELECTED_ROW_CHANGE,\r\n                {\r\n                    rowKey: this.rowKey,\r\n                    isSelected,\r\n                },\r\n            );\r\n        },\r\n    },\r\n    render() {\r\n        const { isSelected, selectedChange, disabled } = this;\r\n\r\n        const checkboxProps = {\r\n            class: clsName(\"checkbox-wrapper\"),\r\n            props: {\r\n                isControlled: true,\r\n                isSelected: isSelected,\r\n                disabled,\r\n            },\r\n            on: {\r\n                \"on-checked-change\": (isSelected) => selectedChange(isSelected),\r\n            },\r\n        };\r\n\r\n        return <VeCheckbox {...checkboxProps} />;\r\n    },\r\n};\r\n","import VeRadio from \"vue-easytable/packages/ve-radio\";\r\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\r\nimport { clsName } from \"../util\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_RADIO_CONTENT,\r\n    mixins: [emitter],\r\n    props: {\r\n        // checkbox option\r\n        radioOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        rowKey: {\r\n            type: [String, Number],\r\n            required: true,\r\n        },\r\n        internalRadioSelectedRowKey: {\r\n            type: [String, Number],\r\n            default: null,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            isSelected: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // disabled\r\n        disabled() {\r\n            let result = false;\r\n\r\n            const { radioOption, rowKey } = this;\r\n\r\n            if (!radioOption) {\r\n                return;\r\n            }\r\n\r\n            const { disableSelectedRowKeys } = radioOption;\r\n\r\n            if (\r\n                Array.isArray(disableSelectedRowKeys) &&\r\n                disableSelectedRowKeys.includes(rowKey)\r\n            ) {\r\n                result = true;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // 是否是受控属性（取决于selectedRowKey）\r\n        isControlledProp() {\r\n            const { radioOption } = this;\r\n\r\n            return (\r\n                radioOption &&\r\n                Object.keys(radioOption).includes(\"selectedRowKey\")\r\n            );\r\n        },\r\n    },\r\n    watch: {\r\n        // watch internal radio SelectedRowKey\r\n        internalRadioSelectedRowKey: {\r\n            handler: function () {\r\n                this.initSelected();\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n    methods: {\r\n        // init selected\r\n        initSelected() {\r\n            this.isSelected = this.internalRadioSelectedRowKey === this.rowKey;\r\n        },\r\n\r\n        // selected change\r\n        selectedChange() {\r\n            const { isControlledProp } = this;\r\n\r\n            // 非受控\r\n            if (!isControlledProp) {\r\n                this.isSelected = true;\r\n            }\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE_BODY,\r\n                EMIT_EVENTS.RADIO_SELECTED_ROW_CHANGE,\r\n                {\r\n                    rowKey: this.rowKey,\r\n                },\r\n            );\r\n        },\r\n    },\r\n    render() {\r\n        const { isSelected, selectedChange, disabled } = this;\r\n\r\n        const radioProps = {\r\n            class: clsName(\"radio-wrapper\"),\r\n            props: {\r\n                isControlled: true,\r\n                isSelected,\r\n                disabled,\r\n            },\r\n            on: {\r\n                \"on-radio-change\": () => selectedChange(),\r\n            },\r\n        };\r\n\r\n        return <VeRadio {...radioProps} />;\r\n    },\r\n};\r\n","import { clsName } from \"../util\";\r\nimport { COMPS_NAME, COLUMN_TYPES } from \"../util/constant\";\r\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\r\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_EXPAND_TR_ICON,\r\n    props: {\r\n        column: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        // expand row option\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        rowData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        // expanded row keys\r\n        expandedRowkeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // row expand click event\r\n        cellClick: {\r\n            type: Function,\r\n            default: null,\r\n        },\r\n    },\r\n    computed: {\r\n        // is row expanded\r\n        isExpanded() {\r\n            let result = false;\r\n\r\n            const { column, rowData, expandedRowkeys, rowKeyFieldName } = this;\r\n\r\n            if (column.type === COLUMN_TYPES.EXPAND) {\r\n                const rowKey = rowData[rowKeyFieldName];\r\n                result = expandedRowkeys.includes(rowKey);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // expand row icon class\r\n        expandRowIconContainerClass() {\r\n            return {\r\n                [clsName(\"row-expand-icon\")]: true,\r\n                [clsName(\"expand-icon-collapsed\")]: this.isExpanded,\r\n            };\r\n        },\r\n    },\r\n    render() {\r\n        let content = null;\r\n\r\n        const { cellClick, column, expandRowIconContainerClass } = this;\r\n\r\n        if (column.type === COLUMN_TYPES.EXPAND) {\r\n            content = (\r\n                <span\r\n                    onClick={(e) => cellClick(e)}\r\n                    class={expandRowIconContainerClass}\r\n                >\r\n                    <VeIcon name={ICON_NAMES.RIGHT_ARROW} />\r\n                </span>\r\n            );\r\n        }\r\n        return content;\r\n    },\r\n};\r\n","import BodyCheckboxContent from \"./body-checkbox-content\";\r\nimport BodyRadioContent from \"./body-radio-content\";\r\nimport ExpandTrIcon from \"./expand-tr-icon\";\r\nimport { clsName, getRowKeysByRangeRowKeys } from \"../util\";\r\nimport { isNumber, isBoolean, isEmptyValue } from \"../../../src/utils/index.js\";\r\n\r\nimport {\r\n    COMPS_NAME,\r\n    COLUMN_TYPES,\r\n    EXPAND_TRIGGER_TYPES,\r\n    EMIT_EVENTS,\r\n    COMPS_CUSTOM_ATTRS,\r\n} from \"../util/constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_TD,\r\n    mixins: [emitter],\r\n    props: {\r\n        rowData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        column: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        columnCollection: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        allRowKeys: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        /*\r\n        expand\r\n        */\r\n        // expand row option\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // is expand row\r\n        isExpandRow: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        // expanded row keys\r\n        expandedRowkeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n\r\n        /*\r\n        checkbox\r\n        */\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        internalCheckboxSelectedRowKeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n\r\n        /*\r\n        radio\r\n        */\r\n        radioOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        internalRadioSelectedRowKey: {\r\n            type: [String, Number],\r\n            default: null,\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection data\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection range data\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        bodyIndicatorRowKeys: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // edit opttion\r\n        editOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // 原始单元格数据\r\n            rawCellValue: \"\",\r\n        };\r\n    },\r\n    computed: {\r\n        /*\r\n        current column collection item\r\n        1、Cache the style、class of each column\r\n        */\r\n        currentColumnCollectionItem() {\r\n            const { columnCollection, column } = this;\r\n            return columnCollection.find((x) => x.colKey === column.key);\r\n        },\r\n\r\n        // current row key\r\n        currentRowKey() {\r\n            const { rowData, rowKeyFieldName } = this;\r\n            return rowData[rowKeyFieldName];\r\n        },\r\n    },\r\n    watch: {\r\n        // watch row data\r\n        rowData: {\r\n            handler(rowData) {\r\n                const column = this.column;\r\n                if (column) {\r\n                    this.rawCellValue = rowData[column.field];\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n    methods: {\r\n        /*\r\n         * @bodyTdStyle\r\n         * @desc body td style\r\n         */\r\n        bodyTdStyle() {\r\n            const { currentColumnCollectionItem } = this;\r\n\r\n            let result = {};\r\n\r\n            if (currentColumnCollectionItem) {\r\n                result = Object.assign(\r\n                    result,\r\n                    currentColumnCollectionItem.style,\r\n                );\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /*\r\n         * @bodyTdClass\r\n         * @desc body td class\r\n         */\r\n        bodyTdClass() {\r\n            const { currentColumnCollectionItem } = this;\r\n\r\n            const { fixed, operationColumn } = this.column;\r\n\r\n            let result = {\r\n                [clsName(\"body-td\")]: true,\r\n            };\r\n\r\n            const {\r\n                cellStyleOption,\r\n                rowData,\r\n                column,\r\n                rowIndex,\r\n                allRowKeys,\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                bodyIndicatorRowKeys,\r\n                currentRowKey,\r\n            } = this;\r\n\r\n            // column fixed\r\n            if (fixed) {\r\n                result[clsName(\"fixed-left\")] = fixed === \"left\";\r\n                result[clsName(\"fixed-right\")] = fixed === \"right\";\r\n            }\r\n\r\n            // operation column\r\n            if (operationColumn) {\r\n                result[clsName(\"operation-col\")] = true;\r\n            }\r\n\r\n            // cell style option\r\n            if (\r\n                cellStyleOption &&\r\n                typeof cellStyleOption.bodyCellClass === \"function\"\r\n            ) {\r\n                const customClass = cellStyleOption.bodyCellClass({\r\n                    row: rowData,\r\n                    column,\r\n                    rowIndex,\r\n                });\r\n                if (customClass) {\r\n                    result[customClass] = true;\r\n                }\r\n            }\r\n\r\n            if (cellSelectionData) {\r\n                const { rowKey, colKey } = cellSelectionData.currentCell;\r\n\r\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                    if (currentRowKey === rowKey) {\r\n                        // cell selection\r\n                        if (column[\"key\"] === colKey) {\r\n                            result[clsName(\"cell-selection\")] = true;\r\n                        }\r\n                    }\r\n\r\n                    if (operationColumn) {\r\n                        const { topRowKey, bottomRowKey } =\r\n                            cellSelectionRangeData;\r\n                        const { startRowKeyIndex } = bodyIndicatorRowKeys;\r\n                        const isIndicatorActive = startRowKeyIndex > -1;\r\n\r\n                        let indicatorRowKeys = [];\r\n                        if (topRowKey === bottomRowKey) {\r\n                            indicatorRowKeys = [topRowKey];\r\n                        } else {\r\n                            indicatorRowKeys = getRowKeysByRangeRowKeys({\r\n                                topRowKey,\r\n                                bottomRowKey,\r\n                                allRowKeys,\r\n                            });\r\n                        }\r\n\r\n                        //  cell indicator (operation column)\r\n                        if (indicatorRowKeys.indexOf(currentRowKey) > -1) {\r\n                            if (isIndicatorActive) {\r\n                                result[clsName(\"cell-indicator-active\")] = true;\r\n                            } else {\r\n                                result[clsName(\"cell-indicator\")] = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (currentColumnCollectionItem) {\r\n                result = Object.assign(\r\n                    result,\r\n                    currentColumnCollectionItem.class,\r\n                );\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get ellipsis content style\r\n        getEllipsisContentStyle() {\r\n            let result = {};\r\n\r\n            const { ellipsis } = this.column;\r\n\r\n            if (ellipsis) {\r\n                const { lineClamp } = ellipsis;\r\n\r\n                let _lineClamp = isNumber(lineClamp) ? lineClamp : 1;\r\n                result[\"-webkit-line-clamp\"] = _lineClamp;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get render content\r\n        getRenderContent(h) {\r\n            let content = null;\r\n\r\n            const { column, rowData, rowIndex, rawCellValue } = this;\r\n\r\n            // has render function\r\n            if (typeof column.renderBodyCell === \"function\") {\r\n                const renderResult = column.renderBodyCell(\r\n                    {\r\n                        row: rowData,\r\n                        column,\r\n                        rowIndex,\r\n                    },\r\n                    h,\r\n                );\r\n\r\n                content = renderResult;\r\n            } else {\r\n                content = rawCellValue;\r\n            }\r\n\r\n            // ellipisis\r\n            if (column.ellipsis) {\r\n                const { showTitle } = column.ellipsis;\r\n\r\n                // default true\r\n                const isShowTitle = isBoolean(showTitle) ? showTitle : true;\r\n\r\n                content = (\r\n                    <span\r\n                        title={isShowTitle ? content : \"\"}\r\n                        style={this.getEllipsisContentStyle()}\r\n                        class={clsName(\"body-td-span-ellipsis\")}\r\n                    >\r\n                        {content}\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            return content;\r\n        },\r\n\r\n        // get chcekbox content\r\n        getCheckboxContent() {\r\n            if (this.column.type === COLUMN_TYPES.CHECKBOX) {\r\n                // checkbox content props\r\n                const checkboxProps = {\r\n                    props: {\r\n                        column: this.column,\r\n                        checkboxOption: this.checkboxOption,\r\n                        rowKey: this.rowData[this.rowKeyFieldName],\r\n                        internalCheckboxSelectedRowKeys:\r\n                            this.internalCheckboxSelectedRowKeys,\r\n                    },\r\n                };\r\n\r\n                return <BodyCheckboxContent {...checkboxProps} />;\r\n            }\r\n            return null;\r\n        },\r\n\r\n        // get radio content\r\n        getRadioContent() {\r\n            if (this.column.type === COLUMN_TYPES.RADIO) {\r\n                // radio props\r\n                const radioProps = {\r\n                    props: {\r\n                        column: this.column,\r\n                        radioOption: this.radioOption,\r\n                        rowKey: this.rowData[this.rowKeyFieldName],\r\n                        internalRadioSelectedRowKey:\r\n                            this.internalRadioSelectedRowKey,\r\n                    },\r\n                };\r\n\r\n                return <BodyRadioContent {...radioProps} />;\r\n            }\r\n            return null;\r\n        },\r\n\r\n        // get cell span\r\n        getCellSpan() {\r\n            const { cellSpanOption, rowData, column, rowIndex } = this;\r\n            let rowspan = 1;\r\n            let colspan = 1;\r\n\r\n            if (cellSpanOption) {\r\n                const { bodyCellSpan } = cellSpanOption;\r\n\r\n                if (typeof bodyCellSpan === \"function\") {\r\n                    const result = bodyCellSpan({\r\n                        row: rowData,\r\n                        column,\r\n                        rowIndex,\r\n                    });\r\n\r\n                    if (typeof result === \"object\") {\r\n                        rowspan = result.rowspan;\r\n                        colspan = result.colspan;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return { rowspan, colspan };\r\n        },\r\n        // cell click\r\n        cellClick(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, expandOption, rowData } = this;\r\n\r\n            this.dispatch(COMPS_NAME.VE_TABLE, EMIT_EVENTS.BODY_CELL_CLICK, {\r\n                event: e,\r\n                rowData,\r\n                column,\r\n            });\r\n\r\n            if (column.type !== COLUMN_TYPES.EXPAND) {\r\n                return false;\r\n            }\r\n\r\n            if (expandOption) {\r\n                const eventTargetName = e.target.nodeName;\r\n\r\n                const trigger = expandOption.trigger;\r\n\r\n                // expand row by click icon\r\n                if (!trigger || trigger === EXPAND_TRIGGER_TYPES.ICON) {\r\n                    if (eventTargetName !== \"TD\") {\r\n                        e.stopPropagation();\r\n                        this.$emit(EMIT_EVENTS.EXPAND_ROW_CHANGE);\r\n                    }\r\n                }\r\n                // expand row by click cell(td)\r\n                else if (trigger === EXPAND_TRIGGER_TYPES.CELL) {\r\n                    e.stopPropagation();\r\n                    this.$emit(EMIT_EVENTS.EXPAND_ROW_CHANGE);\r\n                }\r\n            }\r\n        },\r\n        // dblclick\r\n        cellDblclick(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, rowData } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.BODY_CELL_DOUBLE_CLICK,\r\n                {\r\n                    event: e,\r\n                    rowData,\r\n                    column,\r\n                },\r\n            );\r\n        },\r\n        // contextmenu\r\n        cellContextmenu(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, rowData } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.BODY_CELL_CONTEXTMENU,\r\n                {\r\n                    event: e,\r\n                    rowData,\r\n                    column,\r\n                },\r\n            );\r\n        },\r\n        // mouseenter\r\n        cellMouseenter(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseleave\r\n        cellMouseleave(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousemove\r\n        cellMousemove(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, rowData } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.BODY_CELL_MOUSEMOVE,\r\n                {\r\n                    event: e,\r\n                    rowData,\r\n                    column,\r\n                },\r\n            );\r\n        },\r\n        // mouseover\r\n        cellMouseover(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, rowData } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.BODY_CELL_MOUSEOVER,\r\n                {\r\n                    event: e,\r\n                    rowData,\r\n                    column,\r\n                },\r\n            );\r\n        },\r\n        // mousedown\r\n        cellMousedown(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, rowData } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.BODY_CELL_MOUSEDOWN,\r\n                {\r\n                    event: e,\r\n                    rowData,\r\n                    column,\r\n                },\r\n            );\r\n        },\r\n        // mouseup\r\n        cellMouseup(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { column, rowData } = this;\r\n\r\n            this.dispatch(COMPS_NAME.VE_TABLE, EMIT_EVENTS.BODY_CELL_MOUSEUP, {\r\n                event: e,\r\n                rowData,\r\n                column,\r\n            });\r\n        },\r\n    },\r\n    render(h) {\r\n        const {\r\n            column,\r\n            cellClick,\r\n            rowData,\r\n            isExpandRow,\r\n            expandOption,\r\n            expandedRowkeys,\r\n            rowKeyFieldName,\r\n            eventCustomOption,\r\n            rowIndex,\r\n        } = this;\r\n\r\n        // expand icon props\r\n        const expandIconProps = {\r\n            props: {\r\n                rowData,\r\n                column,\r\n                expandOption,\r\n                expandedRowkeys,\r\n                rowKeyFieldName,\r\n                cellClick,\r\n            },\r\n        };\r\n\r\n        const { rowspan, colspan } = this.getCellSpan();\r\n        if (!rowspan || !colspan) {\r\n            return null;\r\n        }\r\n\r\n        // custom on cell event\r\n        let customEvents = {};\r\n        if (eventCustomOption) {\r\n            const { bodyCellEvents } = eventCustomOption;\r\n\r\n            customEvents = bodyCellEvents\r\n                ? bodyCellEvents({ row: rowData, column, rowIndex })\r\n                : {};\r\n        }\r\n\r\n        const {\r\n            click,\r\n            dblclick,\r\n            contextmenu,\r\n            mouseenter,\r\n            mouseleave,\r\n            mousemove,\r\n            mouseover,\r\n            mousedown,\r\n            mouseup,\r\n        } = customEvents;\r\n\r\n        const events = {\r\n            click: (e) => {\r\n                this.cellClick(e, click);\r\n            },\r\n            dblclick: (e) => {\r\n                this.cellDblclick(e, dblclick);\r\n            },\r\n            contextmenu: (e) => {\r\n                this.cellContextmenu(e, contextmenu);\r\n            },\r\n            mouseenter: (e) => {\r\n                this.cellMouseenter(e, mouseenter);\r\n            },\r\n            mouseleave: (e) => {\r\n                this.cellMouseleave(e, mouseleave);\r\n            },\r\n            mousemove: (e) => {\r\n                this.cellMousemove(e, mousemove);\r\n            },\r\n            mouseover: (e) => {\r\n                this.cellMouseover(e, mouseover);\r\n            },\r\n            mousedown: (e) => {\r\n                this.cellMousedown(e, mousedown);\r\n            },\r\n            mouseup: (e) => {\r\n                this.cellMouseup(e, mouseup);\r\n            },\r\n        };\r\n\r\n        // td props\r\n        const tdProps = {\r\n            class: this.bodyTdClass(),\r\n            style: this.bodyTdStyle(),\r\n            attrs: {\r\n                rowspan,\r\n                colspan,\r\n                [COMPS_CUSTOM_ATTRS.BODY_COLUMN_KEY]: column.key,\r\n            },\r\n            on: events,\r\n        };\r\n\r\n        return (\r\n            <td {...tdProps}>\r\n                {/* expadn tr icon */}\r\n                {isExpandRow && <ExpandTrIcon {...expandIconProps} />}\r\n                {/* checkbox content */}\r\n                {this.getCheckboxContent()}\r\n                {/* radio content */}\r\n                {this.getRadioContent()}\r\n                {/* other cell content */}\r\n                {this.getRenderContent(h)}\r\n            </td>\r\n        );\r\n    },\r\n};\r\n","import BodyTd from \"./body-td\";\r\nimport { clsName } from \"../util\";\r\nimport { COMPS_NAME, EMIT_EVENTS, COMPS_CUSTOM_ATTRS } from \"../util/constant\";\r\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nimport { isEmptyValue } from \"../../../src/utils\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_TR,\r\n    mixins: [emitter],\r\n    props: {\r\n        rowData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        columnCollection: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        allRowKeys: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        /*\r\n        expand\r\n        */\r\n        // expand row option\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // is expand row\r\n        isExpandRow: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        // expanded row keys\r\n        expandedRowkeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        // expand row change\r\n        expandRowChange: {\r\n            type: Function,\r\n            default: null,\r\n        },\r\n\r\n        /*\r\n        checkbox\r\n        */\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        internalCheckboxSelectedRowKeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n\r\n        /*\r\n        radio\r\n        */\r\n        radioOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        internalRadioSelectedRowKey: {\r\n            type: [String, Number],\r\n            default: null,\r\n        },\r\n        // is virtual scroll\r\n        isVirtualScroll: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // highlight row key\r\n        highlightRowKey: {\r\n            type: [String, Number],\r\n            default: null,\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection data\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection range data\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        bodyIndicatorRowKeys: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // edit opttion\r\n        editOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    computed: {\r\n        // current row key\r\n        currentRowKey() {\r\n            const { rowKeyFieldName } = this;\r\n            return rowKeyFieldName ? this.rowData[rowKeyFieldName] : null;\r\n        },\r\n        // tr class\r\n        trClass() {\r\n            let result = null;\r\n\r\n            const { highlightRowKey, currentRowKey } = this;\r\n\r\n            let isHighlight = false;\r\n\r\n            if (!isEmptyValue(highlightRowKey)) {\r\n                if (highlightRowKey === currentRowKey) {\r\n                    isHighlight = true;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                [clsName(\"body-tr\")]: true,\r\n                [clsName(\"tr-highlight\")]: isHighlight,\r\n            };\r\n\r\n            return result;\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // click\r\n        rowClick(e, fn) {\r\n            fn && fn(e);\r\n\r\n            const { rowData, rowIndex } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE_BODY,\r\n                EMIT_EVENTS.BODY_ROW_CLICK,\r\n                {\r\n                    rowData,\r\n                    rowIndex,\r\n                },\r\n            );\r\n        },\r\n        // dblclick\r\n        rowDblclick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // contextmenu\r\n        rowContextmenu(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseenter\r\n        rowMouseenter(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseleave\r\n        rowMouseleave(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousemove\r\n        rowMousemove(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseover\r\n        rowMouseover(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousedown\r\n        rowMousedown(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseup\r\n        rowMouseup(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n    },\r\n\r\n    render() {\r\n        const {\r\n            colgroups,\r\n            expandOption,\r\n            expandRowChange,\r\n            isExpandRow,\r\n            expandedRowkeys,\r\n            checkboxOption,\r\n            rowKeyFieldName,\r\n            rowIndex,\r\n            rowData,\r\n            internalCheckboxSelectedRowKeys,\r\n            internalRadioSelectedRowKey,\r\n            radioOption,\r\n            cellStyleOption,\r\n            eventCustomOption,\r\n        } = this;\r\n\r\n        // get td content\r\n        const getTdContent = () => {\r\n            return colgroups.map((column) => {\r\n                const tdProps = {\r\n                    key: column.key,\r\n                    props: {\r\n                        rowIndex,\r\n                        rowData,\r\n                        column,\r\n                        columnCollection: this.columnCollection,\r\n                        colgroups,\r\n                        expandOption,\r\n                        expandedRowkeys,\r\n                        checkboxOption,\r\n                        rowKeyFieldName,\r\n                        allRowKeys: this.allRowKeys,\r\n                        isExpandRow,\r\n                        internalCheckboxSelectedRowKeys,\r\n                        internalRadioSelectedRowKey,\r\n                        radioOption,\r\n                        cellStyleOption,\r\n                        cellSpanOption: this.cellSpanOption,\r\n                        eventCustomOption,\r\n                        cellSelectionData: this.cellSelectionData,\r\n                        cellSelectionRangeData: this.cellSelectionRangeData,\r\n                        bodyIndicatorRowKeys: this.bodyIndicatorRowKeys,\r\n                        editOption: this.editOption,\r\n                    },\r\n                    on: {\r\n                        [EMIT_EVENTS.EXPAND_ROW_CHANGE]: () =>\r\n                            expandRowChange(rowData, rowIndex),\r\n                    },\r\n                };\r\n                return <BodyTd {...tdProps} />;\r\n            });\r\n        };\r\n\r\n        let result = null;\r\n\r\n        // custom on row event\r\n        let customEvents = {};\r\n        if (eventCustomOption) {\r\n            const { bodyRowEvents } = eventCustomOption;\r\n            customEvents = bodyRowEvents\r\n                ? bodyRowEvents({ row: rowData, rowIndex })\r\n                : {};\r\n        }\r\n\r\n        const {\r\n            click,\r\n            dblclick,\r\n            contextmenu,\r\n            mouseenter,\r\n            mouseleave,\r\n            mousemove,\r\n            mouseover,\r\n            mousedown,\r\n            mouseup,\r\n        } = customEvents;\r\n\r\n        const events = {\r\n            click: (e) => {\r\n                this.rowClick(e, click);\r\n            },\r\n            dblclick: (e) => {\r\n                this.rowDblclick(e, dblclick);\r\n            },\r\n            contextmenu: (e) => {\r\n                this.rowContextmenu(e, contextmenu);\r\n            },\r\n            mouseenter: (e) => {\r\n                this.rowMouseenter(e, mouseenter);\r\n            },\r\n            mouseleave: (e) => {\r\n                this.rowMouseleave(e, mouseleave);\r\n            },\r\n            mousemove: (e) => {\r\n                this.rowMousemove(e, mousemove);\r\n            },\r\n            mouseover: (e) => {\r\n                this.rowMouseover(e, mouseover);\r\n            },\r\n            mousedown: (e) => {\r\n                this.rowMousedown(e, mousedown);\r\n            },\r\n            mouseup: (e) => {\r\n                this.rowMouseup(e, mouseup);\r\n            },\r\n        };\r\n\r\n        if (this.isVirtualScroll) {\r\n            const props = {\r\n                class: this.trClass,\r\n                props: {\r\n                    tagName: \"tr\",\r\n                    id: this.currentRowKey,\r\n                },\r\n                attrs: {\r\n                    [COMPS_CUSTOM_ATTRS.BODY_ROW_KEY]: this.currentRowKey,\r\n                },\r\n                on: {\r\n                    \"on-dom-resize-change\": ({ key, height }) => {\r\n                        this.dispatch(\r\n                            COMPS_NAME.VE_TABLE,\r\n                            EMIT_EVENTS.BODY_ROW_HEIGHT_CHANGE,\r\n                            {\r\n                                rowKey: key,\r\n                                height,\r\n                            },\r\n                        );\r\n                    },\r\n                },\r\n                nativeOn: events,\r\n            };\r\n\r\n            result = (\r\n                <VueDomResizeObserver {...props}>\r\n                    {getTdContent()}\r\n                </VueDomResizeObserver>\r\n            );\r\n        } else {\r\n            const props = {\r\n                class: this.trClass,\r\n                attrs: {\r\n                    [COMPS_CUSTOM_ATTRS.BODY_ROW_KEY]: this.currentRowKey,\r\n                },\r\n                on: events,\r\n            };\r\n\r\n            result = <tr {...props}>{getTdContent()}</tr>;\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n","import { clsName } from \"../util\";\r\nimport { COMPS_NAME } from \"../util/constant\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_TR_SCROLLING,\r\n    props: {\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // tr class\r\n        trClass() {\r\n            let result = null;\r\n\r\n            result = {\r\n                [clsName(\"body-tr\")]: true,\r\n                [clsName(\"body-row-scrolling\")]: true,\r\n            };\r\n\r\n            return result;\r\n        },\r\n    },\r\n\r\n    render() {\r\n        const { colgroups } = this;\r\n\r\n        const props = {\r\n            class: this.trClass,\r\n        };\r\n\r\n        return (\r\n            <tr {...props}>\r\n                <td colSpan={colgroups.length}></td>\r\n            </tr>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"../util\";\r\nimport { COMPS_NAME } from \"../util/constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_EXPAND_TR,\r\n    mixins: [emitter],\r\n    props: {\r\n        tableViewportWidth: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        // expand column\r\n        expandColumn: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        // expand row option\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // expanded row keys\r\n        expandedRowkeys: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        rowData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n    },\r\n    computed: {\r\n        // get column count\r\n        columnCount() {\r\n            return this.colgroups.length;\r\n        },\r\n        // current row key\r\n        currentRowKey() {\r\n            return this.rowData[this.rowKeyFieldName];\r\n        },\r\n        // is row expanded\r\n        isRowExpanded() {\r\n            let result = false;\r\n\r\n            const { expandOption, expandedRowkeys, currentRowKey } = this;\r\n\r\n            // defalut expand all rows\r\n            if (expandOption.defaultExpandAllRows) {\r\n                result = true;\r\n            }\r\n            // defaultExpandedRowKeys includes currentRowKey\r\n            else if (expandedRowkeys.includes(currentRowKey)) {\r\n                result = true;\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // expand row class\r\n        expanRowClass() {\r\n            let result = {\r\n                [clsName(\"expand-tr\")]: true,\r\n            };\r\n            return result;\r\n        },\r\n\r\n        // has left fixed column\r\n        hasLeftFixedColumn() {\r\n            return this.colgroups.some((x) => x.fixed === \"left\");\r\n        },\r\n\r\n        // expand td content style\r\n        expandTdContentStyle() {\r\n            let result = {};\r\n\r\n            const { hasLeftFixedColumn, tableViewportWidth } = this;\r\n\r\n            if (hasLeftFixedColumn) {\r\n                // table width\r\n                if (tableViewportWidth) {\r\n                    result[\"width\"] = tableViewportWidth + \"px\";\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n    },\r\n    methods: {\r\n        // get expande row content\r\n        getExpandRowContent(h) {\r\n            const { expandOption } = this;\r\n            let result =\r\n                expandOption.render &&\r\n                expandOption.render(\r\n                    {\r\n                        row: this.rowData,\r\n                        column: this.expandColumn,\r\n                        rowIndex: this.rowIndex,\r\n                    },\r\n                    h,\r\n                );\r\n\r\n            return result;\r\n        },\r\n    },\r\n    render(h) {\r\n        const { isRowExpanded, columnCount, getExpandRowContent } = this;\r\n\r\n        let result = null;\r\n\r\n        if (isRowExpanded) {\r\n            let content = getExpandRowContent(h);\r\n            result = (\r\n                <tr class={this.expanRowClass}>\r\n                    <td class={clsName(\"expand-td\")} colSpan={columnCount}>\r\n                        <div\r\n                            class={clsName(\"expand-td-content\")}\r\n                            style={this.expandTdContentStyle}\r\n                        >\r\n                            {content}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        return result;\r\n    },\r\n};\r\n","import BodyTr from \"./body-tr\";\r\nimport BodyTrScrolling from \"./body-tr-scrolling\";\r\nimport ExpandTr from \"./expand-tr\";\r\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\r\nimport {\r\n    getDomResizeObserverCompKey,\r\n    getFixedTotalWidthByColumnKey,\r\n    clsName,\r\n} from \"../util\";\r\nimport { getValByUnit } from \"../../../src/utils/index.js\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nimport {\r\n    COMPS_NAME,\r\n    EMIT_EVENTS,\r\n    COLUMN_TYPES,\r\n    EXPAND_TRIGGER_TYPES,\r\n} from \"../util/constant\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY,\r\n    mixins: [emitter],\r\n    props: {\r\n        tableViewportWidth: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        columnsOptionResetTime: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        actualRenderTableData: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        hasFixedColumn: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        allRowKeys: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        // expand row option\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // radio option\r\n        radioOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // virual scroll\r\n        virtualScrollOption: {\r\n            type: Object,\r\n            default: null,\r\n        },\r\n        // is virtual scroll\r\n        isVirtualScroll: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // is scrolling\r\n        showVirtualScrollingPlaceholder: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // highlight row key\r\n        highlightRowKey: {\r\n            type: [String, Number],\r\n            default: null,\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection option\r\n        cellSelectionOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection data\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection range data\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        bodyIndicatorRowKeys: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // edit option\r\n        editOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // columns widths map\r\n            colsWidths: new Map(),\r\n            /*\r\n            internal expand row keys\r\n            1、当没有设置 expandedRowKeys 时生效\r\n            */\r\n            internalExpandRowkeys: [],\r\n            /*\r\n            1、存储当前多选功能的rowkey 信息\r\n            */\r\n            internalCheckboxSelectedRowKeys: [],\r\n            /*\r\n            1、存储当前单选功能的rowkey 信息\r\n            */\r\n            internalRadioSelectedRowKey: null,\r\n            // virtual scroll preview rendered rowKey\r\n            virtualScrollPreviewRenderedRowKeys: [],\r\n            // virtual scroll repeat rendered rowKey\r\n            virtualScrollRepeatRenderedRowKeys: [],\r\n        };\r\n    },\r\n    computed: {\r\n        /* \r\n        column collenction info \r\n        1、style of each column\r\n        2、class of each column\r\n        */\r\n        columnCollection() {\r\n            let columnCollection = [];\r\n\r\n            const { colgroups } = this;\r\n\r\n            colgroups.forEach((col) => {\r\n                const colKey = col.key;\r\n\r\n                let columnCollectionItem = {\r\n                    colKey: colKey,\r\n                    class: {\r\n                        [clsName(\"last-left-fixed-column\")]:\r\n                            this.isLastLeftFixedColumn(col),\r\n                        [clsName(\"first-right-fixed-column\")]:\r\n                            this.isfirstRightFixedColumn(col),\r\n                    },\r\n                    style: {},\r\n                };\r\n\r\n                const { fixed, align } = col;\r\n\r\n                columnCollectionItem.style[\"text-align\"] = align || \"center\";\r\n\r\n                if (fixed) {\r\n                    let totalWidth = 0;\r\n                    // column index\r\n                    const columnIndex = colgroups.findIndex(\r\n                        (x) => x.key === colKey,\r\n                    );\r\n                    if (\r\n                        (fixed === \"left\" && columnIndex > 0) ||\r\n                        (fixed === \"right\" &&\r\n                            columnIndex < colgroups.length - 1)\r\n                    ) {\r\n                        totalWidth = getFixedTotalWidthByColumnKey({\r\n                            colgroups,\r\n                            colKey,\r\n                            fixed,\r\n                        });\r\n\r\n                        totalWidth = getValByUnit(totalWidth);\r\n                    }\r\n\r\n                    columnCollectionItem.style[\"left\"] =\r\n                        fixed === \"left\" ? totalWidth : \"\";\r\n                    columnCollectionItem.style[\"right\"] =\r\n                        fixed === \"right\" ? totalWidth : \"\";\r\n                }\r\n\r\n                columnCollection.push(columnCollectionItem);\r\n            });\r\n            return columnCollection;\r\n        },\r\n        // expand column\r\n        expandColumn() {\r\n            return this.colgroups.find((x) => x.type === COLUMN_TYPES.EXPAND);\r\n        },\r\n        /*\r\n        是否是可控行展开\r\n        1、当设置了 expandedRowKeys 属性时则为可控行展开\r\n        */\r\n        isControlledExpand() {\r\n            return (\r\n                this.expandOption &&\r\n                Array.isArray(this.expandOption.expandedRowKeys)\r\n            );\r\n        },\r\n\r\n        // expanded row keys\r\n        expandedRowkeys() {\r\n            return this.isControlledExpand\r\n                ? this.expandOption.expandedRowKeys\r\n                : this.internalExpandRowkeys;\r\n        },\r\n\r\n        // disable row selected row keys\r\n        disableCheckboxSelectedRowKeys() {\r\n            let result = [];\r\n\r\n            const { checkboxOption, internalCheckboxSelectedRowKeys } = this;\r\n\r\n            if (!checkboxOption) {\r\n                return result;\r\n            }\r\n            const { disableSelectedRowKeys } = checkboxOption;\r\n\r\n            if (\r\n                internalCheckboxSelectedRowKeys.length > 0 &&\r\n                Array.isArray(disableSelectedRowKeys) &&\r\n                disableSelectedRowKeys.length > 0\r\n            ) {\r\n                disableSelectedRowKeys.forEach((rowkey) => {\r\n                    if (internalCheckboxSelectedRowKeys.includes(rowkey)) {\r\n                        result.push(rowkey);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // disable row unselected row keys\r\n        disableCheckboxUnselectedRowKeys() {\r\n            let result = [];\r\n\r\n            const { checkboxOption, internalCheckboxSelectedRowKeys } = this;\r\n\r\n            if (!checkboxOption) {\r\n                return result;\r\n            }\r\n            const { disableSelectedRowKeys } = checkboxOption;\r\n\r\n            if (\r\n                Array.isArray(disableSelectedRowKeys) &&\r\n                disableSelectedRowKeys.length > 0\r\n            ) {\r\n                disableSelectedRowKeys.forEach((rowkey) => {\r\n                    if (!internalCheckboxSelectedRowKeys.includes(rowkey)) {\r\n                        result.push(rowkey);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /*\r\n        is row keys selected all\r\n        为 true 的条件：选中数量 + 禁用选中数量 === 总量\r\n        */\r\n        isCheckboxSelectedAll() {\r\n            if (this.allRowKeys.length > 0) {\r\n                if (\r\n                    this.internalCheckboxSelectedRowKeys.length +\r\n                        this.disableCheckboxUnselectedRowKeys.length ===\r\n                    this.allRowKeys.length\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        // is checkbox indeterminate\r\n        isCheckboxIndeterminate() {\r\n            const { internalCheckboxSelectedRowKeys, allRowKeys } = this;\r\n\r\n            return (\r\n                internalCheckboxSelectedRowKeys.length > 0 &&\r\n                internalCheckboxSelectedRowKeys.length < allRowKeys.length\r\n            );\r\n        },\r\n        // 是否是受控属性（取决于selectedRowKey）\r\n        isControlledRadio() {\r\n            const { radioOption } = this;\r\n\r\n            return (\r\n                radioOption &&\r\n                Object.keys(radioOption).includes(\"selectedRowKey\")\r\n            );\r\n        },\r\n    },\r\n    watch: {\r\n        // watch expand Option\r\n        expandOption: {\r\n            handler: function () {\r\n                this.initInternalExpandRowKeys();\r\n            },\r\n            immediate: true,\r\n        },\r\n        // watch expandOption expandedRowKeys\r\n        \"expandOption.expandedRowKeys\": {\r\n            handler: function () {\r\n                this.initInternalExpandRowKeys();\r\n            },\r\n        },\r\n        // watch checkbox option\r\n        checkboxOption: {\r\n            handler: function () {\r\n                this.initInternalCheckboxSelectedRowKeys();\r\n            },\r\n            immediate: true,\r\n        },\r\n        // watch selectedRowKeys\r\n        \"checkboxOption.selectedRowKeys\": {\r\n            handler: function () {\r\n                this.resetInternalCheckboxSelectedRowKeys();\r\n            },\r\n        },\r\n        // watch internalCheckboxSelectedRowKeys\r\n        internalCheckboxSelectedRowKeys: {\r\n            handler: function () {\r\n                // send to checkbox all(in header)\r\n                this.sendToCheckboxAll();\r\n            },\r\n        },\r\n        // watch checkbox option\r\n        radioOption: {\r\n            handler: function () {\r\n                this.initInternalRadioSelectedRowKey();\r\n            },\r\n            immediate: true,\r\n        },\r\n        // watch selectedRowKeys\r\n        \"radioOption.selectedRowKey\": {\r\n            handler: function () {\r\n                this.initInternalRadioSelectedRowKey();\r\n            },\r\n        },\r\n    },\r\n    methods: {\r\n        // is last left fixed column\r\n        isLastLeftFixedColumn(column) {\r\n            let result = false;\r\n\r\n            const { colgroups } = this;\r\n\r\n            const { fixed } = column;\r\n\r\n            if (fixed === \"left\") {\r\n                const { field } = column;\r\n                const leftFixedColumns = colgroups.filter(\r\n                    (x) => x.fixed === \"left\",\r\n                );\r\n                const index = leftFixedColumns.findIndex(\r\n                    (x) => x.field === field,\r\n                );\r\n\r\n                if (index === leftFixedColumns.length - 1) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // is first right fixed column\r\n        isfirstRightFixedColumn(column) {\r\n            let result = false;\r\n\r\n            const { colgroups } = this;\r\n\r\n            const { fixed } = column;\r\n\r\n            if (fixed === \"right\") {\r\n                const { field } = column;\r\n                const rightFixedColumns = colgroups.filter(\r\n                    (x) => x.fixed === \"right\",\r\n                );\r\n\r\n                if (rightFixedColumns[0].field === field) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /*\r\n         * @expandRowChange\r\n         * @desc  row expand change\r\n         * @param {object} rowData - row data\r\n         * @param {number} rowIndex - row index\r\n         */\r\n        expandRowChange(rowData, rowIndex) {\r\n            const {\r\n                expandOption,\r\n                internalExpandRowkeys,\r\n                expandedRowkeys,\r\n                rowKeyFieldName,\r\n            } = this;\r\n\r\n            // deal before expand row method\r\n            if (typeof expandOption.beforeExpandRowChange === \"function\") {\r\n                const beforeExpandRowResult =\r\n                    expandOption.beforeExpandRowChange({\r\n                        beforeExpandedRowKeys: expandedRowkeys,\r\n                        row: rowData,\r\n                        rowIndex,\r\n                    });\r\n                // interrupt execute\r\n                if (beforeExpandRowResult === false) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            const rowKey = rowData[rowKeyFieldName];\r\n\r\n            const rowKeyIndex = internalExpandRowkeys.indexOf(rowKey);\r\n            if (rowKeyIndex > -1) {\r\n                internalExpandRowkeys.splice(rowKeyIndex, 1);\r\n            } else {\r\n                internalExpandRowkeys.push(rowKey);\r\n            }\r\n\r\n            // deal after expand row method\r\n            if (typeof expandOption.afterExpandRowChange === \"function\") {\r\n                expandOption.afterExpandRowChange({\r\n                    afterExpandedRowKeys: internalExpandRowkeys,\r\n                    row: rowData,\r\n                    rowIndex,\r\n                });\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @rowClick\r\n         * @desc  row expand click event\r\n         * @param {object} rowData - row data\r\n         * @param {number} rowIndex - row index\r\n         */\r\n        rowClick({ rowData, rowIndex }) {\r\n            const {\r\n                expandOption,\r\n                isExpandRow,\r\n                expandRowChange,\r\n                rowKeyFieldName,\r\n            } = this;\r\n\r\n            // 行高亮功能\r\n            if (rowKeyFieldName) {\r\n                const rowKey = rowData[rowKeyFieldName];\r\n                this.$emit(EMIT_EVENTS.HIGHLIGHT_ROW_CHANGE, { rowKey });\r\n            }\r\n\r\n            // 行展开功能\r\n            if (!isExpandRow({ rowData, rowIndex })) {\r\n                return false;\r\n            }\r\n\r\n            const trigger = expandOption.trigger;\r\n\r\n            // expand row by click row\r\n            if (trigger === EXPAND_TRIGGER_TYPES.ROW) {\r\n                expandRowChange(rowData, rowIndex);\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @isExpandRow\r\n         * @desc  is expand row\r\n         * @param {object} rowData - row data\r\n         * @param {number} rowIndex - row index\r\n         */\r\n        isExpandRow({ rowData, rowIndex }) {\r\n            let result = false;\r\n\r\n            const { expandColumn, expandOption } = this;\r\n\r\n            if (expandColumn && expandOption) {\r\n                // 是否允许展开\r\n                let expandable = true;\r\n                if (typeof expandOption.expandable === \"function\") {\r\n                    expandable = expandOption.expandable({\r\n                        row: rowData,\r\n                        column: expandColumn,\r\n                        rowIndex,\r\n                    });\r\n                }\r\n\r\n                if (expandable !== false) {\r\n                    result = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /*\r\n         * @tdSizeChange\r\n         * @desc  td size change\r\n         * @param {any} key - column key\r\n         * @param {number|string} width - column real width\r\n         */\r\n        tdSizeChange({ key, width }) {\r\n            const { colsWidths } = this;\r\n            colsWidths.set(key, width);\r\n            this.$emit(EMIT_EVENTS.BODY_CELL_WIDTH_CHANGE, colsWidths);\r\n        },\r\n\r\n        // init internal expand row keys\r\n        initInternalExpandRowKeys() {\r\n            const { expandOption, isControlledExpand, allRowKeys } = this;\r\n\r\n            if (!expandOption) {\r\n                return false;\r\n            }\r\n\r\n            if (isControlledExpand) {\r\n                this.internalExpandRowkeys =\r\n                    expandOption.expandedRowKeys.slice(0);\r\n            } else if (expandOption.defaultExpandAllRows) {\r\n                this.internalExpandRowkeys = allRowKeys;\r\n            } else if (expandOption.defaultExpandedRowKeys) {\r\n                this.internalExpandRowkeys =\r\n                    expandOption.defaultExpandedRowKeys.slice(0);\r\n            }\r\n        },\r\n        // get expand row\r\n        getExpandRowComp({ rowData, rowIndex }) {\r\n            if (this.isExpandRow({ rowData, rowIndex })) {\r\n                const expandTrProps = {\r\n                    props: {\r\n                        tableViewportWidth: this.tableViewportWidth,\r\n                        colgroups: this.colgroups,\r\n                        expandOption: this.expandOption,\r\n                        expandedRowkeys: this.expandedRowkeys,\r\n                        expandColumn: this.expandColumn,\r\n                        rowKeyFieldName: this.rowKeyFieldName,\r\n                        rowData,\r\n                        rowIndex,\r\n                    },\r\n                };\r\n\r\n                return <ExpandTr {...expandTrProps} />;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        // send to checkbox all\r\n        sendToCheckboxAll() {\r\n            const { isCheckboxSelectedAll, isCheckboxIndeterminate } = this;\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO,\r\n                {\r\n                    isIndeterminate: isCheckboxIndeterminate,\r\n                    isSelected: isCheckboxSelectedAll,\r\n                },\r\n            );\r\n        },\r\n\r\n        // init internal Radio SelectedRowKey\r\n        initInternalRadioSelectedRowKey() {\r\n            const { radioOption, isControlledRadio } = this;\r\n\r\n            if (!radioOption) {\r\n                return false;\r\n            }\r\n\r\n            const { selectedRowKey, defaultSelectedRowKey } = radioOption;\r\n\r\n            this.internalRadioSelectedRowKey = isControlledRadio\r\n                ? selectedRowKey\r\n                : defaultSelectedRowKey;\r\n        },\r\n\r\n        // init internal Checkbox SelectedRowKeys\r\n        initInternalCheckboxSelectedRowKeys() {\r\n            let result = [];\r\n            const { checkboxOption, allRowKeys } = this;\r\n\r\n            if (!checkboxOption) {\r\n                return false;\r\n            }\r\n\r\n            const {\r\n                selectedRowKeys,\r\n                defaultSelectedAllRows,\r\n                defaultSelectedRowKeys,\r\n            } = checkboxOption;\r\n\r\n            if (Array.isArray(selectedRowKeys)) {\r\n                result = selectedRowKeys;\r\n            } else if (defaultSelectedAllRows) {\r\n                result = allRowKeys;\r\n            } else if (Array.isArray(defaultSelectedRowKeys)) {\r\n                result = defaultSelectedRowKeys;\r\n            }\r\n            this.internalCheckboxSelectedRowKeys = result;\r\n        },\r\n        // reset internalCheckboxSelectedRowKeys by selectedRowKeys\r\n        resetInternalCheckboxSelectedRowKeys() {\r\n            this.internalCheckboxSelectedRowKeys =\r\n                this.checkboxOption.selectedRowKeys.slice(0);\r\n        },\r\n\r\n        /*\r\n         * @checkboxSelectedRowChange\r\n         * @desc  selected row change\r\n         * @param {number|string} rowKey - rowKey\r\n         * @param {bool} isSelected\r\n         */\r\n        checkboxSelectedRowChange({ rowKey, isSelected }) {\r\n            const {\r\n                checkboxOption,\r\n                internalCheckboxSelectedRowKeys,\r\n                rowKeyFieldName,\r\n            } = this;\r\n            const { selectedRowChange, selectedRowKeys } = checkboxOption;\r\n\r\n            let internalCheckboxSelectedRowKeysTemp =\r\n                internalCheckboxSelectedRowKeys.slice(0);\r\n\r\n            // will selected\r\n            const rowKeyIndex =\r\n                internalCheckboxSelectedRowKeysTemp.indexOf(rowKey);\r\n            if (isSelected) {\r\n                // bug fixed:通过行点击触发，导致key重复的问题\r\n                if (rowKeyIndex === -1) {\r\n                    internalCheckboxSelectedRowKeysTemp.push(rowKey);\r\n                }\r\n            } else {\r\n                if (rowKeyIndex > -1) {\r\n                    internalCheckboxSelectedRowKeysTemp.splice(rowKeyIndex, 1);\r\n                }\r\n            }\r\n\r\n            // 非可控才改变 internalCheckboxSelectedRowKeys\r\n            if (!Array.isArray(selectedRowKeys)) {\r\n                this.internalCheckboxSelectedRowKeys =\r\n                    internalCheckboxSelectedRowKeysTemp;\r\n            }\r\n\r\n            selectedRowChange({\r\n                row: this.actualRenderTableData.find(\r\n                    (x) => x[rowKeyFieldName] === rowKey,\r\n                ),\r\n                isSelected,\r\n                selectedRowKeys: internalCheckboxSelectedRowKeysTemp,\r\n            });\r\n        },\r\n\r\n        /*\r\n         * @checkboxSelectedAllChange\r\n         * @desc  selected all change\r\n         * @param {bool} isSelected - is selected\r\n         */\r\n        checkboxSelectedAllChange({ isSelected }) {\r\n            const {\r\n                checkboxOption,\r\n                internalCheckboxSelectedRowKeys,\r\n                allRowKeys,\r\n                disableCheckboxSelectedRowKeys,\r\n                disableCheckboxUnselectedRowKeys,\r\n            } = this;\r\n            const { selectedAllChange, selectedRowKeys } = checkboxOption;\r\n\r\n            let internalCheckboxSelectedRowKeysTemp =\r\n                internalCheckboxSelectedRowKeys.slice(0);\r\n            // selected all\r\n            if (isSelected) {\r\n                // except disable Row Unselected keys\r\n                let allSelectedKeys = allRowKeys.slice(0);\r\n                if (disableCheckboxUnselectedRowKeys.length > 0) {\r\n                    disableCheckboxUnselectedRowKeys.forEach((rowkey) => {\r\n                        let index = allSelectedKeys.indexOf(rowkey);\r\n                        if (index > -1) {\r\n                            allSelectedKeys.splice(index, 1);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                internalCheckboxSelectedRowKeysTemp = allSelectedKeys;\r\n            } else {\r\n                // except disable Row Selected keys\r\n                internalCheckboxSelectedRowKeysTemp =\r\n                    disableCheckboxSelectedRowKeys;\r\n            }\r\n\r\n            // 非可控才改变 internalCheckboxSelectedRowKeys\r\n            if (!Array.isArray(selectedRowKeys)) {\r\n                this.internalCheckboxSelectedRowKeys =\r\n                    internalCheckboxSelectedRowKeysTemp;\r\n            }\r\n\r\n            selectedAllChange &&\r\n                selectedAllChange({\r\n                    isSelected,\r\n                    selectedRowKeys: internalCheckboxSelectedRowKeysTemp,\r\n                    //changeRowKeys:\r\n                });\r\n        },\r\n\r\n        /*\r\n         * @radioSelectedRowChange\r\n         * @desc  selected all change\r\n         * @param {number|string} rowKey - rowKey\r\n         */\r\n        radioSelectedRowChange({ rowKey }) {\r\n            const { radioOption, rowKeyFieldName, isControlledRadio } = this;\r\n\r\n            const { selectedRowChange } = radioOption;\r\n\r\n            // 非受控\r\n            if (!isControlledRadio) {\r\n                this.internalRadioSelectedRowKey = rowKey;\r\n            }\r\n\r\n            selectedRowChange({\r\n                row: this.actualRenderTableData.find(\r\n                    (x) => x[rowKeyFieldName] === rowKey,\r\n                ),\r\n            });\r\n        },\r\n        // get tr key\r\n        getTrKey({ rowData, rowIndex }) {\r\n            let result = rowIndex;\r\n\r\n            const { rowKeyFieldName } = this;\r\n            if (rowKeyFieldName) {\r\n                result = rowData[rowKeyFieldName];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /*\r\n        rendering row keys\r\n        virtual scrolling will invoke\r\n        */\r\n        renderingRowKeys(rowKeys) {\r\n            const {\r\n                virtualScrollPreviewRenderedRowKeys: previewRenderedRowKeys,\r\n            } = this;\r\n\r\n            this.virtualScrollRepeatRenderedRowKeys = rowKeys.filter(\r\n                (rowKey) => {\r\n                    return previewRenderedRowKeys.indexOf(rowKey) != -1;\r\n                },\r\n            );\r\n\r\n            this.virtualScrollPreviewRenderedRowKeys = rowKeys;\r\n        },\r\n    },\r\n    mounted() {\r\n        // receive checkbox row selected change from VE_TABLE_BODY_CHECKBOX_CONTENT\r\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ROW_CHANGE, (params) => {\r\n            this.checkboxSelectedRowChange(params);\r\n        });\r\n\r\n        // receive checkbox row selected change from VE_TABLE_BODY_CHECKBOX_CONTENT\r\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE, (params) => {\r\n            this.checkboxSelectedAllChange(params);\r\n        });\r\n\r\n        // receive radio row selected change from VE_TABLE_BODY_RADIO_CONTENT\r\n        this.$on(EMIT_EVENTS.RADIO_SELECTED_ROW_CHANGE, (params) => {\r\n            this.radioSelectedRowChange(params);\r\n        });\r\n\r\n        // recieve tr click\r\n        this.$on(EMIT_EVENTS.BODY_ROW_CLICK, (params) => {\r\n            this.rowClick(params);\r\n        });\r\n\r\n        if (this.checkboxOption) {\r\n            // 这里 nextTick 解决由于子组件先初始化，导致父组件无法接收消息的问题\r\n            this.$nextTick(() => {\r\n                this.sendToCheckboxAll();\r\n            });\r\n        }\r\n\r\n        // add key down event listener\r\n        document.addEventListener(\"keydown\", this.dealKeydownEvent);\r\n    },\r\n    destroyed() {\r\n        // remove key down event listener\r\n        document.removeEventListener(\"keydown\", this.dealKeydownEvent);\r\n    },\r\n    render() {\r\n        const {\r\n            colgroups,\r\n            actualRenderTableData,\r\n            expandOption,\r\n            expandRowChange,\r\n            isExpandRow,\r\n            getExpandRowComp,\r\n            expandedRowkeys,\r\n            checkboxOption,\r\n            radioOption,\r\n            rowKeyFieldName,\r\n            tdSizeChange,\r\n            internalCheckboxSelectedRowKeys,\r\n            internalRadioSelectedRowKey,\r\n            isVirtualScroll,\r\n            cellStyleOption,\r\n            showVirtualScrollingPlaceholder,\r\n        } = this;\r\n\r\n        const { virtualScrollRepeatRenderedRowKeys } = this;\r\n\r\n        return (\r\n            <tbody>\r\n                {/* Measure each column width with additional hidden col */}\r\n                <tr style=\"height:0;\">\r\n                    {colgroups.map((column) => {\r\n                        const measureTdProps = {\r\n                            key: getDomResizeObserverCompKey(\r\n                                column.key,\r\n                                this.columnsOptionResetTime,\r\n                            ),\r\n                            props: {\r\n                                tagName: \"td\",\r\n                                id: column.key,\r\n                            },\r\n                            on: {\r\n                                \"on-dom-resize-change\": tdSizeChange,\r\n                            },\r\n                            style: {\r\n                                padding: 0,\r\n                                border: 0,\r\n                                height: 0,\r\n                            },\r\n                        };\r\n                        return <VueDomResizeObserver {...measureTdProps} />;\r\n                    })}\r\n                </tr>\r\n                {actualRenderTableData.map((rowData, rowIndex) => {\r\n                    const trProps = {\r\n                        key: this.getTrKey({ rowData, rowIndex }),\r\n                        props: {\r\n                            rowIndex,\r\n                            rowData,\r\n                            colgroups,\r\n                            expandOption,\r\n                            expandedRowkeys,\r\n                            checkboxOption,\r\n                            radioOption,\r\n                            rowKeyFieldName,\r\n                            allRowKeys: this.allRowKeys,\r\n                            expandRowChange,\r\n                            internalCheckboxSelectedRowKeys,\r\n                            internalRadioSelectedRowKey,\r\n                            isVirtualScroll,\r\n                            isExpandRow: isExpandRow({\r\n                                rowData,\r\n                                rowIndex,\r\n                            }),\r\n                            cellStyleOption,\r\n                            cellSpanOption: this.cellSpanOption,\r\n                            highlightRowKey: this.highlightRowKey,\r\n                            eventCustomOption: this.eventCustomOption,\r\n                            cellSelectionData: this.cellSelectionData,\r\n                            editOption: this.editOption,\r\n                            columnCollection: this.columnCollection,\r\n                            cellSelectionRangeData: this.cellSelectionRangeData,\r\n                            bodyIndicatorRowKeys: this.bodyIndicatorRowKeys,\r\n                        },\r\n                    };\r\n\r\n                    if (showVirtualScrollingPlaceholder) {\r\n                        const trPropsScrolling = {\r\n                            key: this.getTrKey({ rowData, rowIndex }),\r\n                            props: {\r\n                                colgroups,\r\n                            },\r\n                        };\r\n\r\n                        if (\r\n                            virtualScrollRepeatRenderedRowKeys.indexOf(\r\n                                rowData[this.rowKeyFieldName],\r\n                            ) != -1\r\n                        ) {\r\n                            return [\r\n                                // body tr\r\n                                <BodyTr {...trProps} />,\r\n                            ];\r\n                        } else {\r\n                            return <BodyTrScrolling {...trPropsScrolling} />;\r\n                        }\r\n                    } else {\r\n                        return [\r\n                            // body tr\r\n                            <BodyTr {...trProps} />,\r\n                            // expand row\r\n                            getExpandRowComp({ rowData, rowIndex }),\r\n                        ];\r\n                    }\r\n                })}\r\n            </tbody>\r\n        );\r\n    },\r\n};\r\n","import { getFixedTotalWidthByColumnKey, clsName } from \"../util\";\r\nimport { getValByUnit } from \"../../../src/utils/index.js\";\r\n\r\nimport { COMPS_NAME } from \"../util/constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_TD,\r\n    mixins: [emitter],\r\n    props: {\r\n        rowData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        column: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection key data\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // footer rows\r\n        footerRows: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        // fixed footer\r\n        fixedFooter: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // is last left fixed column\r\n        isLastLeftFixedColumn() {\r\n            let result = false;\r\n\r\n            const { colgroups, column } = this;\r\n\r\n            const { fixed } = column;\r\n\r\n            if (fixed === \"left\") {\r\n                const { field } = column;\r\n                const leftFixedColumns = colgroups.filter(\r\n                    (x) => x.fixed === \"left\",\r\n                );\r\n                const index = leftFixedColumns.findIndex(\r\n                    (x) => x.field === field,\r\n                );\r\n\r\n                if (index === leftFixedColumns.length - 1) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // is first right fixed column\r\n        isfirstRightFixedColumn() {\r\n            let result = false;\r\n\r\n            const { colgroups, column } = this;\r\n\r\n            const { fixed } = column;\r\n\r\n            if (fixed === \"right\") {\r\n                const { field } = column;\r\n                const leftFixedColumns = colgroups.filter(\r\n                    (x) => x.fixed === \"right\",\r\n                );\r\n\r\n                if (leftFixedColumns[0].field === field) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    },\r\n    methods: {\r\n        /*\r\n         * @getBodyTdClass\r\n         * @desc  get body td class\r\n         * @param {string} fixed - 固定方式\r\n         */\r\n        getBodyTdClass({ fixed }) {\r\n            let result = {\r\n                [clsName(\"footer-td\")]: true,\r\n            };\r\n\r\n            const {\r\n                cellStyleOption,\r\n                rowData,\r\n                column,\r\n                rowIndex,\r\n                cellSelectionData,\r\n                rowKeyFieldName,\r\n            } = this;\r\n\r\n            // column fixed\r\n            if (fixed) {\r\n                result[clsName(\"fixed-left\")] = fixed === \"left\";\r\n                result[clsName(\"fixed-right\")] = fixed === \"right\";\r\n                result[clsName(\"last-left-fixed-column\")] =\r\n                    this.isLastLeftFixedColumn;\r\n                result[clsName(\"first-right-fixed-column\")] =\r\n                    this.isfirstRightFixedColumn;\r\n            }\r\n\r\n            // cell style option\r\n            if (\r\n                cellStyleOption &&\r\n                typeof cellStyleOption.footerCellClass === \"function\"\r\n            ) {\r\n                const customClass = cellStyleOption.footerCellClass({\r\n                    row: rowData,\r\n                    column,\r\n                    rowIndex,\r\n                });\r\n                if (customClass) {\r\n                    result[customClass] = true;\r\n                }\r\n            }\r\n            // cell selection option\r\n            if (cellSelectionData) {\r\n                const { rowKey, colKey } = cellSelectionData.currentCell;\r\n                if (\r\n                    rowData[rowKeyFieldName] === rowKey &&\r\n                    column[\"key\"] === colKey\r\n                ) {\r\n                    result[clsName(\"cell-selection\")] = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /*\r\n         * @getBodyTdStyle\r\n         * @desc  get body td style\r\n         * @param {any} key - column key\r\n         * @param {string} align - 居中方式\r\n         * @param {bool} fixed - 固定方式\r\n         */\r\n        getBodyTdStyle({ key, align, fixed }) {\r\n            let result = {};\r\n\r\n            const { colgroups, rowIndex, footerRows } = this;\r\n\r\n            // text align\r\n            result[\"text-align\"] = align || \"center\";\r\n\r\n            // fixed left total width or right total width\r\n            if (fixed) {\r\n                let totalWidth = 0;\r\n                // column index\r\n                const columnIndex = colgroups.findIndex((x) => x.key === key);\r\n                if (\r\n                    (fixed === \"left\" && columnIndex > 0) ||\r\n                    (fixed === \"right\" && columnIndex < colgroups.length - 1)\r\n                ) {\r\n                    totalWidth = getFixedTotalWidthByColumnKey({\r\n                        colgroups,\r\n                        colKey: key,\r\n                        fixed,\r\n                    });\r\n\r\n                    totalWidth = getValByUnit(totalWidth);\r\n                }\r\n\r\n                result[\"left\"] = fixed === \"left\" ? totalWidth : \"\";\r\n                result[\"right\"] = fixed === \"right\" ? totalWidth : \"\";\r\n            }\r\n\r\n            // footer rows th fixed bottom\r\n            if (this.fixedFooter) {\r\n                let rowHeight = 0;\r\n                if (rowIndex !== footerRows.length - 1) {\r\n                    rowHeight = footerRows.reduce(\r\n                        (total, currentVal, index) => {\r\n                            return index > rowIndex\r\n                                ? currentVal.rowHeight + total\r\n                                : total;\r\n                        },\r\n                        0,\r\n                    );\r\n                }\r\n                rowHeight = getValByUnit(rowHeight);\r\n\r\n                result[\"bottom\"] = rowHeight;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get render content\r\n        getRenderContent(h) {\r\n            let content = null;\r\n\r\n            const { column, rowData, rowIndex } = this;\r\n\r\n            // has render function\r\n            if (typeof column.renderFooterCell === \"function\") {\r\n                const renderResult = column.renderFooterCell(\r\n                    {\r\n                        row: rowData,\r\n                        column,\r\n                        rowIndex,\r\n                    },\r\n                    h,\r\n                );\r\n\r\n                content = renderResult;\r\n            } else {\r\n                content = rowData[column.field];\r\n            }\r\n            return content;\r\n        },\r\n\r\n        // get cell span\r\n        getCellSpan() {\r\n            const { cellSpanOption, rowData, column, rowIndex } = this;\r\n            let rowspan = 1;\r\n            let colspan = 1;\r\n\r\n            if (cellSpanOption) {\r\n                const { footerCellSpan } = cellSpanOption;\r\n\r\n                if (typeof footerCellSpan === \"function\") {\r\n                    const result = footerCellSpan({\r\n                        row: rowData,\r\n                        column,\r\n                        rowIndex,\r\n                    });\r\n\r\n                    if (typeof result === \"object\") {\r\n                        rowspan = result.rowspan;\r\n                        colspan = result.colspan;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return { rowspan, colspan };\r\n        },\r\n        // cell click\r\n        cellClick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // dblclick\r\n        cellDblclick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // contextmenu\r\n        cellContextmenu(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseenter\r\n        cellMouseenter(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseleave\r\n        cellMouseleave(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousemove\r\n        cellMousemove(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseover\r\n        cellMouseover(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousedown\r\n        cellMousedown(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseup\r\n        cellMouseup(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n    },\r\n    render(h) {\r\n        const { column, rowData, rowIndex, eventCustomOption } = this;\r\n\r\n        const { rowspan, colspan } = this.getCellSpan();\r\n        if (!rowspan || !colspan) {\r\n            return null;\r\n        }\r\n\r\n        // custom on cell event\r\n        let customEvents = {};\r\n        if (eventCustomOption) {\r\n            const { footerCellEvents } = eventCustomOption;\r\n            customEvents = footerCellEvents\r\n                ? footerCellEvents({ row: rowData, column, rowIndex })\r\n                : {};\r\n        }\r\n\r\n        const {\r\n            click,\r\n            dblclick,\r\n            contextmenu,\r\n            mouseenter,\r\n            mouseleave,\r\n            mousemove,\r\n            mouseover,\r\n            mousedown,\r\n            mouseup,\r\n        } = customEvents;\r\n\r\n        const events = {\r\n            click: (e) => {\r\n                this.cellClick(e, click);\r\n            },\r\n            dblclick: (e) => {\r\n                this.cellDblclick(e, dblclick);\r\n            },\r\n            contextmenu: (e) => {\r\n                this.cellContextmenu(e, contextmenu);\r\n            },\r\n            mouseenter: (e) => {\r\n                this.cellMouseenter(e, mouseenter);\r\n            },\r\n            mouseleave: (e) => {\r\n                this.cellMouseleave(e, mouseleave);\r\n            },\r\n            mousemove: (e) => {\r\n                this.cellMousemove(e, mousemove);\r\n            },\r\n            mouseover: (e) => {\r\n                this.cellMouseover(e, mouseover);\r\n            },\r\n            mousedown: (e) => {\r\n                this.cellMousedown(e, mousedown);\r\n            },\r\n            mouseup: (e) => {\r\n                this.cellMouseup(e, mouseup);\r\n            },\r\n        };\r\n\r\n        // td props\r\n        const tdProps = {\r\n            class: this.getBodyTdClass(column),\r\n            style: this.getBodyTdStyle(column),\r\n            attrs: {\r\n                rowspan,\r\n                colspan,\r\n            },\r\n            on: events,\r\n        };\r\n\r\n        return (\r\n            <td {...tdProps}>\r\n                {/* other cell content */}\r\n                {this.getRenderContent(h)}\r\n            </td>\r\n        );\r\n    },\r\n};\r\n","import FooterTd from \"./footer-td\";\r\nimport { clsName } from \"../util\";\r\nimport { COMPS_NAME, EMIT_EVENTS, COMPS_CUSTOM_ATTRS } from \"../util/constant\";\r\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_BODY_TR,\r\n    mixins: [emitter],\r\n    props: {\r\n        rowData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        rowIndex: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection key data\r\n        cellSelectionData: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // footer rows\r\n        footerRows: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        // fixed footer\r\n        fixedFooter: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // current row key\r\n        currentRowKey() {\r\n            const { rowKeyFieldName } = this;\r\n            return rowKeyFieldName ? this.rowData[rowKeyFieldName] : null;\r\n        },\r\n        // tr class\r\n        trClass() {\r\n            let result = null;\r\n\r\n            result = {\r\n                [clsName(\"footer-tr\")]: true,\r\n            };\r\n\r\n            return result;\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // tr height change\r\n        trHeightChange({ height }) {\r\n            /*  this.$emit(EMIT_EVENTS.FOOTER_ROW_HEIGHT_CHANGE, {\r\n                rowIndex: this.rowIndex,\r\n                height: height\r\n            }); */\r\n\r\n            this.dispatch(\r\n                COMPS_NAME.VE_TABLE,\r\n                EMIT_EVENTS.FOOTER_ROW_HEIGHT_CHANGE,\r\n                {\r\n                    rowIndex: this.rowIndex,\r\n                    height: height,\r\n                },\r\n            );\r\n        },\r\n        // click\r\n        rowClick(e, fn) {\r\n            fn && fn(e);\r\n\r\n            /*   this.dispatch(COMPS_NAME.VE_TABLE_BODY, EMIT_EVENTS.BODY_TR_CLICK, {\r\n                rowData,\r\n                rowIndex\r\n            }); */\r\n        },\r\n        // dblclick\r\n        rowDblclick(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // contextmenu\r\n        rowContextmenu(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseenter\r\n        rowMouseenter(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseleave\r\n        rowMouseleave(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousemove\r\n        rowMousemove(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseover\r\n        rowMouseover(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mousedown\r\n        rowMousedown(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n        // mouseup\r\n        rowMouseup(e, fn) {\r\n            fn && fn(e);\r\n        },\r\n    },\r\n\r\n    render() {\r\n        const {\r\n            colgroups,\r\n            rowKeyFieldName,\r\n            rowIndex,\r\n            rowData,\r\n            cellStyleOption,\r\n            eventCustomOption,\r\n        } = this;\r\n\r\n        // get td content\r\n        const getTdContent = () => {\r\n            return colgroups.map((column) => {\r\n                const tdProps = {\r\n                    key: column.key,\r\n                    props: {\r\n                        rowIndex,\r\n                        rowData,\r\n                        column,\r\n                        colgroups,\r\n                        rowKeyFieldName,\r\n                        cellStyleOption,\r\n                        cellSelectionData: this.cellSelectionData,\r\n                        footerRows: this.footerRows,\r\n                        fixedFooter: this.fixedFooter,\r\n                        cellSpanOption: this.cellSpanOption,\r\n                        eventCustomOption: this.eventCustomOption,\r\n                    },\r\n                };\r\n                return <FooterTd {...tdProps} />;\r\n            });\r\n        };\r\n\r\n        // custom on row event\r\n        let customEvents = {};\r\n        if (eventCustomOption) {\r\n            const { footerRowEvents } = eventCustomOption;\r\n            customEvents = footerRowEvents\r\n                ? footerRowEvents({ row: rowData, rowIndex })\r\n                : {};\r\n        }\r\n\r\n        const {\r\n            click,\r\n            dblclick,\r\n            contextmenu,\r\n            mouseenter,\r\n            mouseleave,\r\n            mousemove,\r\n            mouseover,\r\n            mousedown,\r\n            mouseup,\r\n        } = customEvents;\r\n\r\n        const events = {\r\n            click: (e) => {\r\n                this.rowClick(e, click);\r\n            },\r\n            dblclick: (e) => {\r\n                this.rowDblclick(e, dblclick);\r\n            },\r\n            contextmenu: (e) => {\r\n                this.rowContextmenu(e, contextmenu);\r\n            },\r\n            mouseenter: (e) => {\r\n                this.rowMouseenter(e, mouseenter);\r\n            },\r\n            mouseleave: (e) => {\r\n                this.rowMouseleave(e, mouseleave);\r\n            },\r\n            mousemove: (e) => {\r\n                this.rowMousemove(e, mousemove);\r\n            },\r\n            mouseover: (e) => {\r\n                this.rowMouseover(e, mouseover);\r\n            },\r\n            mousedown: (e) => {\r\n                this.rowMousedown(e, mousedown);\r\n            },\r\n            mouseup: (e) => {\r\n                this.rowMouseup(e, mouseup);\r\n            },\r\n        };\r\n\r\n        const props = {\r\n            class: this.trClass,\r\n            props: {\r\n                tagName: \"tr\",\r\n            },\r\n            attrs: {\r\n                [COMPS_CUSTOM_ATTRS.BODY_ROW_KEY]: this.currentRowKey,\r\n            },\r\n            nativeOn: events,\r\n            on: {\r\n                \"on-dom-resize-change\": this.trHeightChange,\r\n            },\r\n        };\r\n\r\n        return (\r\n            <VueDomResizeObserver {...props}>\r\n                {getTdContent()}\r\n            </VueDomResizeObserver>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"../util\";\r\nimport FooterTr from \"./footer-tr\";\r\nimport { COMPS_NAME } from \"../util/constant\";\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_FOOTER,\r\n    props: {\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        footerData: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        hasFixedColumn: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        allRowKeys: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // footer rows\r\n        footerRows: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        // fixed footer\r\n        fixedFooter: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    computed: {\r\n        // footer class\r\n        footerClass() {\r\n            return {\r\n                [clsName(\"fixed-footer\")]: this.fixedFooter,\r\n            };\r\n        },\r\n    },\r\n    methods: {\r\n        // get tr key\r\n        getTrKey({ rowData, rowIndex }) {\r\n            let result = rowIndex;\r\n\r\n            const { rowKeyFieldName } = this;\r\n            if (rowKeyFieldName) {\r\n                result = rowData[rowKeyFieldName];\r\n            }\r\n            return result;\r\n        },\r\n    },\r\n    render() {\r\n        const { colgroups, rowKeyFieldName, cellStyleOption } = this;\r\n\r\n        return (\r\n            <tfoot class={this.footerClass}>\r\n                {this.footerData.map((rowData, rowIndex) => {\r\n                    const trProps = {\r\n                        key: this.getTrKey({ rowData, rowIndex }),\r\n                        props: {\r\n                            rowIndex,\r\n                            rowData,\r\n                            colgroups,\r\n                            rowKeyFieldName,\r\n                            cellStyleOption,\r\n                            footerRows: this.footerRows,\r\n                            fixedFooter: this.fixedFooter,\r\n                            cellSpanOption: this.cellSpanOption,\r\n                            eventCustomOption: this.eventCustomOption,\r\n                        },\r\n                    };\r\n\r\n                    return <FooterTr {...trProps} />;\r\n                })}\r\n            </tfoot>\r\n        );\r\n    },\r\n};\r\n","// instance methods\r\nexport const INSTANCE_METHODS = {\r\n    TEXTAREA_ADD_NEW_LINE: \"textareaAddNewLine\",\r\n    TEXTAREA_SELECT: \"textareaSelect\",\r\n};\r\n","/* \nelement focus\n*/\nexport default {\n    bind: function (el, { value }, vnode) {\n        if (value) {\n            const { focus, select } = value;\n\n            vnode.context.$nextTick(() => {\n                if (focus) {\n                    el.focus();\n                }\n\n                if (select) {\n                    el.select();\n                }\n            });\n        }\n    },\n    update: function (el, { value }) {\n        if (value) {\n            const { focus } = value;\n            if (focus) {\n                el.focus();\n            }\n        }\n    },\n};\n","/**\r\n * autoResize - resizes a DOM element to the width and height of another DOM element\r\n *\r\n * Copyright 2014, Marcin Warpechowski\r\n * Licensed under the MIT license\r\n * refer to https://github.com/handsontable/handsontable/blob/HEAD/handsontable/src/3rdparty/autoResize/index.js\r\n */\r\n\r\nexport function autoResize() {\r\n    var defaults = {\r\n            minHeight: 200,\r\n            maxHeight: 300,\r\n            minWidth: 100,\r\n            maxWidth: 300,\r\n            // text padding\r\n            paddingWidth: 16,\r\n        },\r\n        el,\r\n        body = document.body,\r\n        text = document.createTextNode(\"\"),\r\n        span = document.createElement(\"SPAN\"),\r\n        observe = function (element, event, handler) {\r\n            element.addEventListener(event, handler, false);\r\n        },\r\n        unObserve = function (element, event, handler) {\r\n            element.removeEventListener(event, handler, false);\r\n        },\r\n        resize = function (newChar) {\r\n            var width, scrollHeight;\r\n\r\n            if (!newChar) {\r\n                newChar = \"\";\r\n            } else if (!/^[a-zA-Z \\.,\\\\\\/\\|0-9]$/.test(newChar)) {\r\n                newChar = \".\";\r\n            }\r\n\r\n            if (text.textContent !== void 0) {\r\n                text.textContent = el.value + newChar;\r\n            } else {\r\n                text.data = el.value + newChar; //IE8\r\n            }\r\n            span.style.fontSize = getComputedStyle(el).fontSize;\r\n            span.style.fontFamily = getComputedStyle(el).fontFamily;\r\n            span.style.whiteSpace = \"pre\";\r\n\r\n            body.appendChild(span);\r\n            width = span.clientWidth + defaults.paddingWidth;\r\n            body.removeChild(span);\r\n\r\n            el.style.height = defaults.minHeight + \"px\";\r\n\r\n            if (defaults.minWidth > width) {\r\n                el.style.width = defaults.minWidth + \"px\";\r\n            } else if (width > defaults.maxWidth) {\r\n                el.style.width = defaults.maxWidth + \"px\";\r\n            } else {\r\n                el.style.width = width + \"px\";\r\n            }\r\n            scrollHeight = el.scrollHeight ? el.scrollHeight - 1 : 0;\r\n\r\n            if (defaults.minHeight > scrollHeight) {\r\n                el.style.height = defaults.minHeight + \"px\";\r\n            } else if (defaults.maxHeight < scrollHeight) {\r\n                el.style.height = defaults.maxHeight + \"px\";\r\n                el.style.overflowY = \"visible\";\r\n            } else {\r\n                el.style.height = scrollHeight + \"px\";\r\n            }\r\n        },\r\n        delayedResize = function () {\r\n            window.setTimeout(resize, 0);\r\n        },\r\n        extendDefaults = function (config) {\r\n            if (config && config.minHeight) {\r\n                if (config.minHeight == \"inherit\") {\r\n                    defaults.minHeight = el.clientHeight;\r\n                } else {\r\n                    var minHeight = parseInt(config.minHeight);\r\n                    if (!isNaN(minHeight)) {\r\n                        defaults.minHeight = minHeight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (config && config.maxHeight) {\r\n                if (config.maxHeight == \"inherit\") {\r\n                    defaults.maxHeight = el.clientHeight;\r\n                } else {\r\n                    var maxHeight = parseInt(config.maxHeight);\r\n                    if (!isNaN(maxHeight)) {\r\n                        defaults.maxHeight = maxHeight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (config && config.minWidth) {\r\n                if (config.minWidth == \"inherit\") {\r\n                    defaults.minWidth = el.clientWidth;\r\n                } else {\r\n                    var minWidth = parseInt(config.minWidth);\r\n                    if (!isNaN(minWidth)) {\r\n                        defaults.minWidth = minWidth;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (config && config.maxWidth) {\r\n                if (config.maxWidth == \"inherit\") {\r\n                    defaults.maxWidth = el.clientWidth;\r\n                } else {\r\n                    var maxWidth = parseInt(config.maxWidth);\r\n                    if (!isNaN(maxWidth)) {\r\n                        defaults.maxWidth = maxWidth;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!span.firstChild) {\r\n                span.className = \"autoResize\";\r\n                span.style.display = \"inline-block\";\r\n                span.appendChild(text);\r\n            }\r\n        },\r\n        init = function (el_, config, doObserve) {\r\n            el = el_;\r\n            extendDefaults(config);\r\n\r\n            if (el.nodeName == \"TEXTAREA\") {\r\n                el.style.resize = \"none\";\r\n                el.style.overflowY = \"\";\r\n                el.style.height = defaults.minHeight + \"px\";\r\n                el.style.minWidth = defaults.minWidth + \"px\";\r\n                el.style.maxWidth = defaults.maxWidth + \"px\";\r\n                el.style.overflowY = \"hidden\";\r\n            }\r\n\r\n            if (doObserve) {\r\n                observe(el, \"change\", resize);\r\n                observe(el, \"cut\", delayedResize);\r\n                observe(el, \"paste\", delayedResize);\r\n                observe(el, \"drop\", delayedResize);\r\n                observe(el, \"keydown\", delayedResize);\r\n                observe(el, \"focus\", resize);\r\n                observe(el, \"compositionstart\", delayedResize);\r\n                observe(el, \"compositionupdate\", delayedResize);\r\n                observe(el, \"compositionend\", delayedResize);\r\n            }\r\n\r\n            resize();\r\n        };\r\n\r\n    function getComputedStyle(element) {\r\n        return (\r\n            element.currentStyle ||\r\n            document.defaultView.getComputedStyle(element)\r\n        );\r\n    }\r\n\r\n    return {\r\n        init: function (el_, config, doObserve) {\r\n            init(el_, config, doObserve);\r\n        },\r\n        unObserve: function () {\r\n            if (!el) {\r\n                return false;\r\n            }\r\n            unObserve(el, \"change\", resize);\r\n            unObserve(el, \"cut\", delayedResize);\r\n            unObserve(el, \"paste\", delayedResize);\r\n            unObserve(el, \"drop\", delayedResize);\r\n            unObserve(el, \"keydown\", delayedResize);\r\n            unObserve(el, \"focus\", resize);\r\n            unObserve(el, \"compositionstart\", delayedResize);\r\n            unObserve(el, \"compositionupdate\", delayedResize);\r\n            unObserve(el, \"compositionend\", delayedResize);\r\n        },\r\n        resize: resize,\r\n    };\r\n}\r\n","import { clsName, getFixedTotalWidthByColumnKey } from \"../util\";\r\nimport { INSTANCE_METHODS } from \"./constant\";\r\nimport { COMPS_NAME, EMIT_EVENTS, HOOKS_NAME } from \"../util/constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nimport focus from \"../../../src/directives/focus.js\";\r\nimport { autoResize } from \"../../../src/utils/auto-resize\";\r\nimport { isEmptyValue } from \"../../../src/utils/index.js\";\r\nimport { getCaretPosition, setCaretPosition } from \"../../../src/utils/dom\";\r\nimport { debounce } from \"lodash\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_EDIT_INPUT,\r\n    directives: {\r\n        focus: focus,\r\n    },\r\n    mixins: [emitter],\r\n    props: {\r\n        parentRendered: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        hooks: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        // start input value every time\r\n        inputStartValue: {\r\n            type: [String, Number],\r\n            required: true,\r\n        },\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // table data\r\n        tableData: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        // cell selection option\r\n        cellSelectionData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        // editing cell\r\n        editingCell: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        // is editing cell\r\n        isCellEditing: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        // has horizontal scroll bar\r\n        hasXScrollBar: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        // has vertical scroll bar\r\n        hasYScrollBar: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        // has right fixed column\r\n        hasRightFixedColumn: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        scrollBarWidth: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            textareaInputRef: \"textareaInputRef\",\r\n            // raw cell value\r\n            rawCellValue: \"\",\r\n            // display textarea\r\n            displayTextarea: false,\r\n            // virtual scroll overflowViewport\r\n            overflowViewport: false,\r\n            // textarea element rect\r\n            textareaRect: {\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            // table element\r\n            tableEl: null,\r\n            // cell element\r\n            cellEl: null,\r\n            // auto resize\r\n            autoResize: null,\r\n            // is edit cell focus\r\n            isEditCellFocus: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // current column\r\n        currentColumn() {\r\n            let result = null;\r\n\r\n            const { colgroups, cellSelectionData } = this;\r\n\r\n            const { currentCell } = cellSelectionData;\r\n\r\n            if (\r\n                !isEmptyValue(currentCell.rowKey) &&\r\n                !isEmptyValue(currentCell.colKey)\r\n            ) {\r\n                result = colgroups.find((x) => x.key === currentCell.colKey);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // container class\r\n        containerClass() {\r\n            let result = null;\r\n\r\n            const { displayTextarea, overflowViewport } = this;\r\n\r\n            result = {\r\n                [clsName(\"edit-input-container\")]: true,\r\n                [clsName(\"edit-input-container-show\")]:\r\n                    displayTextarea && !overflowViewport,\r\n            };\r\n\r\n            return result;\r\n        },\r\n\r\n        // container style\r\n        containerStyle() {\r\n            let result = {};\r\n\r\n            const {\r\n                displayTextarea,\r\n                overflowViewport,\r\n                textareaRect,\r\n                currentColumn: column,\r\n            } = this;\r\n\r\n            const { top, left } = textareaRect;\r\n\r\n            if (displayTextarea && !overflowViewport) {\r\n                result = {\r\n                    top: top + \"px\",\r\n                    left: left + \"px\",\r\n                    height: null,\r\n                    // because @ve-fixed-body-cell-index: 10;\r\n                    \"z-index\": column.fixed ? 10 : 0,\r\n                    opacity: 1,\r\n                };\r\n            } else {\r\n                result = {\r\n                    top: top + \"px\",\r\n                    left: left + \"px\",\r\n                    height: \"1px\",\r\n                    \"z-index\": -1,\r\n                    opacity: 0,\r\n                };\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // textarea class\r\n        textareaClass() {\r\n            let result = null;\r\n\r\n            result = {\r\n                [clsName(\"edit-input\")]: true,\r\n            };\r\n\r\n            return result;\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        parentRendered: {\r\n            handler: function (val) {\r\n                if (val) {\r\n                    // fixed #471\r\n                    this.setTableEl();\r\n\r\n                    // add table container scroll hook\r\n                    this.hooks.addHook(\r\n                        HOOKS_NAME.TABLE_CONTAINER_SCROLL,\r\n                        () => {\r\n                            if (this.displayTextarea) {\r\n                                if (!this.cellEl) {\r\n                                    this.setCellEl();\r\n                                }\r\n                            }\r\n                            this.debounceSetCellEl();\r\n                            this.setTextareaPosition();\r\n                            this.debounceSetTextareaPosition();\r\n                        },\r\n                    );\r\n                    // add table size change hook\r\n                    this.hooks.addHook(HOOKS_NAME.TABLE_SIZE_CHANGE, () => {\r\n                        this.setTextareaPosition();\r\n                    });\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        // cell selection key data\r\n        \"cellSelectionData.currentCell\": {\r\n            handler: function (val) {\r\n                this.isEditCellFocus = false;\r\n\r\n                const { rowKey, colKey } = val;\r\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                    this.setCellEl();\r\n                    // wait for selection cell rendered\r\n                    this.$nextTick(() => {\r\n                        this.setTextareaPosition();\r\n                        setTimeout(() => {\r\n                            this.isEditCellFocus = true;\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // watch normal end cell\r\n        \"cellSelectionData.normalEndCell\": {\r\n            handler: function (val) {\r\n                /*\r\n                trigger editor(textarea) element select\r\n                解决通过点击的区域选择，无法复制的问题\r\n                */\r\n                if (!isEmptyValue(val.colKey)) {\r\n                    this[INSTANCE_METHODS.TEXTAREA_SELECT]();\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // is editing cell\r\n        isCellEditing: {\r\n            handler: function (val) {\r\n                if (val) {\r\n                    this.showTextarea();\r\n                } else {\r\n                    this.hideTextarea();\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        inputStartValue: {\r\n            handler: function () {\r\n                this.setRawCellValue();\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // set table element\r\n        setTableEl() {\r\n            this.$nextTick(() => {\r\n                const tableEl = this.$el.previousElementSibling;\r\n                this.tableEl = tableEl;\r\n            });\r\n        },\r\n\r\n        // set cell element\r\n        setCellEl() {\r\n            const { cellSelectionData, tableEl } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n\r\n            if (tableEl) {\r\n                const cellEl = tableEl.querySelector(\r\n                    `tbody.ve-table-body tr[row-key=\"${rowKey}\"] td[col-key=\"${colKey}\"]`,\r\n                );\r\n\r\n                if (cellEl) {\r\n                    this.cellEl = cellEl;\r\n                    this.overflowViewport = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        // set textarea position\r\n        setTextareaPosition() {\r\n            const {\r\n                hasXScrollBar,\r\n                hasYScrollBar,\r\n                scrollBarWidth,\r\n                colgroups,\r\n                hasRightFixedColumn,\r\n                currentColumn: column,\r\n                cellEl,\r\n                tableEl,\r\n            } = this;\r\n\r\n            if (cellEl && tableEl) {\r\n                const {\r\n                    left: tableLeft,\r\n                    top: tableTop,\r\n                    right: tableRight,\r\n                    bottom: tableBottom,\r\n                } = tableEl.getBoundingClientRect();\r\n\r\n                const {\r\n                    left: cellLeft,\r\n                    top: cellTop,\r\n                    height: cellHeight,\r\n                    width: cellWidth,\r\n                    right: cellRight,\r\n                    bottom: cellBottom,\r\n                } = cellEl.getBoundingClientRect();\r\n\r\n                if (cellHeight && cellWidth) {\r\n                    let maxHeight = cellHeight + tableBottom - cellBottom;\r\n                    let maxWidth = cellWidth + tableRight - cellRight;\r\n\r\n                    // has horizontal scroll bar\r\n                    if (hasXScrollBar) {\r\n                        maxHeight -= scrollBarWidth;\r\n                    }\r\n\r\n                    // has vertical scroll bar\r\n                    if (hasYScrollBar) {\r\n                        maxWidth -= scrollBarWidth;\r\n                    }\r\n\r\n                    /* \r\n                    If the right fixed column is included, the max width of the textarea needs to be subtracted from the sum of the right fixed columns\r\n                    如果包含右固定列，编辑框最大宽度需要去减去右固定列之和的宽度\r\n                    */\r\n                    if (hasRightFixedColumn) {\r\n                        if (column && !column.fixed) {\r\n                            const rightFixedTotalWidth =\r\n                                getFixedTotalWidthByColumnKey({\r\n                                    colgroups,\r\n                                    colKey: column.key,\r\n                                    fixed: \"right\",\r\n                                });\r\n                            if (rightFixedTotalWidth) {\r\n                                maxWidth -= rightFixedTotalWidth;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.autoResize.init(\r\n                        this.$refs[this.textareaInputRef],\r\n                        {\r\n                            minHeight: Math.min(cellHeight, maxHeight),\r\n                            maxHeight: maxHeight, // TEXTAREA should never be higher than visible part of the viewport (should not cover the scrollbar)\r\n                            minWidth: Math.min(cellWidth, maxWidth),\r\n                            maxWidth: maxWidth, // TEXTAREA should never be wider than visible part of the viewport (should not cover the scrollbar)\r\n                        },\r\n                        true, // observe textarea change\\cut\\paste etc.\r\n                    );\r\n\r\n                    this.textareaRect = {\r\n                        left: cellLeft - tableLeft,\r\n                        top: cellTop - tableTop,\r\n                    };\r\n                } else {\r\n                    /*\r\n                    存在以下可能：\r\n                    1、虚拟滚动超出viewport\r\n                    2、单元格被删除（通过右键菜单等方式）\r\n                    */\r\n\r\n                    // fixed #477\r\n                    this.textareaRect = {\r\n                        left: 0,\r\n                        top: 0,\r\n                    };\r\n                    this.cellEl = null;\r\n                    this.overflowViewport = true;\r\n                }\r\n            }\r\n        },\r\n\r\n        // show textarea\r\n        showTextarea() {\r\n            this.setRawCellValue();\r\n            this.displayTextarea = true;\r\n        },\r\n\r\n        // hide textarea\r\n        hideTextarea() {\r\n            this.displayTextarea = false;\r\n            this.textareaUnObserve();\r\n        },\r\n\r\n        // textarea unObserve\r\n        textareaUnObserve() {\r\n            if (this.autoResize) {\r\n                this.autoResize.unObserve();\r\n            }\r\n        },\r\n\r\n        // set raw cell value\r\n        setRawCellValue() {\r\n            this.rawCellValue = this.inputStartValue;\r\n        },\r\n\r\n        // textarea value change\r\n        textareaValueChange(val) {\r\n            this.$emit(EMIT_EVENTS.EDIT_INPUT_VALUE_CHANGE, val);\r\n        },\r\n\r\n        // textarea select\r\n        [INSTANCE_METHODS.TEXTAREA_SELECT]() {\r\n            const textareaInputEl = this.$refs[this.textareaInputRef];\r\n            if (textareaInputEl) {\r\n                textareaInputEl.select();\r\n            }\r\n        },\r\n\r\n        // textarea add new line\r\n        [INSTANCE_METHODS.TEXTAREA_ADD_NEW_LINE]() {\r\n            const { isCellEditing, editingCell } = this;\r\n\r\n            if (isCellEditing) {\r\n                const textareaInputEl = this.$refs[this.textareaInputRef];\r\n\r\n                const caretPosition = getCaretPosition(textareaInputEl);\r\n\r\n                let value = editingCell.row[editingCell.colKey];\r\n                // solve error of number slice method\r\n                value += \"\";\r\n\r\n                const newValue = `${value.slice(\r\n                    0,\r\n                    caretPosition,\r\n                )}\\n${value.slice(caretPosition)}`;\r\n\r\n                // 直接更新 textarea 值\r\n                textareaInputEl.value = newValue;\r\n\r\n                // 手动赋值不会触发textarea 文本变化事件,需要手动更新 editingCell 值\r\n                this.textareaValueChange(newValue);\r\n\r\n                setCaretPosition(textareaInputEl, caretPosition + 1);\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        // debounce set textarea position\r\n        this.debounceSetTextareaPosition = debounce(\r\n            this.setTextareaPosition,\r\n            210,\r\n        );\r\n        // debounce set cell el\r\n        this.debounceSetCellEl = debounce(() => {\r\n            if (this.displayTextarea) {\r\n                if (!this.cellEl) {\r\n                    this.setCellEl();\r\n                }\r\n            }\r\n        }, 200);\r\n    },\r\n    mounted() {\r\n        this.autoResize = autoResize();\r\n    },\r\n    destroyed() {\r\n        this.textareaUnObserve();\r\n    },\r\n    render() {\r\n        const {\r\n            containerClass,\r\n            containerStyle,\r\n            textareaClass,\r\n            rawCellValue,\r\n            isCellEditing,\r\n            isEditCellFocus,\r\n        } = this;\r\n\r\n        const containerProps = {\r\n            style: containerStyle,\r\n            class: containerClass,\r\n        };\r\n\r\n        const textareaProps = {\r\n            ref: this.textareaInputRef,\r\n            class: textareaClass,\r\n            directives: [\r\n                {\r\n                    name: \"focus\",\r\n                    value: {\r\n                        focus: isEditCellFocus,\r\n                    },\r\n                },\r\n            ],\r\n            domProps: { value: rawCellValue },\r\n            attrs: {\r\n                tabindex: -1,\r\n            },\r\n            on: {\r\n                input: (e) => {\r\n                    if (isCellEditing) {\r\n                        this.textareaValueChange(e.target.value);\r\n                        this.rawCellValue = e.target.value;\r\n                    }\r\n                },\r\n                click: () => {\r\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_CLICK);\r\n                },\r\n                copy: (e) => {\r\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_COPY, e);\r\n                },\r\n                paste: (e) => {\r\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_PASTE, e);\r\n                },\r\n                cut: (e) => {\r\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_CUT, e);\r\n                },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div {...containerProps}>\r\n                <textarea {...textareaProps}></textarea>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","// instance methods\r\nexport const INSTANCE_METHODS = {\r\n    CLEAR_CURRENT_CELL_RECT: \"clearCurrentCellRect\",\r\n    CLEAR_NORMAL_END_CELL_RECT: \"clearNormalEndCellRect\",\r\n};\r\n","import {\r\n    clsName,\r\n    isLastColumnByColKey,\r\n    isLastRowByRowKey,\r\n    getColKeysByRangeColKeys,\r\n    isExistGivenFixedColKey,\r\n    isExistNotFixedColKey,\r\n    getLeftmostColKey,\r\n    getRightmostColKey,\r\n    getColKeysByFixedTypeWithinColKeys,\r\n    getTotalWidthByColKeys,\r\n    getPreviewColKey,\r\n    getNextColKey,\r\n} from \"../util\";\r\nimport {\r\n    COMPS_NAME,\r\n    EMIT_EVENTS,\r\n    HOOKS_NAME,\r\n    AUTOFILLING_DIRECTION,\r\n    CURRENT_CELL_SELECTION_TYPES,\r\n    COLUMN_FIXED_TYPE,\r\n} from \"../util/constant\";\r\nimport { INSTANCE_METHODS } from \"./constant\";\r\nimport emitter from \"../../../src/mixins/emitter\";\r\nimport { isEmptyValue, isBoolean } from \"../../../src/utils/index.js\";\r\nimport { debounce } from \"lodash\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_SELECTION,\r\n    mixins: [emitter],\r\n    props: {\r\n        tableEl: {\r\n            type: HTMLTableElement,\r\n            default: null,\r\n        },\r\n        allRowKeys: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        parentRendered: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        hooks: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        // cell autofill option\r\n        cellAutofillOption: {\r\n            type: [Object, Boolean],\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        cellSelectionData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        cellSelectionRangeData: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        isAutofillStarting: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        currentCellSelectionType: {\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        // is scrolling\r\n        showVirtualScrollingPlaceholder: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        isVirtualScroll: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        virtualScrollVisibleIndexs: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        isCellEditing: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            // current cell\r\n            currentCellEl: null,\r\n            normalEndCellEl: null,\r\n            autoFillEndCellEl: null,\r\n            // cell selection rect\r\n            cellSelectionRect: {\r\n                // current cell element rect\r\n                currentCellRect: {\r\n                    left: 0,\r\n                    top: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                },\r\n                // normal end cell element rect\r\n                normalEndCellRect: {\r\n                    left: 0,\r\n                    top: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                },\r\n                // auto fill end cell element rect\r\n                autoFillEndCellRect: {\r\n                    left: 0,\r\n                    top: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                },\r\n            },\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        // selection borders visibility\r\n        selectionBordersVisibility() {\r\n            let result = true;\r\n            if (this.isVirtualScroll) {\r\n                const {\r\n                    showVirtualScrollingPlaceholder,\r\n                    cellSelectionData,\r\n                    virtualScrollVisibleIndexs,\r\n                    currentCellSelectionType,\r\n                } = this;\r\n\r\n                if (showVirtualScrollingPlaceholder) {\r\n                    result = false;\r\n                } else {\r\n                    const { currentCell, normalEndCell } = cellSelectionData;\r\n\r\n                    if (\r\n                        currentCellSelectionType ===\r\n                        CURRENT_CELL_SELECTION_TYPES.SINGLE\r\n                    ) {\r\n                        if (\r\n                            currentCell.rowIndex <\r\n                                virtualScrollVisibleIndexs.start ||\r\n                            currentCell.rowIndex >\r\n                                virtualScrollVisibleIndexs.end\r\n                        ) {\r\n                            result = false;\r\n                        }\r\n                    }\r\n\r\n                    if (\r\n                        currentCellSelectionType ===\r\n                        CURRENT_CELL_SELECTION_TYPES.RANGE\r\n                    ) {\r\n                        if (\r\n                            (currentCell.rowIndex <\r\n                                virtualScrollVisibleIndexs.start &&\r\n                                normalEndCell.rowIndex <\r\n                                    virtualScrollVisibleIndexs.start) ||\r\n                            (currentCell.rowIndex >\r\n                                virtualScrollVisibleIndexs.end &&\r\n                                normalEndCell.rowIndex >\r\n                                    virtualScrollVisibleIndexs.end)\r\n                        ) {\r\n                            result = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // show corner\r\n        showCorner() {\r\n            let result = true;\r\n            const { cellAutofillOption } = this;\r\n            if (cellAutofillOption) {\r\n                const { directionX, directionY } = this.cellAutofillOption;\r\n                if (\r\n                    isBoolean(directionY) &&\r\n                    !directionY &&\r\n                    isBoolean(directionX) &&\r\n                    !directionX\r\n                ) {\r\n                    result = false;\r\n                }\r\n            } else {\r\n                result = false;\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // corner cell info\r\n        cornerCellInfo() {\r\n            const { allRowKeys, colgroups, cellSelectionRangeData } = this;\r\n\r\n            const { rightColKey, bottomRowKey } = cellSelectionRangeData;\r\n\r\n            let isLastColumn = false;\r\n            if (isLastColumnByColKey(rightColKey, colgroups)) {\r\n                isLastColumn = true;\r\n            } else {\r\n                const index = colgroups.findIndex((x) => x.key === rightColKey);\r\n                // right col is right fixed and current col is not right fixed\r\n                if (\r\n                    colgroups[index + 1].fixed === COLUMN_FIXED_TYPE.RIGHT &&\r\n                    colgroups[index].fixed !== COLUMN_FIXED_TYPE.RIGHT\r\n                ) {\r\n                    isLastColumn = true;\r\n                }\r\n            }\r\n\r\n            let isLastRow = false;\r\n            if (isLastRowByRowKey(bottomRowKey, allRowKeys)) {\r\n                isLastRow = true;\r\n            }\r\n\r\n            return {\r\n                isLastColumn,\r\n                isLastRow,\r\n            };\r\n        },\r\n        // is first selection row\r\n        isFirstSelectionRow() {\r\n            const { allRowKeys, cellSelectionRangeData } = this;\r\n            return allRowKeys[0] === cellSelectionRangeData.topRowKey;\r\n        },\r\n        // is first selection column\r\n        isFirstSelectionCol() {\r\n            const { colgroups, cellSelectionRangeData } = this;\r\n            return colgroups[0].key === cellSelectionRangeData.leftColKey;\r\n        },\r\n        // is first not fixed selection column\r\n        isFirstNotFixedSelectionCol() {\r\n            let result = false;\r\n\r\n            const { colgroups, cellSelectionRangeData } = this;\r\n\r\n            if (colgroups.find((x) => x.fixed === \"left\")) {\r\n                const col = colgroups.find((x) => !x.fixed);\r\n                if (col && col.field === cellSelectionRangeData.leftColKey) {\r\n                    result = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        parentRendered: {\r\n            handler: function (val) {\r\n                if (val) {\r\n                    // add table container scroll hook\r\n                    this.hooks.addHook(\r\n                        HOOKS_NAME.TABLE_CONTAINER_SCROLL,\r\n                        () => {\r\n                            this.setCellEls();\r\n                            this.debounceSetCellEls();\r\n\r\n                            this.resetCellPositions();\r\n                            // debounce reset cell positions\r\n                            this.debounceResetCellPositions();\r\n                        },\r\n                    );\r\n                    // add table size change hook\r\n                    this.hooks.addHook(HOOKS_NAME.TABLE_SIZE_CHANGE, () => {\r\n                        // debounce reset cell positions\r\n                        this.debounceResetCellPositions();\r\n                    });\r\n                    // add table td width change hook\r\n                    this.hooks.addHook(\r\n                        HOOKS_NAME.TABLE_CELL_WIDTH_CHANGE,\r\n                        () => {\r\n                            this.$nextTick(() => {\r\n                                this.resetCellPositions();\r\n                            });\r\n                        },\r\n                    );\r\n\r\n                    // add clipboard cell value change hook\r\n                    this.hooks.addHook(\r\n                        HOOKS_NAME.CLIPBOARD_CELL_VALUE_CHANGE,\r\n                        () => {\r\n                            this.$nextTick(() => {\r\n                                this.resetCellPositions();\r\n                            });\r\n                        },\r\n                    );\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        // watch current cell\r\n        \"cellSelectionData.currentCell\": {\r\n            handler: function (val) {\r\n                const { rowKey, colKey } = val;\r\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                    this.setCurrentCellEl();\r\n                    this.setSelectionPositions({ type: \"currentCell\" });\r\n                } else {\r\n                    this[INSTANCE_METHODS.CLEAR_CURRENT_CELL_RECT]();\r\n                }\r\n                this.setCellSelectionRangeData();\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // watch normal end cell\r\n        \"cellSelectionData.normalEndCell\": {\r\n            handler: function (val) {\r\n                const { rowKey, colKey } = val;\r\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                    // set normal end cell el\r\n                    this.setNormalEndCellEl();\r\n                    this.setSelectionPositions({ type: \"normalEndCell\" });\r\n                } else {\r\n                    this[INSTANCE_METHODS.CLEAR_NORMAL_END_CELL_RECT]();\r\n                }\r\n                this.setCellSelectionRangeData();\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // watch autofill cell\r\n        \"cellSelectionData.autoFillEndCell\": {\r\n            handler: function (val) {\r\n                const { rowKey, colKey } = val;\r\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                    this.setAutofillEndCellEl();\r\n                    this.setSelectionPositions({ type: \"autoFillEndCell\" });\r\n                } else {\r\n                    this.clearAutofillEndCellRect();\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // reset cell position\r\n        resetCellPositions() {\r\n            const { currentCell, normalEndCell } = this.cellSelectionData;\r\n            if (\r\n                !isEmptyValue(currentCell.rowKey) &&\r\n                !isEmptyValue(currentCell.colKey)\r\n            ) {\r\n                this.setSelectionPositions({\r\n                    type: \"currentCell\",\r\n                });\r\n            }\r\n\r\n            if (\r\n                !isEmptyValue(normalEndCell.rowKey) &&\r\n                !isEmptyValue(normalEndCell.colKey)\r\n            ) {\r\n                this.setSelectionPositions({\r\n                    type: \"normalEndCell\",\r\n                });\r\n            }\r\n        },\r\n\r\n        // set cell els\r\n        setCellEls() {\r\n            if (this.isVirtualScroll && this.selectionBordersVisibility) {\r\n                this.setCurrentCellEl();\r\n                this.setNormalEndCellEl();\r\n            }\r\n        },\r\n\r\n        // set cell selection range data\r\n        setCellSelectionRangeData() {\r\n            const { currentCellSelectionType } = this;\r\n            const { currentCell, normalEndCell } = this.cellSelectionData;\r\n\r\n            let result = {};\r\n\r\n            if (\r\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.SINGLE\r\n            ) {\r\n                result = {\r\n                    leftColKey: currentCell.colKey,\r\n                    rightColKey: currentCell.colKey,\r\n                    topRowKey: currentCell.rowKey,\r\n                    bottomRowKey: currentCell.rowKey,\r\n                };\r\n            } else if (\r\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.RANGE\r\n            ) {\r\n                const leftmostColKey = getLeftmostColKey({\r\n                    colgroups: this.colgroups,\r\n                    colKeys: [currentCell.colKey, normalEndCell.colKey],\r\n                });\r\n\r\n                /*\r\n                current cell col key is leftmost colKey\r\n                需要用 colKey 的位置进行判断，不能根据当前单元格 left 值判断（固定列时）\r\n                */\r\n                if (leftmostColKey === currentCell.colKey) {\r\n                    result.leftColKey = currentCell.colKey;\r\n                    result.rightColKey = normalEndCell.colKey;\r\n                } else {\r\n                    result.leftColKey = normalEndCell.colKey;\r\n                    result.rightColKey = currentCell.colKey;\r\n                }\r\n\r\n                if (currentCell.rowIndex < normalEndCell.rowIndex) {\r\n                    result.topRowKey = currentCell.rowKey;\r\n                    result.bottomRowKey = normalEndCell.rowKey;\r\n                } else {\r\n                    result.topRowKey = normalEndCell.rowKey;\r\n                    result.bottomRowKey = currentCell.rowKey;\r\n                }\r\n            } else {\r\n                // clear\r\n                result = {\r\n                    leftColKey: \"\",\r\n                    rightColKey: \"\",\r\n                    topRowKey: \"\",\r\n                    bottomRowKey: \"\",\r\n                };\r\n            }\r\n\r\n            this.$emit(EMIT_EVENTS.CELL_SELECTION_RANGE_DATA_CHANGE, result);\r\n        },\r\n\r\n        // get cell position\r\n        getCellPosition({ cellEl, tableLeft, tableTop }) {\r\n            if (!this.selectionBordersVisibility) {\r\n                return false;\r\n            }\r\n\r\n            const {\r\n                left: cellLeft,\r\n                top: cellTop,\r\n                height: cellHeight,\r\n                width: cellWidth,\r\n            } = cellEl.getBoundingClientRect();\r\n\r\n            if (cellHeight && cellWidth) {\r\n                return {\r\n                    left: cellLeft - tableLeft,\r\n                    top: cellTop - tableTop,\r\n                    width: cellWidth,\r\n                    height: cellHeight,\r\n                };\r\n            }\r\n        },\r\n\r\n        // get cell position by column key\r\n        getCellPositionByColKey({\r\n            tableLeft,\r\n            tableTop,\r\n            colKey,\r\n            isFirstRow,\r\n            isLastRow,\r\n        }) {\r\n            if (!this.selectionBordersVisibility) {\r\n                return false;\r\n            }\r\n\r\n            let cellEl;\r\n            if (isFirstRow) {\r\n                cellEl = this.getTableFirstRowCellByColKey(colKey);\r\n            } else if (isLastRow) {\r\n                cellEl = this.getTableLastRowCellByColKey(colKey);\r\n            }\r\n\r\n            if (!cellEl) {\r\n                return;\r\n            }\r\n\r\n            const {\r\n                left: cellLeft,\r\n                top: cellTop,\r\n                //height: cellHeight,\r\n                width: cellWidth,\r\n            } = cellEl.getBoundingClientRect();\r\n\r\n            if (cellWidth) {\r\n                return {\r\n                    left: cellLeft - tableLeft,\r\n                    top: cellTop - tableTop,\r\n                    width: cellWidth,\r\n                };\r\n            }\r\n        },\r\n\r\n        // set selection positions\r\n        setSelectionPositions({ type }) {\r\n            const {\r\n                allRowKeys,\r\n                tableEl,\r\n                currentCellEl,\r\n                normalEndCellEl,\r\n                autoFillEndCellEl,\r\n                cellSelectionData,\r\n                virtualScrollVisibleIndexs,\r\n            } = this;\r\n\r\n            // table empty\r\n            if (allRowKeys.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            if (!tableEl) {\r\n                return false;\r\n            }\r\n\r\n            const { left: tableLeft, top: tableTop } =\r\n                tableEl.getBoundingClientRect();\r\n\r\n            let isCurrentCellOverflow = false;\r\n            let isNormalEndCellOverflow = false;\r\n            // set current cell position\r\n            if (type === \"currentCell\") {\r\n                isCurrentCellOverflow = true;\r\n                if (currentCellEl) {\r\n                    const rect = this.getCellPosition({\r\n                        cellEl: currentCellEl,\r\n                        tableLeft,\r\n                        tableTop,\r\n                    });\r\n                    if (rect) {\r\n                        isCurrentCellOverflow = false;\r\n                        this.cellSelectionRect.currentCellRect = rect;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // set nromal end cell position`\r\n            if (type === \"normalEndCell\") {\r\n                isNormalEndCellOverflow = true;\r\n                if (normalEndCellEl) {\r\n                    const rect = this.getCellPosition({\r\n                        cellEl: normalEndCellEl,\r\n                        tableLeft,\r\n                        tableTop,\r\n                    });\r\n                    if (rect) {\r\n                        isNormalEndCellOverflow = false;\r\n                        this.cellSelectionRect.normalEndCellRect = rect;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // current cell overflow or normal end cell overflow && is virtual scroll\r\n            if (\r\n                (isCurrentCellOverflow || isNormalEndCellOverflow) &&\r\n                this.isVirtualScroll\r\n            ) {\r\n                const { currentCell, normalEndCell } = cellSelectionData;\r\n                // 弥补的\r\n                let mackUpColKey;\r\n                let mackUpRowIndex;\r\n\r\n                if (isCurrentCellOverflow) {\r\n                    mackUpColKey = currentCell.colKey;\r\n                    mackUpRowIndex = currentCell.rowIndex;\r\n                } else {\r\n                    mackUpColKey = normalEndCell.colKey;\r\n                    mackUpRowIndex = normalEndCell.rowIndex;\r\n                }\r\n\r\n                let mackUpRect;\r\n                /* \r\n                当没有 currentCellRect 或 normalCellRect 时 进行纠正，否则只更新top值\r\n                */\r\n                if (\r\n                    (isCurrentCellOverflow &&\r\n                        !this.cellSelectionRect.currentCellRect.height) ||\r\n                    (isNormalEndCellOverflow &&\r\n                        !this.cellSelectionRect.normalEndCellRect.height)\r\n                ) {\r\n                    let mackUpRectParams = {\r\n                        tableLeft,\r\n                        tableTop,\r\n                        colKey: mackUpColKey,\r\n                    };\r\n                    // 上方超出\r\n                    if (mackUpRowIndex < virtualScrollVisibleIndexs.start) {\r\n                        mackUpRect = this.getCellPositionByColKey({\r\n                            ...mackUpRectParams,\r\n                            isFirstRow: true,\r\n                        });\r\n                    }\r\n                    // 下方超出\r\n                    else if (mackUpRowIndex > virtualScrollVisibleIndexs.end) {\r\n                        mackUpRect = this.getCellPositionByColKey({\r\n                            ...mackUpRectParams,\r\n                            isLastRow: true,\r\n                        });\r\n                    }\r\n                }\r\n                // 仅更新 top 值\r\n                else {\r\n                    // 上方超出\r\n                    if (mackUpRowIndex < virtualScrollVisibleIndexs.start) {\r\n                        mackUpRect = {\r\n                            top: 0,\r\n                        };\r\n                    }\r\n                    // 下方超出\r\n                    else if (mackUpRowIndex > virtualScrollVisibleIndexs.end) {\r\n                        mackUpRect = {\r\n                            top: tableEl.clientHeight,\r\n                        };\r\n                    }\r\n                }\r\n\r\n                if (isCurrentCellOverflow) {\r\n                    Object.assign(\r\n                        this.cellSelectionRect.currentCellRect,\r\n                        mackUpRect,\r\n                    );\r\n                } else {\r\n                    Object.assign(\r\n                        this.cellSelectionRect.normalEndCellRect,\r\n                        mackUpRect,\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (autoFillEndCellEl && type === \"autoFillEndCell\") {\r\n                const rect = this.getCellPosition({\r\n                    cellEl: autoFillEndCellEl,\r\n                    tableLeft,\r\n                    tableTop,\r\n                });\r\n\r\n                if (rect) {\r\n                    this.cellSelectionRect.autoFillEndCellRect = rect;\r\n                }\r\n            }\r\n        },\r\n\r\n        /*\r\n        get selection current\r\n        1、selection current\r\n        2、auto fill area\r\n        */\r\n        getSelectionCurrent({ fixedType }) {\r\n            let result = {\r\n                selectionCurrent: null,\r\n                autoFillArea: null,\r\n            };\r\n\r\n            const { cellSelectionRect, colgroups, cellSelectionData } = this;\r\n\r\n            const { currentCellRect, normalEndCellRect } = cellSelectionRect;\r\n\r\n            if (!currentCellRect.width) {\r\n                return result;\r\n            }\r\n\r\n            const borders = {\r\n                borderWidth: currentCellRect.width + 1,\r\n                borderHeight: currentCellRect.height,\r\n\r\n                topBorder: {\r\n                    show: true,\r\n                    width: 0,\r\n                    height: 2,\r\n                    top: currentCellRect.top - 1,\r\n                    left: currentCellRect.left - 1,\r\n                },\r\n                rightBorder: {\r\n                    show: true,\r\n                    width: 2,\r\n                    height: 0,\r\n                    top: currentCellRect.top,\r\n                    left: currentCellRect.left + currentCellRect.width - 2,\r\n                },\r\n                bottomBorder: {\r\n                    show: true,\r\n                    width: 0,\r\n                    height: 2,\r\n                    top: currentCellRect.top + currentCellRect.height - 2,\r\n                    left: currentCellRect.left - 1,\r\n                },\r\n                leftBorder: {\r\n                    show: true,\r\n                    width: 2,\r\n                    height: 0,\r\n                    top: currentCellRect.top,\r\n                    left: currentCellRect.left - 1,\r\n                },\r\n                corner: {\r\n                    show: !normalEndCellRect.width,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n            };\r\n\r\n            borders.corner.top = borders.bottomBorder.top - 3;\r\n            borders.corner.left = borders.rightBorder.left - 3;\r\n\r\n            // cell selection single autofill\r\n            if (!normalEndCellRect.width) {\r\n                result.autoFillArea = this.getSelectionAutofillArea({\r\n                    areaPostions: borders,\r\n                    fixedType,\r\n                });\r\n            }\r\n\r\n            const totalColKeys = [cellSelectionData.currentCell.colKey];\r\n\r\n            const fixedColKeys = getColKeysByFixedTypeWithinColKeys({\r\n                colKeys: totalColKeys,\r\n                fixedType,\r\n                colgroups,\r\n            });\r\n\r\n            result.selectionCurrent = this.getBorders({\r\n                ...borders,\r\n                showCorner: !normalEndCellRect.width,\r\n                className: \"selection-current\",\r\n                fixedType,\r\n                totalColKeys,\r\n                fixedColKeys,\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /*\r\n        get selection areas\r\n        1、normal area\r\n        2、auto fill area\r\n        */\r\n        getSelectionAreas({ fixedType }) {\r\n            let result = {\r\n                normalArea: null,\r\n                autoFillArea: null,\r\n            };\r\n\r\n            const { currentCell, normalEndCell } = this.cellSelectionData;\r\n\r\n            const { cellSelectionRect, cellSelectionRangeData, colgroups } =\r\n                this;\r\n\r\n            const { currentCellRect, normalEndCellRect } = cellSelectionRect;\r\n\r\n            if (!currentCellRect.width || !normalEndCellRect.width) {\r\n                return result;\r\n            }\r\n\r\n            const borders = {\r\n                borderWidth: 0,\r\n                borderHeight: 0,\r\n\r\n                topBorder: {\r\n                    show: true,\r\n                    width: 0,\r\n                    height: 1,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                rightBorder: {\r\n                    show: true,\r\n                    width: 1,\r\n                    height: 0,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                bottomBorder: {\r\n                    show: true,\r\n                    width: 0,\r\n                    height: 1,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                leftBorder: {\r\n                    show: true,\r\n                    width: 1,\r\n                    height: 0,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                corner: {\r\n                    show: true,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n            };\r\n\r\n            const leftmostColKey = getLeftmostColKey({\r\n                colgroups: this.colgroups,\r\n                colKeys: [currentCell.colKey, normalEndCell.colKey],\r\n            });\r\n\r\n            // end cell column key right\r\n            if (leftmostColKey === currentCell.colKey) {\r\n                borders.borderWidth =\r\n                    normalEndCellRect.left -\r\n                    currentCellRect.left +\r\n                    normalEndCellRect.width +\r\n                    1;\r\n\r\n                borders.topBorder.left = currentCellRect.left - 1;\r\n                borders.bottomBorder.left = currentCellRect.left - 1;\r\n                borders.leftBorder.left = currentCellRect.left - 1;\r\n                borders.rightBorder.left =\r\n                    normalEndCellRect.left + normalEndCellRect.width - 1;\r\n            }\r\n            // end cell column key left or equal\r\n            else if (leftmostColKey === normalEndCell.colKey) {\r\n                borders.borderWidth =\r\n                    currentCellRect.left -\r\n                    normalEndCellRect.left +\r\n                    currentCellRect.width +\r\n                    1;\r\n\r\n                borders.topBorder.left = normalEndCellRect.left - 1;\r\n                borders.rightBorder.left =\r\n                    currentCellRect.left + currentCellRect.width - 1;\r\n                borders.bottomBorder.left = normalEndCellRect.left - 1;\r\n                borders.leftBorder.left = normalEndCellRect.left - 1;\r\n            }\r\n\r\n            // end cell below\r\n            if (normalEndCellRect.top > currentCellRect.top) {\r\n                borders.borderHeight =\r\n                    normalEndCellRect.top -\r\n                    currentCellRect.top +\r\n                    normalEndCellRect.height;\r\n\r\n                borders.topBorder.top = currentCellRect.top - 1;\r\n                borders.rightBorder.top = currentCellRect.top;\r\n                borders.bottomBorder.top =\r\n                    normalEndCellRect.top + normalEndCellRect.height - 1;\r\n                borders.leftBorder.top = currentCellRect.top;\r\n            }\r\n            // end cell above or equal\r\n            else if (normalEndCellRect.top <= currentCellRect.top) {\r\n                borders.borderHeight =\r\n                    currentCellRect.top -\r\n                    normalEndCellRect.top +\r\n                    currentCellRect.height;\r\n\r\n                borders.topBorder.top = normalEndCellRect.top - 1;\r\n                borders.rightBorder.top = normalEndCellRect.top;\r\n                borders.bottomBorder.top =\r\n                    currentCellRect.top + currentCellRect.height - 1;\r\n                borders.leftBorder.top = normalEndCellRect.top;\r\n            }\r\n\r\n            borders.corner.top = borders.bottomBorder.top - 4;\r\n            borders.corner.left = borders.rightBorder.left - 4;\r\n\r\n            if (normalEndCellRect.width) {\r\n                result.autoFillArea = this.getSelectionAutofillArea({\r\n                    areaPostions: borders,\r\n                    fixedType,\r\n                });\r\n            }\r\n\r\n            const { leftColKey, rightColKey } = cellSelectionRangeData;\r\n            const totalColKeys = getColKeysByRangeColKeys({\r\n                colKey1: leftColKey,\r\n                colKey2: rightColKey,\r\n                colgroups,\r\n            });\r\n\r\n            const fixedColKeys = getColKeysByFixedTypeWithinColKeys({\r\n                colKeys: totalColKeys,\r\n                fixedType,\r\n                colgroups,\r\n            });\r\n\r\n            result.normalArea = this.getBorders({\r\n                ...borders,\r\n                className: \"selection-normal-area\",\r\n                fixedType,\r\n                totalColKeys,\r\n                fixedColKeys,\r\n            });\r\n\r\n            result.normalAreaLayer = this.getAreaLayer({\r\n                ...borders,\r\n                className: \"selection-normal-area-layer\",\r\n                fixedType,\r\n                totalColKeys,\r\n                fixedColKeys,\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        // get selection auto fill\r\n        getSelectionAutofillArea({ areaPostions, fixedType }) {\r\n            let result = null;\r\n\r\n            const {\r\n                cellAutofillOption,\r\n                cellSelectionRangeData,\r\n                cellSelectionRect,\r\n                cellSelectionData,\r\n                isAutofillStarting,\r\n                currentCellSelectionType,\r\n                colgroups,\r\n            } = this;\r\n\r\n            if (!isAutofillStarting) {\r\n                return result;\r\n            }\r\n\r\n            const { currentCellRect, autoFillEndCellRect } = cellSelectionRect;\r\n\r\n            if (!currentCellRect.width || !autoFillEndCellRect.width) {\r\n                return result;\r\n            }\r\n\r\n            if (!areaPostions) {\r\n                return result;\r\n            }\r\n\r\n            const borders = {\r\n                borderWidth: 0,\r\n                borderHeight: 0,\r\n\r\n                topBorder: {\r\n                    show: true,\r\n                    width: 0,\r\n                    height: 1,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                rightBorder: {\r\n                    show: true,\r\n                    width: 1,\r\n                    height: 0,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                bottomBorder: {\r\n                    show: true,\r\n                    width: 0,\r\n                    height: 1,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                leftBorder: {\r\n                    show: true,\r\n                    width: 1,\r\n                    height: 0,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n                corner: {\r\n                    show: false,\r\n                    top: 0,\r\n                    left: 0,\r\n                },\r\n            };\r\n\r\n            const { currentCell, autoFillEndCell } = cellSelectionData;\r\n\r\n            let { leftColKey, rightColKey } = cellSelectionRangeData;\r\n            if (\r\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.SINGLE\r\n            ) {\r\n                leftColKey = currentCell.colKey;\r\n                rightColKey = currentCell.colKey;\r\n            }\r\n\r\n            let leftmostColKey;\r\n            if (leftColKey !== autoFillEndCell.colKey) {\r\n                leftmostColKey = getLeftmostColKey({\r\n                    colgroups,\r\n                    colKeys: [leftColKey, autoFillEndCell.colKey],\r\n                });\r\n            }\r\n\r\n            let rightmostColKey;\r\n            if (rightColKey !== autoFillEndCell.colKey) {\r\n                rightmostColKey = getRightmostColKey({\r\n                    colgroups,\r\n                    colKeys: [rightColKey, autoFillEndCell.colKey],\r\n                });\r\n            }\r\n\r\n            // autofilling direction\r\n            let autofillingDirection;\r\n\r\n            let rangeColKey1;\r\n            let rangeColKey2;\r\n\r\n            // auto fill end cell below\r\n            if (autoFillEndCellRect.top > areaPostions.bottomBorder.top) {\r\n                autofillingDirection = AUTOFILLING_DIRECTION.DOWN;\r\n\r\n                rangeColKey1 = leftColKey;\r\n                rangeColKey2 = rightColKey;\r\n\r\n                borders.topBorder.show = false;\r\n\r\n                borders.borderWidth = areaPostions.borderWidth;\r\n                borders.borderHeight =\r\n                    autoFillEndCellRect.top -\r\n                    areaPostions.bottomBorder.top +\r\n                    autoFillEndCellRect.height;\r\n\r\n                borders.rightBorder.top = areaPostions.bottomBorder.top;\r\n                borders.rightBorder.left = areaPostions.rightBorder.left;\r\n                if (\r\n                    currentCellSelectionType ===\r\n                    CURRENT_CELL_SELECTION_TYPES.SINGLE\r\n                ) {\r\n                    borders.rightBorder.left++;\r\n                }\r\n\r\n                borders.leftBorder.top = areaPostions.bottomBorder.top;\r\n                borders.leftBorder.left = areaPostions.leftBorder.left;\r\n\r\n                borders.bottomBorder.top =\r\n                    autoFillEndCellRect.top + autoFillEndCellRect.height - 1;\r\n                borders.bottomBorder.left = areaPostions.bottomBorder.left;\r\n            }\r\n            // end cell above\r\n            else if (autoFillEndCellRect.top < areaPostions.topBorder.top) {\r\n                autofillingDirection = AUTOFILLING_DIRECTION.UP;\r\n\r\n                rangeColKey1 = leftColKey;\r\n                rangeColKey2 = rightColKey;\r\n\r\n                borders.bottomBorder.show = false;\r\n\r\n                borders.borderWidth = areaPostions.borderWidth;\r\n                borders.borderHeight =\r\n                    areaPostions.topBorder.top - autoFillEndCellRect.top;\r\n\r\n                borders.topBorder.top = autoFillEndCellRect.top - 1;\r\n                borders.topBorder.left = areaPostions.topBorder.left;\r\n\r\n                borders.rightBorder.top = autoFillEndCellRect.top;\r\n                borders.rightBorder.left = areaPostions.rightBorder.left;\r\n                if (\r\n                    currentCellSelectionType ===\r\n                    CURRENT_CELL_SELECTION_TYPES.SINGLE\r\n                ) {\r\n                    borders.rightBorder.left++;\r\n                }\r\n\r\n                borders.leftBorder.top = autoFillEndCellRect.top;\r\n                borders.leftBorder.left = areaPostions.leftBorder.left;\r\n            }\r\n            // auto fill end cell right\r\n            else if (\r\n                rightmostColKey === autoFillEndCell.colKey &&\r\n                !isEmptyValue(rightmostColKey)\r\n            ) {\r\n                autofillingDirection = AUTOFILLING_DIRECTION.RIGHT;\r\n\r\n                rangeColKey1 = getNextColKey({\r\n                    colgroups,\r\n                    currentColKey: rightColKey,\r\n                });\r\n                rangeColKey2 = autoFillEndCell.colKey;\r\n\r\n                borders.leftBorder.show = false;\r\n\r\n                borders.borderWidth =\r\n                    autoFillEndCellRect.left -\r\n                    areaPostions.rightBorder.left +\r\n                    autoFillEndCellRect.width +\r\n                    1;\r\n                borders.borderHeight = areaPostions.borderHeight;\r\n\r\n                borders.topBorder.top = areaPostions.topBorder.top;\r\n                borders.topBorder.left = areaPostions.rightBorder.left - 1;\r\n\r\n                borders.rightBorder.top = areaPostions.topBorder.top;\r\n                borders.rightBorder.left =\r\n                    autoFillEndCellRect.left + autoFillEndCellRect.width - 1;\r\n\r\n                borders.bottomBorder.top = areaPostions.bottomBorder.top;\r\n                borders.bottomBorder.left = areaPostions.rightBorder.left - 1;\r\n            }\r\n            // auto fill end cell left\r\n            else if (\r\n                leftmostColKey === autoFillEndCell.colKey &&\r\n                !isEmptyValue(leftmostColKey)\r\n            ) {\r\n                autofillingDirection = AUTOFILLING_DIRECTION.LEFT;\r\n\r\n                rangeColKey1 = getPreviewColKey({\r\n                    colgroups,\r\n                    currentColKey: leftColKey,\r\n                });\r\n                rangeColKey2 = autoFillEndCell.colKey;\r\n\r\n                borders.rightBorder.show = false;\r\n\r\n                borders.borderWidth =\r\n                    areaPostions.leftBorder.left - autoFillEndCellRect.left + 1;\r\n                borders.borderHeight = areaPostions.borderHeight;\r\n\r\n                borders.topBorder.top = areaPostions.topBorder.top;\r\n                borders.topBorder.left = autoFillEndCellRect.left;\r\n\r\n                borders.rightBorder.left = areaPostions.topBorder.left;\r\n\r\n                borders.bottomBorder.top = areaPostions.bottomBorder.top;\r\n                borders.bottomBorder.left = autoFillEndCellRect.left;\r\n\r\n                borders.leftBorder.top = areaPostions.topBorder.top;\r\n                borders.leftBorder.left = autoFillEndCellRect.left;\r\n            } else {\r\n                return result;\r\n            }\r\n\r\n            const { directionX, directionY } = cellAutofillOption;\r\n            if (isBoolean(directionX) && !directionX) {\r\n                if (\r\n                    autofillingDirection === AUTOFILLING_DIRECTION.LEFT ||\r\n                    autofillingDirection === AUTOFILLING_DIRECTION.RIGHT\r\n                ) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (isBoolean(directionY) && !directionY) {\r\n                if (\r\n                    autofillingDirection === AUTOFILLING_DIRECTION.UP ||\r\n                    autofillingDirection === AUTOFILLING_DIRECTION.DOWN\r\n                ) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            const totalColKeys = getColKeysByRangeColKeys({\r\n                colKey1: rangeColKey1,\r\n                colKey2: rangeColKey2,\r\n                colgroups,\r\n            });\r\n\r\n            let fixedColKeys = getColKeysByFixedTypeWithinColKeys({\r\n                colKeys: totalColKeys,\r\n                fixedType,\r\n                colgroups,\r\n            });\r\n\r\n            result = this.getBorders({\r\n                className: \"selection-autofill-area\",\r\n                ...borders,\r\n                fixedType,\r\n                totalColKeys,\r\n                fixedColKeys,\r\n            });\r\n\r\n            if (result) {\r\n                this.dispatch(\r\n                    COMPS_NAME.VE_TABLE,\r\n                    EMIT_EVENTS.AUTOFILLING_DIRECTION_CHANGE,\r\n                    autofillingDirection,\r\n                );\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get borders\r\n        getBorders({\r\n            borderWidth,\r\n            borderHeight,\r\n            topBorder,\r\n            rightBorder,\r\n            bottomBorder,\r\n            leftBorder,\r\n            corner,\r\n            className,\r\n            fixedType,\r\n            totalColKeys,\r\n            fixedColKeys,\r\n        }) {\r\n            const {\r\n                cornerCellInfo,\r\n                colgroups,\r\n                isFirstSelectionRow,\r\n                isFirstSelectionCol,\r\n                isFirstNotFixedSelectionCol,\r\n                showCorner,\r\n            } = this;\r\n\r\n            let isRender = true;\r\n\r\n            if (fixedType) {\r\n                isRender = isExistGivenFixedColKey({\r\n                    fixedType,\r\n                    colKeys: totalColKeys,\r\n                    colgroups,\r\n                });\r\n            }\r\n            // middle normal area\r\n            else {\r\n                isRender = isExistNotFixedColKey({\r\n                    colKeys: totalColKeys,\r\n                    colgroups,\r\n                });\r\n            }\r\n\r\n            if (!isRender) {\r\n                return null;\r\n            }\r\n\r\n            // fixed columns total width\r\n            let fixedColsTotalWidth = 0;\r\n            if (fixedColKeys.length) {\r\n                fixedColsTotalWidth = getTotalWidthByColKeys({\r\n                    colKeys: fixedColKeys,\r\n                    colgroups,\r\n                });\r\n            }\r\n\r\n            if (fixedType) {\r\n                borderWidth = fixedColsTotalWidth;\r\n                if (fixedType === COLUMN_FIXED_TYPE.LEFT) {\r\n                    borderWidth += 1;\r\n                }\r\n            }\r\n\r\n            if (fixedType === COLUMN_FIXED_TYPE.LEFT) {\r\n                if (totalColKeys.length !== fixedColKeys.length) {\r\n                    rightBorder.show = false;\r\n                    corner.show = false;\r\n                }\r\n            }\r\n\r\n            if (fixedType === COLUMN_FIXED_TYPE.RIGHT) {\r\n                if (totalColKeys.length !== fixedColKeys.length) {\r\n                    leftBorder.show = false;\r\n                }\r\n\r\n                topBorder.left = rightBorder.left - borderWidth + 1;\r\n                bottomBorder.left = rightBorder.left - borderWidth + 1;\r\n            }\r\n\r\n            // solved first row、first column、first not fixed column selection border hidden\r\n            if (isFirstSelectionRow) {\r\n                topBorder.top += 1;\r\n            }\r\n            if (isFirstSelectionCol) {\r\n                leftBorder.left += 1;\r\n            }\r\n            if (isFirstNotFixedSelectionCol) {\r\n                leftBorder.left += 1;\r\n            }\r\n\r\n            let cornerTop = corner.top;\r\n            let cornerLeft = corner.left;\r\n            let cornerBorderRightWidth = \"1px\";\r\n            let cornerBorderBottomtWidth = \"1px\";\r\n\r\n            if (cornerCellInfo.isLastRow) {\r\n                cornerTop -= 3;\r\n                cornerBorderBottomtWidth = \"0px\";\r\n            }\r\n\r\n            if (cornerCellInfo.isLastColumn) {\r\n                cornerLeft -= 3;\r\n                cornerBorderRightWidth = \"0px\";\r\n            }\r\n\r\n            if (!showCorner) {\r\n                corner.show = false;\r\n            }\r\n\r\n            // corner props\r\n            const cornerProps = {\r\n                class: clsName(\"selection-corner\"),\r\n                style: {\r\n                    display: corner.show ? \"block\" : \"none\",\r\n                    top: cornerTop + \"px\",\r\n                    left: cornerLeft + \"px\",\r\n                    borderWidth: `1px ${cornerBorderRightWidth} ${cornerBorderBottomtWidth} 1px`,\r\n                },\r\n                on: {\r\n                    mousedown: (e) => {\r\n                        this.dispatch(\r\n                            COMPS_NAME.VE_TABLE,\r\n                            EMIT_EVENTS.SELECTION_CORNER_MOUSEDOWN,\r\n                            {\r\n                                event: e,\r\n                            },\r\n                        );\r\n                    },\r\n                    mouseup: (e) => {\r\n                        this.dispatch(\r\n                            COMPS_NAME.VE_TABLE,\r\n                            EMIT_EVENTS.SELECTION_CORNER_MOUSEUP,\r\n                            {\r\n                                event: e,\r\n                            },\r\n                        );\r\n                    },\r\n                },\r\n            };\r\n\r\n            return (\r\n                <div class={clsName(className)}>\r\n                    {/* top */}\r\n                    <div\r\n                        style={{\r\n                            display: topBorder.show ? \"block\" : \"none\",\r\n                            width: borderWidth + \"px\",\r\n                            height: topBorder.height + \"px\",\r\n                            top: topBorder.top + \"px\",\r\n                            left: topBorder.left + \"px\",\r\n                        }}\r\n                        class={clsName(\"selection-border\")}\r\n                    ></div>\r\n                    {/* right */}\r\n                    <div\r\n                        style={{\r\n                            display: rightBorder.show ? \"block\" : \"none\",\r\n                            width: rightBorder.width + \"px\",\r\n                            height: borderHeight + \"px\",\r\n                            top: rightBorder.top + \"px\",\r\n                            left: rightBorder.left + \"px\",\r\n                        }}\r\n                        class={clsName(\"selection-border\")}\r\n                    ></div>\r\n                    {/* bottom */}\r\n                    <div\r\n                        style={{\r\n                            display: bottomBorder.show ? \"block\" : \"none\",\r\n                            width: borderWidth + \"px\",\r\n                            height: bottomBorder.height + \"px\",\r\n                            top: bottomBorder.top + \"px\",\r\n                            left: bottomBorder.left + \"px\",\r\n                        }}\r\n                        class={clsName(\"selection-border\")}\r\n                    ></div>\r\n                    {/* left */}\r\n                    <div\r\n                        style={{\r\n                            display: leftBorder.show ? \"block\" : \"none\",\r\n                            width: leftBorder.width + \"px\",\r\n                            height: borderHeight + \"px\",\r\n                            top: leftBorder.top + \"px\",\r\n                            left: leftBorder.left + \"px\",\r\n                        }}\r\n                        class={clsName(\"selection-border\")}\r\n                    ></div>\r\n                    {/* corner */}\r\n                    {<div {...cornerProps}></div>}\r\n                </div>\r\n            );\r\n        },\r\n\r\n        // get area rect\r\n        getAreaLayer({\r\n            borderWidth,\r\n            borderHeight,\r\n            topBorder,\r\n            className,\r\n            fixedType,\r\n            totalColKeys,\r\n            fixedColKeys,\r\n        }) {\r\n            const { colgroups } = this;\r\n\r\n            let isRender = true;\r\n\r\n            if (fixedType) {\r\n                isRender = isExistGivenFixedColKey({\r\n                    fixedType,\r\n                    colKeys: totalColKeys,\r\n                    colgroups,\r\n                });\r\n            }\r\n            // middle normal area\r\n            else {\r\n                isRender = isExistNotFixedColKey({\r\n                    colKeys: totalColKeys,\r\n                    colgroups,\r\n                });\r\n            }\r\n\r\n            if (!isRender) {\r\n                return null;\r\n            }\r\n\r\n            // fixed columns total width\r\n            let fixedColsTotalWidth = 0;\r\n            if (fixedColKeys.length) {\r\n                fixedColsTotalWidth = getTotalWidthByColKeys({\r\n                    colKeys: fixedColKeys,\r\n                    colgroups,\r\n                });\r\n            }\r\n\r\n            if (fixedType) {\r\n                borderWidth = fixedColsTotalWidth;\r\n                if (fixedType === COLUMN_FIXED_TYPE.LEFT) {\r\n                    borderWidth += 1;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div\r\n                    class={clsName(className)}\r\n                    style={{\r\n                        top: topBorder.top + \"px\",\r\n                        left: topBorder.left + \"px\",\r\n                        width: borderWidth + \"px\",\r\n                        height: borderHeight + \"px\",\r\n                    }}\r\n                ></div>\r\n            );\r\n        },\r\n\r\n        /* \r\n        get table first row cell by col key\r\n        用作跨页单元格选择，表格大小变化或者存在横向滚动条时，区域选择位置自动校准\r\n        */\r\n        getTableFirstRowCellByColKey(colKey) {\r\n            let result = null;\r\n\r\n            const { tableEl } = this;\r\n\r\n            if (tableEl) {\r\n                result = tableEl.querySelector(\r\n                    `tbody.ve-table-body tr td[col-key=\"${colKey}\"]`,\r\n                );\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /* \r\n        get table last row cell by col key\r\n        用作跨页单元格选择，表格大小变化或者存在横向滚动条时，区域选择位置自动校准\r\n        */\r\n        getTableLastRowCellByColKey(colKey) {\r\n            let result = null;\r\n\r\n            const { tableEl } = this;\r\n\r\n            if (tableEl) {\r\n                result = tableEl.querySelector(\r\n                    `tbody.ve-table-body tr:last-child td[col-key=\"${colKey}\"]`,\r\n                );\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // get table el\r\n        getTableCellEl({ rowKey, colKey }) {\r\n            let result = null;\r\n\r\n            const { tableEl } = this;\r\n\r\n            if (tableEl) {\r\n                result = tableEl.querySelector(\r\n                    `tbody.ve-table-body tr[row-key=\"${rowKey}\"] td[col-key=\"${colKey}\"]`,\r\n                );\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // set current cell el\r\n        setCurrentCellEl() {\r\n            const { cellSelectionData } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                const cellEl = this.getTableCellEl({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n                if (cellEl) {\r\n                    this.currentCellEl = cellEl;\r\n                }\r\n            }\r\n        },\r\n\r\n        // set normal end cell el\r\n        setNormalEndCellEl() {\r\n            const { cellSelectionData } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.normalEndCell;\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                const cellEl = this.getTableCellEl({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n                if (cellEl) {\r\n                    this.normalEndCellEl = cellEl;\r\n                }\r\n            }\r\n        },\r\n\r\n        // set auto fill cell el\r\n        setAutofillEndCellEl() {\r\n            const { cellSelectionData, tableEl } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.autoFillEndCell;\r\n\r\n            if (tableEl) {\r\n                const autoFillEndCellEl = tableEl.querySelector(\r\n                    `tbody.ve-table-body tr[row-key=\"${rowKey}\"] td[col-key=\"${colKey}\"]`,\r\n                );\r\n\r\n                if (autoFillEndCellEl) {\r\n                    this.autoFillEndCellEl = autoFillEndCellEl;\r\n                }\r\n            }\r\n        },\r\n\r\n        // clear auto fill end cell rect\r\n        clearAutofillEndCellRect() {\r\n            this.autoFillEndCellEl = null;\r\n            this.cellSelectionRect.autoFillEndCellRect = {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        },\r\n\r\n        // clear current cell rect\r\n        [INSTANCE_METHODS.CLEAR_CURRENT_CELL_RECT]() {\r\n            this.currentCellEl = null;\r\n            this.cellSelectionRect.currentCellRect = {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        },\r\n\r\n        // clear normal end cell rect\r\n        [INSTANCE_METHODS.CLEAR_NORMAL_END_CELL_RECT]() {\r\n            this.normalEndCellEl = null;\r\n            this.cellSelectionRect.normalEndCellRect = {\r\n                left: 0,\r\n                top: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        },\r\n    },\r\n\r\n    created() {\r\n        // debounce reset cell positions\r\n        this.debounceResetCellPositions = debounce(\r\n            this.resetCellPositions,\r\n            210,\r\n        );\r\n        // debounce set cell els\r\n        this.debounceSetCellEls = debounce(this.setCellEls, 200);\r\n    },\r\n\r\n    render() {\r\n        if (!this.selectionBordersVisibility) {\r\n            return null;\r\n        }\r\n\r\n        // fixed left\r\n        const fixedLeftSelectionCurrent = this.getSelectionCurrent({\r\n            fixedType: COLUMN_FIXED_TYPE.LEFT,\r\n        });\r\n        const fixedLeftSelectionArea = this.getSelectionAreas({\r\n            fixedType: COLUMN_FIXED_TYPE.LEFT,\r\n        });\r\n\r\n        const fixedLeftAutoFillArea =\r\n            fixedLeftSelectionCurrent.autoFillArea ||\r\n            fixedLeftSelectionArea.autoFillArea;\r\n\r\n        // middle\r\n        const middleSelectionCurrent = this.getSelectionCurrent({\r\n            fixedType: \"\",\r\n        });\r\n        const middleSelectionArea = this.getSelectionAreas({\r\n            fixedType: \"\",\r\n        });\r\n\r\n        const middleAutoFillArea =\r\n            middleSelectionCurrent.autoFillArea ||\r\n            middleSelectionArea.autoFillArea;\r\n\r\n        // fixed right\r\n        const fixedRightSelectionCurrent = this.getSelectionCurrent({\r\n            fixedType: COLUMN_FIXED_TYPE.RIGHT,\r\n        });\r\n        const fixedRightSelectionArea = this.getSelectionAreas({\r\n            fixedType: COLUMN_FIXED_TYPE.RIGHT,\r\n        });\r\n\r\n        const fixedRightAutoFillArea =\r\n            fixedRightSelectionCurrent.autoFillArea ||\r\n            fixedRightSelectionArea.autoFillArea;\r\n\r\n        return (\r\n            <div\r\n                class={clsName(\"selection-wrapper\")}\r\n                style={{ visibility: this.isCellEditing ? \"hidden\" : \"\" }}\r\n            >\r\n                <div class={clsName(\"selection-fixed-left\")}>\r\n                    {/* current */}\r\n                    {fixedLeftSelectionCurrent.selectionCurrent}\r\n                    {/* area */}\r\n                    {fixedLeftSelectionArea.normalArea}\r\n                    {/* auto fill */}\r\n                    {fixedLeftAutoFillArea}\r\n                    {/* area layer */}\r\n                    {fixedLeftSelectionArea.normalAreaLayer}\r\n                </div>\r\n                <div class={clsName(\"selection-middle\")}>\r\n                    {/* current */}\r\n                    {middleSelectionCurrent.selectionCurrent}\r\n                    {/* area */}\r\n                    {middleSelectionArea.normalArea}\r\n                    {/* auto fill */}\r\n                    {middleAutoFillArea}\r\n                    {/* area layer */}\r\n                    {middleSelectionArea.normalAreaLayer}\r\n                </div>\r\n                <div class={clsName(\"selection-fixed-right\")}>\r\n                    {/* current */}\r\n                    {fixedRightSelectionCurrent.selectionCurrent}\r\n                    {/* area */}\r\n                    {fixedRightSelectionArea.normalArea}\r\n                    {/* auto fill */}\r\n                    {fixedRightAutoFillArea}\r\n                    {/* area layer */}\r\n                    {fixedRightSelectionArea.normalAreaLayer}\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { clsName } from \"../util\";\r\nimport { COMPS_NAME, HOOKS_NAME } from \"../util/constant\";\r\nimport { isNumber } from \"../../../src/utils/index.js\";\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE_COLUMN_RESISZER,\r\n    props: {\r\n        parentRendered: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        tableContainerEl: {\r\n            type: HTMLDivElement,\r\n            default: null,\r\n        },\r\n        hooks: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        colgroups: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        isColumnResizerHover: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        isColumnResizing: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        setIsColumnResizerHover: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        setIsColumnResizing: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        setColumnWidth: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        // column width resize option\r\n        columnWidthResizeOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // column resizer start x\r\n            columnResizerStartX: 0,\r\n            // current resizing column\r\n            currentResizingColumn: null,\r\n            // column resizer handler width\r\n            columnResizerHandlerWidth: 5,\r\n            // column resizer rect\r\n            columnResizerRect: {\r\n                top: 0,\r\n                left: 0,\r\n                height: 0,\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        // column min width\r\n        columnMinWidth() {\r\n            let result = 30;\r\n\r\n            const { columnWidthResizeOption } = this;\r\n\r\n            if (columnWidthResizeOption) {\r\n                const { minWidth } = columnWidthResizeOption;\r\n                if (isNumber(minWidth) && minWidth > 0) {\r\n                    result = minWidth;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    },\r\n    watch: {\r\n        parentRendered: {\r\n            handler: function (val) {\r\n                if (val) {\r\n                    // header cell mousemove\r\n                    this.hooks.addHook(\r\n                        HOOKS_NAME.HEADER_CELL_MOUSEMOVE,\r\n                        ({ event, column }) => {\r\n                            if (column.disableResizing) return;\r\n                            this.initColumnResizerPosition({ event, column });\r\n                        },\r\n                    );\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n    methods: {\r\n        // init column resizer position\r\n        initColumnResizerPosition({ event, column }) {\r\n            const { tableContainerEl, isColumnResizing } = this;\r\n\r\n            if (tableContainerEl && !isColumnResizing) {\r\n                const { left: tableContainerLeft, top: tableContainerTop } =\r\n                    tableContainerEl.getBoundingClientRect();\r\n\r\n                const col = this.colgroups.find((x) => x.key === column.key);\r\n\r\n                // 表头分组，不支持分组表头列宽拖动\r\n                if (!col) {\r\n                    return false;\r\n                }\r\n\r\n                if (col._realTimeWidth) {\r\n                    const target = event.target;\r\n                    const cellRect = target.getBoundingClientRect();\r\n                    const { height, left, top } = cellRect;\r\n\r\n                    this.columnResizerRect.left =\r\n                        left + col._realTimeWidth - tableContainerLeft;\r\n                    this.columnResizerRect.top = top - tableContainerTop;\r\n                    this.columnResizerRect.height = height;\r\n\r\n                    this.currentResizingColumn = col;\r\n                    this.columnResizerStartX = left + col._realTimeWidth;\r\n                } else {\r\n                    console.warn(\"Resizer column needs set column width\");\r\n                }\r\n            }\r\n        },\r\n\r\n        // set column resizer position byu drag\r\n        setColumnResizerPositionByDrag(event) {\r\n            const {\r\n                tableContainerEl,\r\n                isColumnResizing,\r\n                currentResizingColumn,\r\n            } = this;\r\n\r\n            if (tableContainerEl && isColumnResizing) {\r\n                const { left: tableContainerLeft } =\r\n                    tableContainerEl.getBoundingClientRect();\r\n\r\n                if (isColumnResizing && currentResizingColumn) {\r\n                    const { columnResizerStartX, columnMinWidth } = this;\r\n\r\n                    // 不允许拖动小于列最小宽度\r\n                    if (\r\n                        currentResizingColumn._realTimeWidth +\r\n                            (event.clientX - columnResizerStartX) >\r\n                        columnMinWidth\r\n                    ) {\r\n                        this.columnResizerRect.left =\r\n                            event.clientX - tableContainerLeft;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // column resizer handler mousedown\r\n        columnResizerHandlerMousedown({ event }) {\r\n            if (this.isColumnResizerHover) {\r\n                this.setIsColumnResizing(true);\r\n\r\n                // add document mousemove listener\r\n                document.addEventListener(\r\n                    \"mousemove\",\r\n                    this.setColumnResizerPositionByDrag,\r\n                );\r\n                // add document mouseup listener\r\n                document.addEventListener(\"mouseup\", this.columnResizerMouseup);\r\n\r\n                // stop text select when reszing\r\n                document.onselectstart = function () {\r\n                    return false;\r\n                };\r\n                document.ondragstart = function () {\r\n                    return false;\r\n                };\r\n            }\r\n        },\r\n\r\n        // column resizer mouseup\r\n        columnResizerMouseup(event) {\r\n            const {\r\n                isColumnResizing,\r\n                currentResizingColumn,\r\n                columnResizerStartX,\r\n                setColumnWidth,\r\n                columnWidthResizeOption,\r\n                columnMinWidth,\r\n            } = this;\r\n\r\n            if (!isColumnResizing || !currentResizingColumn) {\r\n                return false;\r\n            }\r\n\r\n            let differWidth;\r\n            // 拖动小于列最小宽度\r\n            if (\r\n                currentResizingColumn._realTimeWidth +\r\n                    (event.clientX - columnResizerStartX) <\r\n                columnMinWidth\r\n            ) {\r\n                differWidth =\r\n                    columnMinWidth - currentResizingColumn._realTimeWidth;\r\n            } else {\r\n                differWidth = event.clientX - columnResizerStartX;\r\n            }\r\n            differWidth = Math.floor(differWidth);\r\n\r\n            // 偏差阈值，低于则不处理\r\n            if (Math.abs(differWidth) > 1) {\r\n                let nextColumnWidth = currentResizingColumn._realTimeWidth;\r\n                nextColumnWidth += differWidth;\r\n\r\n                // set column width\r\n                setColumnWidth({\r\n                    colKey: currentResizingColumn.key,\r\n                    width: nextColumnWidth,\r\n                });\r\n\r\n                if (columnWidthResizeOption) {\r\n                    const { sizeChange } = columnWidthResizeOption;\r\n                    sizeChange &&\r\n                        sizeChange({\r\n                            column: currentResizingColumn,\r\n                            differWidth,\r\n                            columnWidth: nextColumnWidth,\r\n                        });\r\n                }\r\n            }\r\n\r\n            this.clearColumnResizerStatus();\r\n            // add document mousemove listener\r\n            document.removeEventListener(\r\n                \"mousemove\",\r\n                this.setColumnResizerPositionByDrag,\r\n            );\r\n            // add document mouseup listener\r\n            document.removeEventListener(\"mouseup\", this.columnResizerMouseup);\r\n        },\r\n\r\n        // clear column resizer status\r\n        clearColumnResizerStatus() {\r\n            this.currentResizingColumn = null;\r\n            this.columnResizerStartX = 0;\r\n            this.setIsColumnResizerHover(false);\r\n            this.setIsColumnResizing(false);\r\n\r\n            // enable text select when reszing\r\n            document.onselectstart = function () {\r\n                return true;\r\n            };\r\n            document.ondragstart = function () {\r\n                return true;\r\n            };\r\n        },\r\n    },\r\n\r\n    render() {\r\n        const {\r\n            isColumnResizerHover,\r\n            isColumnResizing,\r\n            columnResizerRect,\r\n            columnResizerHandlerWidth,\r\n        } = this;\r\n\r\n        const { left, top, height } = columnResizerRect;\r\n\r\n        const columnResizerHandlerProps = {\r\n            class: {\r\n                [clsName(\"column-resizer-handler\")]: true,\r\n                [\"active\"]: isColumnResizerHover || isColumnResizing,\r\n            },\r\n            style: {\r\n                left: left - columnResizerHandlerWidth + \"px\",\r\n                top: top + \"px\",\r\n                height: height + \"px\",\r\n            },\r\n            on: {\r\n                click: () => {\r\n                    //\r\n                },\r\n                mousedown: (event) => {\r\n                    this.columnResizerHandlerMousedown({ event });\r\n                },\r\n                mouseenter: () => {\r\n                    this.setIsColumnResizerHover(true);\r\n                },\r\n                mouseleave: () => {\r\n                    this.setIsColumnResizerHover(false);\r\n                },\r\n                mouseup: (event) => {\r\n                    this.columnResizerMouseup(event);\r\n                },\r\n            },\r\n        };\r\n\r\n        const columnResizerLineProps = {\r\n            class: [clsName(\"column-resizer-line\")],\r\n            style: {\r\n                display: isColumnResizing ? \"block\" : \"none\",\r\n                left: left + \"px\",\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div class={clsName(\"column-resizer\")}>\r\n                <div {...columnResizerHandlerProps} />\r\n                <div {...columnResizerLineProps} />\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { cloneDeep, debounce } from \"lodash\";\r\nimport {\r\n    initGroupColumns,\r\n    clsName,\r\n    getNotFixedTotalWidthByColumnKey,\r\n    recursiveRemoveColumnByKey,\r\n    setHeaderContextmenuOptions,\r\n    setBodyContextmenuOptions,\r\n    createEmptyRowData,\r\n    isContextmenuPanelClicked,\r\n    getRowKey,\r\n    getColKeysByHeaderColumn,\r\n    getColumnByColkey,\r\n    getLeftmostColKey,\r\n    isCellInSelectionRange,\r\n    isClearSelectionByBodyCellRightClick,\r\n    cellAutofill,\r\n    isOperationColumn,\r\n    getSelectionRangeData,\r\n    getSelectionRangeKeys,\r\n    getSelectionRangeIndexes,\r\n    setColumnFixed,\r\n    cancelColumnFixed,\r\n} from \"./util\";\r\nimport {\r\n    onBeforeCopy,\r\n    onAfterCopy,\r\n    onBeforePaste,\r\n    onAfterPaste,\r\n    onBeforeCut,\r\n    onAfterCut,\r\n    onBeforeDelete,\r\n    onAfterDelete,\r\n} from \"./util/clipboard\";\r\nimport {\r\n    getValByUnit,\r\n    isFunction,\r\n    isNumber,\r\n    scrollTo,\r\n    isEmptyValue,\r\n    isEmptyArray,\r\n    isBoolean,\r\n    isDefined,\r\n    createLocale,\r\n} from \"../../src/utils/index.js\";\r\nimport { KEY_CODES, MOUSE_EVENT_CLICK_TYPE } from \"../../src/utils/constant\";\r\nimport { getScrollbarWidth } from \"../../src/utils/scroll-bar\";\r\nimport {\r\n    requestAnimationTimeout,\r\n    cancelAnimationTimeout,\r\n} from \"../../src/utils/request-animation-timeout\";\r\nimport { isInputKeyCode } from \"../../src/utils/event-key-codes\";\r\nimport Hooks from \"../../src/utils/hooks-manager\";\r\nimport { getMouseEventClickType } from \"../../src/utils/mouse-event\";\r\nimport emitter from \"../../src/mixins/emitter\";\r\nimport {\r\n    COMPS_NAME,\r\n    HOOKS_NAME,\r\n    EMIT_EVENTS,\r\n    COMPS_CUSTOM_ATTRS,\r\n    INSTANCE_METHODS,\r\n    CELL_SELECTION_DIRECTION,\r\n    LOCALE_COMP_NAME,\r\n    CONTEXTMENU_TYPES,\r\n    CONTEXTMENU_NODE_TYPES,\r\n    AUTOFILLING_DIRECTION,\r\n    CURRENT_CELL_SELECTION_TYPES,\r\n    COLUMN_FIXED_TYPE,\r\n} from \"./util/constant\";\r\nimport Colgroup from \"./colgroup\";\r\nimport Header from \"./header\";\r\nimport Body from \"./body\";\r\nimport Footer from \"./footer\";\r\nimport EditInput from \"./editor/index\";\r\nimport Selection from \"./selection/index\";\r\nimport clickoutside from \"../../src/directives/clickoutside\";\r\nimport VueDomResizeObserver from \"../../src/comps/resize-observer\";\r\nimport VeContextmenu from \"vue-easytable/packages/ve-contextmenu\";\r\nimport ColumnResizer from \"./column-resizer\";\r\n\r\nconst t = createLocale(LOCALE_COMP_NAME);\r\n\r\nexport default {\r\n    name: COMPS_NAME.VE_TABLE,\r\n    directives: {\r\n        \"click-outside\": clickoutside,\r\n    },\r\n    mixins: [emitter],\r\n    props: {\r\n        tableData: {\r\n            required: true,\r\n            type: Array,\r\n        },\r\n        footerData: {\r\n            type: Array,\r\n            default: function () {\r\n                return [];\r\n            },\r\n        },\r\n        showHeader: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        columns: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        // row key field for row expand、row selection\r\n        rowKeyFieldName: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        // table scroll width\r\n        scrollWidth: {\r\n            type: [Number, String],\r\n            default: null,\r\n        },\r\n        // table max height\r\n        maxHeight: {\r\n            type: [Number, String],\r\n            default: null,\r\n        },\r\n        // fixed header\r\n        fixedHeader: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        // fixed footer\r\n        fixedFooter: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        // border around\r\n        borderAround: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        // border horizontal\r\n        borderX: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        // border vertical\r\n        borderY: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        // event custom option\r\n        eventCustomOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell style option\r\n        cellStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell span option\r\n        cellSpanOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // row style option\r\n        rowStyleOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        /*\r\n        virual scroll option\r\n        {\r\n            enable:true,\r\n            bufferCount:10, // 缓冲的数据\r\n            minRowHeight:40,\r\n            scrolling:(startRowIndex,visibleStartIndex,visibleEndIndex,visibleAboveCount,visibleBelowCount)=>{}\r\n        }\r\n        */\r\n        virtualScrollOption: {\r\n            type: Object,\r\n            default: null,\r\n        },\r\n        // sort option\r\n        sortOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // expand row option\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // checkbox option\r\n        checkboxOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // radio option\r\n        radioOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell selection option\r\n        cellSelectionOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // cell autofill option\r\n        cellAutofillOption: {\r\n            type: [Object, Boolean],\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // edit option\r\n        editOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // column hidden option\r\n        columnHiddenOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // contextmenu header option\r\n        contextmenuHeaderOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // contextmenu body option\r\n        contextmenuBodyOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // clipboard option\r\n        clipboardOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n        // column width resize option\r\n        columnWidthResizeOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // Hooks instance\r\n            hooks: {},\r\n            // is parent rendered\r\n            parentRendered: false,\r\n            // table viewport width except scroll bar width\r\n            tableViewportWidth: 0,\r\n            /*\r\n            列配置变化次数\r\n            依赖columns 配置渲染，都需要重新计算：粘性布局时，重新触发 on-dom-resize-change 事件\r\n            */\r\n            columnsOptionResetTime: 0,\r\n            tableRootRef: \"tableRootRef\",\r\n            tableContainerWrapperRef: \"tableContainerWrapperRef\",\r\n            tableContainerRef: \"tableContainerRef\",\r\n            tableRef: \"tableRef\",\r\n            tableBodyRef: \"tableBodyRef\",\r\n            tableContentWrapperRef: \"tableContentWrapperRef\",\r\n            virtualPhantomRef: \"virtualPhantomRef\",\r\n            editInputRef: \"editInputRef\",\r\n            cellSelectionRef: \"cellSelectionRef\",\r\n            contextmenuRef: \"contextmenuRef\",\r\n            cloneColumns: [],\r\n            // is group header\r\n            isGroupHeader: false,\r\n            /*\r\n            header rows created by groupColumns\r\n            */\r\n            headerRows: [\r\n                /* {\r\n                rowHeight:40\r\n            } */\r\n            ],\r\n            /*\r\n            footer rows created by footerData\r\n            */\r\n            footerRows: [\r\n                /* {\r\n                rowHeight:40\r\n             } */\r\n            ],\r\n            // colgroups\r\n            colgroups: [],\r\n            // groupColumns\r\n            groupColumns: [],\r\n            /*\r\n            存储当前隐藏列信息\r\n            hidden columns\r\n            */\r\n            hiddenColumns: [],\r\n            /*\r\n            // virtual scroll positions（非响应式）\r\n            virtualScrollPositions = [\r\n                {\r\n                    rowKey: \"\", // 当前行数据 rowKey\r\n                    top: 0, // 距离上一个项的高度\r\n                    bottom: 100, // 距离下一个项的高度\r\n                    height: 100 // 自身高度\r\n                }\r\n            ],\r\n            */\r\n            // virtual scroll visible data\r\n            virtualScrollVisibleData: [],\r\n            // virtual scroll visible indexs\r\n            virtualScrollVisibleIndexs: {\r\n                start: -1,\r\n                end: -1,\r\n            },\r\n            // default virtual scroll buffer scale\r\n            defaultVirtualScrollBufferScale: 1,\r\n            // default virtual scroll min row height\r\n            defaultVirtualScrollMinRowHeight: 40,\r\n            // default placeholder per scrolling row count\r\n            defaultPlaceholderPerScrollingRowCount: 8,\r\n            //起始索引\r\n            virtualScrollStartIndex: 0,\r\n            // preview virtual scroll start index\r\n            previewVirtualScrollStartIndex: 0,\r\n            //结束索引\r\n            virtualScrollEndIndex: 0,\r\n            // is scrolling\r\n            showVirtualScrollingPlaceholder: false,\r\n            // disable pointer events timeout id\r\n            disablePointerEventsTimeoutId: null,\r\n            // is scrolling left\r\n            isLeftScrolling: false,\r\n            // is scrolling right\r\n            isRightScrolling: false,\r\n            // is scrolling vertically\r\n            isVerticalScrolling: false,\r\n            // has horizontal scroll bar\r\n            hasXScrollBar: false,\r\n            // has vertical scroll bar\r\n            hasYScrollBar: false,\r\n            // scroll bar width\r\n            scrollBarWidth: 0,\r\n            // preview table container scrollLeft （处理左列或右列固定效果）\r\n            previewTableContainerScrollLeft: null,\r\n            // header cell selection colKeys\r\n            headerIndicatorColKeys: {\r\n                startColKey: \"\",\r\n                startColKeyIndex: -1,\r\n                endColKey: \"\",\r\n                endColKeyIndex: -1,\r\n            },\r\n            // body indicator rowKeys\r\n            bodyIndicatorRowKeys: {\r\n                startRowKey: \"\",\r\n                startRowKeyIndex: -1,\r\n                endRowKey: \"\",\r\n                endRowKeyIndex: -1,\r\n            },\r\n            // cell selection data\r\n            cellSelectionData: {\r\n                currentCell: {\r\n                    rowKey: \"\",\r\n                    colKey: \"\",\r\n                    rowIndex: -1,\r\n                },\r\n                normalEndCell: {\r\n                    rowKey: \"\",\r\n                    colKey: \"\",\r\n                    rowIndex: -1,\r\n                },\r\n                autoFillEndCell: {\r\n                    rowKey: \"\",\r\n                    colKey: \"\",\r\n                },\r\n            },\r\n            // cell selection range data\r\n            cellSelectionRangeData: {\r\n                leftColKey: \"\",\r\n                rightColKey: \"\",\r\n                topRowKey: \"\",\r\n                bottomRowKey: \"\",\r\n            },\r\n            // is header cell mousedown\r\n            isHeaderCellMousedown: false,\r\n            // is body cell mousedown\r\n            isBodyCellMousedown: false,\r\n            // is body operation column mousedown\r\n            isBodyOperationColumnMousedown: false,\r\n            // is cell selection corner mousedown\r\n            isAutofillStarting: false,\r\n            // autofilling direction\r\n            autofillingDirection: null,\r\n            // current cell selection type\r\n            currentCellSelectionType: \"\",\r\n            /*\r\n            table offest height（开启虚拟滚动时使用）\r\n            1、当 :max-height=\"500\" 时使用 max-height \r\n            2、当 max-height=\"calc(100vh - 210px)\" 或者 max-height=\"80%\" 时使用 tableOffestHeight\r\n            */\r\n            tableOffestHeight: 0,\r\n            // table height\r\n            tableHeight: 0,\r\n            // highlight row key\r\n            highlightRowKey: \"\",\r\n            /* \r\n            editing cell\r\n            */\r\n            editingCell: {\r\n                rowKey: \"\",\r\n                colKey: \"\",\r\n                row: null,\r\n                column: null,\r\n            },\r\n            // 编辑单元格每次开始编辑前的初始值\r\n            editorInputStartValue: \"\",\r\n            /* \r\n            是否允许按下方向键时，停止编辑并移动选中单元格。当双击可编辑单元格或者点击输入文本框时设置为false值\r\n\r\n            像excel一样：如果直接在可编辑单元格上输入内容后，按下上、下、左、右按键可以直接选中其他单元格，并停止当前单元格编辑状态\r\n            like Excel:If you directly enter content in an editable cell, press the up, down, left and right buttons to directly select other cells and stop editing the current cell\r\n            */\r\n            enableStopEditing: true,\r\n            // contextmenu event target\r\n            contextmenuEventTarget: \"\",\r\n            // contextmenu options\r\n            contextmenuOptions: [],\r\n            // column resize cursor\r\n            isColumnResizerHover: false,\r\n            // is column resizing\r\n            isColumnResizing: false,\r\n        };\r\n    },\r\n    computed: {\r\n        // actual render table data\r\n        actualRenderTableData() {\r\n            return this.isVirtualScroll\r\n                ? this.virtualScrollVisibleData\r\n                : this.tableData;\r\n        },\r\n        // return row keys\r\n        allRowKeys() {\r\n            let result = [];\r\n\r\n            const { tableData, rowKeyFieldName } = this;\r\n\r\n            if (rowKeyFieldName) {\r\n                result = tableData.map((x) => {\r\n                    return x[rowKeyFieldName];\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // virtual scroll buffer count\r\n        virtualScrollBufferCount() {\r\n            let result = 0;\r\n\r\n            const {\r\n                virtualScrollOption,\r\n                defaultVirtualScrollBufferScale,\r\n                virtualScrollVisibleCount,\r\n            } = this;\r\n\r\n            if (virtualScrollOption) {\r\n                const { bufferScale } = virtualScrollOption;\r\n\r\n                let realBufferScale =\r\n                    isNumber(bufferScale) && bufferScale > 0\r\n                        ? bufferScale\r\n                        : defaultVirtualScrollBufferScale;\r\n\r\n                result = realBufferScale * virtualScrollVisibleCount;\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // virtual scroll visible count\r\n        virtualScrollVisibleCount() {\r\n            let result = 0;\r\n\r\n            const {\r\n                isVirtualScroll,\r\n                virtualScrollOption,\r\n                defaultVirtualScrollMinRowHeight,\r\n                maxHeight,\r\n                tableOffestHeight,\r\n            } = this;\r\n\r\n            if (isVirtualScroll && maxHeight) {\r\n                const minRowHeight = isNumber(virtualScrollOption.minRowHeight)\r\n                    ? virtualScrollOption.minRowHeight\r\n                    : defaultVirtualScrollMinRowHeight;\r\n\r\n                if (isNumber(maxHeight)) {\r\n                    result = Math.ceil(maxHeight / minRowHeight);\r\n                } else if (tableOffestHeight) {\r\n                    // 修复当动态高度 当 max-height=\"calc(100vh - 210px)\" 或者 max-height=\"80%\" 时无法计算的问题\r\n                    result = Math.ceil(tableOffestHeight / minRowHeight);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // table container wrapper style\r\n        tableContainerWrapperStyle() {\r\n            return {\r\n                width: \"100%\",\r\n            };\r\n        },\r\n        // table container style\r\n        tableContainerStyle() {\r\n            let maxHeight = getValByUnit(this.maxHeight);\r\n\r\n            let tableContainerHeight = null;\r\n            if (this.isVirtualScroll) {\r\n                if (maxHeight) {\r\n                    tableContainerHeight = maxHeight;\r\n                } else {\r\n                    console.error(\r\n                        \"maxHeight prop is required when 'virtualScrollOption.enable = true'\",\r\n                    );\r\n                }\r\n            } else {\r\n                /* \r\n                fixed:虚拟滚动表格行展开的 ve-table 存在固定头时（sticky 冲突），表格样式错乱的问题\r\n                fixed:When there is a fixed header in the ve-table expanded by the row of the virtual rolling table(header sticky conflict),Incorrect table presentation\r\n                */\r\n                const { tableHeight, hasXScrollBar } = this;\r\n                tableContainerHeight = tableHeight;\r\n                /*\r\n                    有横向滚动条时，表格高度需要加上滚动条的宽度\r\n                    When there is a horizontal scroll bar, the table height needs to be added with the width of the scroll bar\r\n                    */\r\n                if (hasXScrollBar) {\r\n                    tableContainerHeight += this.getScrollBarWidth();\r\n                }\r\n\r\n                tableContainerHeight = getValByUnit(tableContainerHeight);\r\n            }\r\n\r\n            return {\r\n                \"max-height\": maxHeight,\r\n                // if virtual scroll\r\n                height: tableContainerHeight,\r\n            };\r\n        },\r\n        // table style\r\n        tableStyle() {\r\n            return {\r\n                width: getValByUnit(this.scrollWidth),\r\n            };\r\n        },\r\n        // table class\r\n        tableClass() {\r\n            return {\r\n                [clsName(\"border-x\")]: this.borderX,\r\n                [clsName(\"border-y\")]: this.borderY,\r\n            };\r\n        },\r\n        // table container class\r\n        tableContainerClass() {\r\n            const {\r\n                isVirtualScroll,\r\n                isLeftScrolling,\r\n                isRightScrolling,\r\n                isVerticalScrolling,\r\n                isCellEditing,\r\n                isAutofillStarting,\r\n                enableCellSelection,\r\n            } = this;\r\n\r\n            return {\r\n                [clsName(\"container\")]: true,\r\n                [clsName(\"virtual-scroll\")]: isVirtualScroll,\r\n                [clsName(\"container-left-scrolling\")]: isLeftScrolling,\r\n                [clsName(\"container-right-scrolling\")]: isRightScrolling,\r\n                [clsName(\"container-vertical-scrolling\")]: isVerticalScrolling,\r\n                [clsName(\"is-cell-editing\")]: isCellEditing,\r\n                [clsName(\"autofilling\")]: isAutofillStarting,\r\n                // 如果开启单元格选择，则关闭 user-select\r\n                [clsName(\"enable-cell-selection\")]: enableCellSelection,\r\n            };\r\n        },\r\n        // table body class\r\n        tableBodyClass() {\r\n            let result = null;\r\n\r\n            const { rowStyleOption } = this;\r\n\r\n            let hoverHighlight = true;\r\n            let clickHighlight = true;\r\n            let stripe = false;\r\n\r\n            if (rowStyleOption) {\r\n                hoverHighlight = rowStyleOption.hoverHighlight;\r\n                clickHighlight = rowStyleOption.clickHighlight;\r\n                stripe = rowStyleOption.stripe;\r\n            }\r\n\r\n            result = {\r\n                [clsName(\"stripe\")]: stripe === true, // 默认不开启\r\n                [clsName(\"row-hover\")]: hoverHighlight !== false, // 默认开启\r\n                [clsName(\"row-highlight\")]: clickHighlight !== false, // 默认开启\r\n            };\r\n\r\n            return result;\r\n        },\r\n        // is virtual scroll\r\n        isVirtualScroll() {\r\n            const { virtualScrollOption } = this;\r\n            return virtualScrollOption && virtualScrollOption.enable;\r\n        },\r\n        // has fixed column\r\n        hasFixedColumn() {\r\n            return this.colgroups.some(\r\n                (x) =>\r\n                    x.fixed === COLUMN_FIXED_TYPE.LEFT ||\r\n                    x.fixed === COLUMN_FIXED_TYPE.RIGHT,\r\n            );\r\n        },\r\n        // has left fixed column\r\n        hasLeftFixedColumn() {\r\n            return this.colgroups.some(\r\n                (x) => x.fixed === COLUMN_FIXED_TYPE.LEFT,\r\n            );\r\n        },\r\n        // has right fixed column\r\n        hasRightFixedColumn() {\r\n            return this.colgroups.some(\r\n                (x) => x.fixed === COLUMN_FIXED_TYPE.RIGHT,\r\n            );\r\n        },\r\n        // is editing cell\r\n        isCellEditing() {\r\n            const { editingCell } = this;\r\n\r\n            return (\r\n                !isEmptyValue(editingCell.rowKey) &&\r\n                !isEmptyValue(editingCell.colKey)\r\n            );\r\n        },\r\n        // has edit column\r\n        hasEditColumn() {\r\n            return this.colgroups.some((x) => x.edit);\r\n        },\r\n        // enable header contextmenu\r\n        enableHeaderContextmenu() {\r\n            let result = false;\r\n\r\n            const { contextmenuHeaderOption } = this;\r\n            if (contextmenuHeaderOption) {\r\n                const { contextmenus } = contextmenuHeaderOption;\r\n\r\n                if (Array.isArray(contextmenus) && contextmenus.length) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // enable body contextmenu\r\n        enableBodyContextmenu() {\r\n            let result = false;\r\n\r\n            const { contextmenuBodyOption } = this;\r\n            if (contextmenuBodyOption) {\r\n                const { contextmenus } = contextmenuBodyOption;\r\n\r\n                if (Array.isArray(contextmenus) && contextmenus.length) {\r\n                    result = true;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // contextmenu type\r\n        contextMenuType() {\r\n            if (this.headerIndicatorColKeys.startColKeyIndex > -1) {\r\n                return CONTEXTMENU_TYPES.HEADER_CONTEXTMENU;\r\n            } else {\r\n                return CONTEXTMENU_TYPES.BODY_CONTEXTMENU;\r\n            }\r\n        },\r\n        /*\r\n        enable cell selection\r\n        单元格编辑、剪贴板都依赖单元格选择\r\n        */\r\n        enableCellSelection() {\r\n            let result = true;\r\n\r\n            const { cellSelectionOption, rowKeyFieldName } = this;\r\n\r\n            if (isEmptyValue(rowKeyFieldName)) {\r\n                result = false;\r\n            } else if (\r\n                cellSelectionOption &&\r\n                isBoolean(cellSelectionOption.enable) &&\r\n                cellSelectionOption.enable === false\r\n            ) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        },\r\n        // enable clipboard\r\n        enableClipboard() {\r\n            return this.rowKeyFieldName;\r\n        },\r\n        // eanble width resize\r\n        enableColumnResize() {\r\n            let result = false;\r\n            const { columnWidthResizeOption } = this;\r\n            if (columnWidthResizeOption) {\r\n                const { enable } = columnWidthResizeOption;\r\n                if (isBoolean(enable)) {\r\n                    result = enable;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        // header total height\r\n        headerTotalHeight() {\r\n            let result = 0;\r\n            if (this.showHeader) {\r\n                result = this.headerRows.reduce((total, currentVal) => {\r\n                    return currentVal.rowHeight + total;\r\n                }, 0);\r\n            }\r\n            return result;\r\n        },\r\n        // footer total height\r\n        footerTotalHeight() {\r\n            return this.footerRows.reduce((total, currentVal) => {\r\n                return currentVal.rowHeight + total;\r\n            }, 0);\r\n        },\r\n    },\r\n    watch: {\r\n        // watch clone table data\r\n        tableData: {\r\n            handler(newVal, oldVal) {\r\n                this.initVirtualScrollPositions();\r\n                // 第一次不需要触发，仅数据变更触发\r\n                if (oldVal) {\r\n                    this.initVirtualScroll();\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        allRowKeys: {\r\n            handler(newVal) {\r\n                if (Array.isArray(newVal)) {\r\n                    const { currentCell } = this.cellSelectionData;\r\n                    // 行被移除，清空单元格选中\r\n                    if (currentCell.rowIndex > -1) {\r\n                        if (newVal.indexOf(currentCell.rowKey) === -1) {\r\n                            this.clearCellSelectionCurrentCell();\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            immediate: false,\r\n        },\r\n        columns: {\r\n            handler(newVal, oldVal) {\r\n                this.initColumns();\r\n                this.initGroupColumns();\r\n                this.initColumnWidthByColumnResize();\r\n\r\n                // 排除首次\r\n                if (newVal != oldVal && oldVal) {\r\n                    this.columnsOptionResetTime++;\r\n                    // 需要等待 initColumns 和 initGroupColumns 先执行\r\n                    this.initScrolling();\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        cloneColumns: {\r\n            handler() {\r\n                this.initGroupColumns();\r\n                // 右键（取消）固定列会操作 cloneColumns\r\n                this.initColumnWidthByColumnResize();\r\n\r\n                this.columnsOptionResetTime++;\r\n                // 需要等待 initColumns 和 initGroupColumns 先执行\r\n                this.initScrolling();\r\n            },\r\n            immediate: false,\r\n        },\r\n        // group columns change watch\r\n        groupColumns: {\r\n            handler(val) {\r\n                if (!isEmptyArray(val)) {\r\n                    this.initHeaderRows();\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        // footer data\r\n        footerData: {\r\n            handler(val) {\r\n                if (!isEmptyArray(val)) {\r\n                    this.initFooterRows();\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        /*\r\n        watch virtualScrollOption enable\r\n        允许按需开启虚拟滚动\r\n        */\r\n        \"virtualScrollOption.enable\": {\r\n            handler(newVal) {\r\n                // enable virtual scroll\r\n                if (newVal) {\r\n                    this.initVirtualScrollPositions();\r\n                    this.initVirtualScroll();\r\n                }\r\n                // disable virtual scroll\r\n                else {\r\n                    // clear table content top value\r\n                    this.setTableContentTopValue({ top: 0 });\r\n                }\r\n            },\r\n            immediate: false,\r\n        },\r\n        // is auto fill starting\r\n        isAutofillStarting: {\r\n            handler(val) {\r\n                if (!val) {\r\n                    this.setCellSelectionByAutofill();\r\n                    this.clearCellSelectionAutofillEndCell();\r\n                }\r\n            },\r\n        },\r\n        // watch current cell\r\n        \"cellSelectionData.currentCell\": {\r\n            handler: function () {\r\n                this.setCurrentCellSelectionType();\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // watch normal end cell\r\n        \"cellSelectionData.normalEndCell\": {\r\n            handler: function () {\r\n                this.setCurrentCellSelectionType();\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // watch header indicator colKeys\r\n        headerIndicatorColKeys: {\r\n            handler: function () {\r\n                this.setRangeCellSelectionByHeaderIndicator();\r\n            },\r\n            deep: true,\r\n        },\r\n        // watch body indicator rowKeys\r\n        bodyIndicatorRowKeys: {\r\n            handler: function () {\r\n                this.setRangeCellSelectionByBodyIndicator();\r\n            },\r\n            deep: true,\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        // int header rows\r\n        initHeaderRows() {\r\n            const { groupColumns } = this;\r\n\r\n            if (Array.isArray(groupColumns)) {\r\n                this.headerRows = groupColumns.map(() => {\r\n                    return { rowHeight: 0 };\r\n                });\r\n            }\r\n        },\r\n\r\n        // int footer rows\r\n        initFooterRows() {\r\n            const { footerData } = this;\r\n\r\n            if (Array.isArray(footerData)) {\r\n                this.footerRows = footerData.map(() => {\r\n                    return { rowHeight: 0 };\r\n                });\r\n            }\r\n        },\r\n\r\n        // header tr height resize\r\n        headerRowHeightChange({ rowIndex, height }) {\r\n            this.headerRows.splice(rowIndex, 1, { rowHeight: height });\r\n        },\r\n\r\n        // footer row height resize\r\n        footRowHeightChange({ rowIndex, height }) {\r\n            this.footerRows.splice(rowIndex, 1, { rowHeight: height });\r\n        },\r\n\r\n        // body cell width change\r\n        bodyCellWidthChange(colWidths) {\r\n            this.colgroups = this.colgroups.map((item) => {\r\n                item._realTimeWidth = colWidths.get(item.key);\r\n                return item;\r\n            });\r\n\r\n            this.hooks.triggerHook(HOOKS_NAME.TABLE_CELL_WIDTH_CHANGE);\r\n        },\r\n\r\n        // set column width for column resize\r\n        setColumnWidth({ colKey, width }) {\r\n            this.colgroups = this.colgroups.map((item) => {\r\n                if (item.key === colKey) {\r\n                    item._columnResizeWidth = width;\r\n                }\r\n                return item;\r\n            });\r\n            this.$nextTick(() => {\r\n                this.setScrollBarStatus();\r\n            });\r\n            this.hooks.triggerHook(HOOKS_NAME.TABLE_CELL_WIDTH_CHANGE);\r\n        },\r\n\r\n        // update colgroups by sort change\r\n        updateColgroupsBySortChange(sortColumns) {\r\n            this.colgroups = this.colgroups.map((item) => {\r\n                // update colgroups by sort columns\r\n                if (Object.keys(sortColumns).indexOf(item.field) > -1) {\r\n                    item.sortBy = sortColumns[item.field];\r\n                }\r\n                return item;\r\n            });\r\n        },\r\n\r\n        // init column width by column resize\r\n        initColumnWidthByColumnResize() {\r\n            const { enableColumnResize } = this;\r\n\r\n            const columnDefaultWidth = 50;\r\n            if (enableColumnResize) {\r\n                this.colgroups = this.colgroups.map((item) => {\r\n                    let columnWidth = columnDefaultWidth;\r\n                    if (isNumber(item.width)) {\r\n                        columnWidth = item.width;\r\n                    }\r\n                    item._columnResizeWidth = columnWidth;\r\n                    return item;\r\n                });\r\n            }\r\n        },\r\n\r\n        // init columns\r\n        initColumns() {\r\n            const { columnHiddenOption } = this;\r\n            if (columnHiddenOption) {\r\n                const { defaultHiddenColumnKeys } = columnHiddenOption;\r\n\r\n                if (!isEmptyArray(defaultHiddenColumnKeys)) {\r\n                    this.hiddenColumns = defaultHiddenColumnKeys;\r\n                }\r\n            }\r\n\r\n            this.showOrHideColumns();\r\n        },\r\n\r\n        // show or hide columns\r\n        showOrHideColumns() {\r\n            let cloneColumns = cloneDeep(this.columns);\r\n\r\n            cloneColumns = cloneColumns.map((col) => {\r\n                // 操作列默认左固定\r\n                if (col.operationColumn) {\r\n                    col.fixed = COLUMN_FIXED_TYPE.LEFT;\r\n                }\r\n                return col;\r\n            });\r\n\r\n            const { hiddenColumns } = this;\r\n\r\n            if (!isEmptyArray(hiddenColumns)) {\r\n                //  recursive remove column key\r\n                hiddenColumns.forEach((key) => {\r\n                    cloneColumns = recursiveRemoveColumnByKey(\r\n                        cloneColumns,\r\n                        key,\r\n                    );\r\n                });\r\n            }\r\n\r\n            this.cloneColumns = cloneColumns;\r\n        },\r\n\r\n        // 初始化分组表头\r\n        initGroupColumns() {\r\n            const result = initGroupColumns(this.cloneColumns);\r\n\r\n            // set is group header\r\n            this.isGroupHeader = result.isGroupHeader;\r\n            // set colgroups\r\n            this.colgroups = result.colgroups;\r\n            // set groupColumns\r\n            this.groupColumns = result.groupColumns;\r\n        },\r\n\r\n        // scroll bar width\r\n        getScrollBarWidth() {\r\n            let result = 0;\r\n\r\n            const { scrollBarWidth } = this;\r\n\r\n            if (scrollBarWidth) {\r\n                result = scrollBarWidth;\r\n            } else {\r\n                result = getScrollbarWidth();\r\n                this.scrollBarWidth = result;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /*\r\n         * @selectedAllChange\r\n         * @desc  selected all change\r\n         * @param {bool} isSelected - is selected\r\n         */\r\n        selectedAllChange({ isSelected }) {\r\n            this.broadcast(\r\n                COMPS_NAME.VE_TABLE_BODY,\r\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE,\r\n                {\r\n                    isSelected,\r\n                },\r\n            );\r\n        },\r\n\r\n        /*\r\n         * @setSelectedAllInfo\r\n         * @desc  set selected all info\r\n         * @param {bool} isSelected - is selected\r\n         * @param {bool} isIndeterminate - is indeterminate\r\n         */\r\n        setSelectedAllInfo({ isSelected, isIndeterminate }) {\r\n            this.broadcast(\r\n                COMPS_NAME.VE_TABLE_HEADER_CHECKBOX_CONTENT,\r\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO,\r\n                {\r\n                    isSelected,\r\n                    isIndeterminate,\r\n                },\r\n            );\r\n        },\r\n\r\n        // cell selection current cell change\r\n        cellSelectionCurrentCellChange({ rowKey, colKey }) {\r\n            this.cellSelectionData.currentCell.colKey = colKey;\r\n            this.cellSelectionData.currentCell.rowKey = rowKey;\r\n            this.cellSelectionData.currentCell.rowIndex =\r\n                this.allRowKeys.indexOf(rowKey);\r\n        },\r\n\r\n        // cell selection end cell change\r\n        cellSelectionNormalEndCellChange({ rowKey, colKey }) {\r\n            this.cellSelectionData.normalEndCell.colKey = colKey;\r\n            this.cellSelectionData.normalEndCell.rowKey = rowKey;\r\n            this.cellSelectionData.normalEndCell.rowIndex =\r\n                this.allRowKeys.indexOf(rowKey);\r\n        },\r\n\r\n        // cell selection auto fill cell change\r\n        cellSelectionAutofillCellChange({ rowKey, colKey }) {\r\n            this.cellSelectionData.autoFillEndCell.colKey = colKey;\r\n            this.cellSelectionData.autoFillEndCell.rowKey = rowKey;\r\n        },\r\n\r\n        // clear cell selection current cell\r\n        clearCellSelectionCurrentCell() {\r\n            this.cellSelectionCurrentCellChange({\r\n                rowKey: \"\",\r\n                colKey: \"\",\r\n                rowIndex: -1,\r\n            });\r\n        },\r\n\r\n        // clear cell selection normal end cell\r\n        clearCellSelectionNormalEndCell() {\r\n            this.cellSelectionNormalEndCellChange({\r\n                rowKey: \"\",\r\n                colKey: \"\",\r\n                rowIndex: -1,\r\n            });\r\n        },\r\n\r\n        // clear cell selection autofill end cell\r\n        clearCellSelectionAutofillEndCell() {\r\n            this.cellSelectionAutofillCellChange({ rowKey: \"\", colKey: \"\" });\r\n        },\r\n\r\n        // header indicator colKeys change\r\n        headerIndicatorColKeysChange({ startColKey, endColKey }) {\r\n            const { colgroups } = this;\r\n            this.headerIndicatorColKeys.startColKey = startColKey;\r\n            this.headerIndicatorColKeys.startColKeyIndex = colgroups.findIndex(\r\n                (x) => x.key === startColKey,\r\n            );\r\n            this.headerIndicatorColKeys.endColKey = endColKey;\r\n            this.headerIndicatorColKeys.endColKeyIndex = colgroups.findIndex(\r\n                (x) => x.key === endColKey,\r\n            );\r\n        },\r\n\r\n        // clear header indicator colKeys\r\n        clearHeaderIndicatorColKeys() {\r\n            this.headerIndicatorColKeys.startColKey = \"\";\r\n            this.headerIndicatorColKeys.startColKeyIndex = -1;\r\n            this.headerIndicatorColKeys.endColKey = \"\";\r\n            this.headerIndicatorColKeys.endColKeyIndex = -1;\r\n        },\r\n\r\n        // body indicator rowKeys change\r\n        bodyIndicatorRowKeysChange({ startRowKey, endRowKey }) {\r\n            const { allRowKeys } = this;\r\n            this.bodyIndicatorRowKeys.startRowKey = startRowKey;\r\n            this.bodyIndicatorRowKeys.startRowKeyIndex =\r\n                allRowKeys.indexOf(startRowKey);\r\n            this.bodyIndicatorRowKeys.endRowKey = endRowKey;\r\n            this.bodyIndicatorRowKeys.endRowKeyIndex =\r\n                allRowKeys.indexOf(endRowKey);\r\n        },\r\n\r\n        // clear body indicator RowKeys\r\n        clearBodyIndicatorRowKeys() {\r\n            this.bodyIndicatorRowKeys.startRowKey = \"\";\r\n            this.bodyIndicatorRowKeys.startRowKeyIndex = -1;\r\n            this.bodyIndicatorRowKeys.endRowKey = \"\";\r\n            this.bodyIndicatorRowKeys.endRowKeyIndex = -1;\r\n        },\r\n\r\n        // set cell selection by autofill\r\n        setCellSelectionByAutofill() {\r\n            const {\r\n                cellAutofillOption,\r\n                cellSelectionRangeData,\r\n                colgroups,\r\n                allRowKeys,\r\n                autofillingDirection,\r\n                currentCellSelectionType,\r\n            } = this;\r\n            const { autoFillEndCell, currentCell } = this.cellSelectionData;\r\n\r\n            const { rowKey, colKey } = autoFillEndCell;\r\n\r\n            if (isEmptyValue(rowKey) || isEmptyValue(colKey)) {\r\n                return false;\r\n            }\r\n\r\n            let currentCellData = {};\r\n            let normalEndCellData = {};\r\n\r\n            const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\r\n                cellSelectionRangeData;\r\n\r\n            // cell selection range auto fill\r\n            if (\r\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.RANGE\r\n            ) {\r\n                if (\r\n                    !isCellInSelectionRange({\r\n                        cellData: autoFillEndCell,\r\n                        cellSelectionRangeData,\r\n                        colgroups,\r\n                        allRowKeys,\r\n                    })\r\n                ) {\r\n                    if (autofillingDirection === AUTOFILLING_DIRECTION.RIGHT) {\r\n                        currentCellData = {\r\n                            rowKey: topRowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                        normalEndCellData = { rowKey: bottomRowKey, colKey };\r\n                    } else if (\r\n                        autofillingDirection === AUTOFILLING_DIRECTION.DOWN\r\n                    ) {\r\n                        currentCellData = {\r\n                            rowKey: topRowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                        normalEndCellData = { rowKey, colKey: rightColKey };\r\n                    } else if (\r\n                        autofillingDirection === AUTOFILLING_DIRECTION.UP\r\n                    ) {\r\n                        currentCellData = {\r\n                            rowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                        normalEndCellData = {\r\n                            rowKey: bottomRowKey,\r\n                            colKey: rightColKey,\r\n                        };\r\n                    } else if (\r\n                        autofillingDirection === AUTOFILLING_DIRECTION.LEFT\r\n                    ) {\r\n                        currentCellData = { rowKey: topRowKey, colKey };\r\n                        normalEndCellData = {\r\n                            rowKey: bottomRowKey,\r\n                            colKey: rightColKey,\r\n                        };\r\n                    }\r\n                } else {\r\n                    // return if within the range\r\n                    return false;\r\n                }\r\n            }\r\n            // cell selection single auto fill\r\n            else if (\r\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.SINGLE\r\n            ) {\r\n                if (\r\n                    currentCell.rowKey !== rowKey ||\r\n                    currentCell.colKey !== colKey\r\n                ) {\r\n                    if (autofillingDirection === AUTOFILLING_DIRECTION.RIGHT) {\r\n                        currentCellData = {\r\n                            rowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                        normalEndCellData = {\r\n                            rowKey,\r\n                            colKey,\r\n                        };\r\n                    } else if (\r\n                        autofillingDirection === AUTOFILLING_DIRECTION.DOWN\r\n                    ) {\r\n                        currentCellData = {\r\n                            rowKey: topRowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                        normalEndCellData = {\r\n                            rowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                    } else if (\r\n                        autofillingDirection === AUTOFILLING_DIRECTION.UP\r\n                    ) {\r\n                        currentCellData = {\r\n                            rowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                        normalEndCellData = {\r\n                            rowKey: bottomRowKey,\r\n                            colKey: leftColKey,\r\n                        };\r\n                    } else if (\r\n                        autofillingDirection === AUTOFILLING_DIRECTION.LEFT\r\n                    ) {\r\n                        currentCellData = {\r\n                            rowKey,\r\n                            colKey,\r\n                        };\r\n                        normalEndCellData = {\r\n                            rowKey,\r\n                            colKey: rightColKey,\r\n                        };\r\n                    }\r\n                } else {\r\n                    // return if within the range\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            const cellAutofillParams = {\r\n                tableData: this.tableData,\r\n                allRowKeys: this.allRowKeys,\r\n                colgroups: this.colgroups,\r\n                rowKeyFieldName: this.rowKeyFieldName,\r\n                direction: autofillingDirection,\r\n                currentCellSelectionType,\r\n                cellSelectionRangeData,\r\n                nextCurrentCell: currentCellData,\r\n                nextNormalEndCell: normalEndCellData,\r\n            };\r\n\r\n            if (cellAutofillOption) {\r\n                const { beforeAutofill, afterAutofill } = cellAutofillOption;\r\n\r\n                if (isFunction(beforeAutofill)) {\r\n                    // before autofill\r\n                    const autofillResponse = cellAutofill({\r\n                        isReplaceData: false,\r\n                        ...cellAutofillParams,\r\n                    });\r\n                    const callback = beforeAutofill(autofillResponse);\r\n                    if (isBoolean(callback) && !callback) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // after autofill\r\n                const autofillResponse = cellAutofill({\r\n                    isReplaceData: true,\r\n                    ...cellAutofillParams,\r\n                });\r\n                if (isFunction(afterAutofill)) {\r\n                    afterAutofill(autofillResponse);\r\n                }\r\n            }\r\n\r\n            if (!isEmptyValue(currentCellData.rowKey)) {\r\n                this.cellSelectionCurrentCellChange({\r\n                    rowKey: currentCellData.rowKey,\r\n                    colKey: currentCellData.colKey,\r\n                });\r\n            }\r\n\r\n            if (!isEmptyValue(normalEndCellData.rowKey)) {\r\n                this.cellSelectionNormalEndCellChange({\r\n                    rowKey: normalEndCellData.rowKey,\r\n                    colKey: normalEndCellData.colKey,\r\n                });\r\n            }\r\n        },\r\n\r\n        // cell selection range data change\r\n        cellSelectionRangeDataChange(newData) {\r\n            this.cellSelectionRangeData = Object.assign(\r\n                this.cellSelectionRangeData,\r\n                newData,\r\n            );\r\n        },\r\n\r\n        // autofilling direction change\r\n        autofillingDirectionChange(direction) {\r\n            this.autofillingDirection = direction;\r\n        },\r\n\r\n        // set current cell selection type\r\n        setCurrentCellSelectionType() {\r\n            const { currentCell, normalEndCell } = this.cellSelectionData;\r\n\r\n            let result;\r\n\r\n            if (\r\n                isEmptyValue(currentCell.rowKey) ||\r\n                isEmptyValue(currentCell.colKey)\r\n            ) {\r\n                result = \"\";\r\n            } else {\r\n                if (\r\n                    !isEmptyValue(normalEndCell.rowKey) &&\r\n                    !isEmptyValue(normalEndCell.colKey)\r\n                ) {\r\n                    result = CURRENT_CELL_SELECTION_TYPES.RANGE;\r\n                } else {\r\n                    result = CURRENT_CELL_SELECTION_TYPES.SINGLE;\r\n                }\r\n            }\r\n\r\n            this.currentCellSelectionType = result;\r\n        },\r\n\r\n        // deal keydown event\r\n        dealKeydownEvent(event) {\r\n            const {\r\n                colgroups,\r\n                cellSelectionData,\r\n                enableStopEditing,\r\n                isCellEditing,\r\n            } = this;\r\n\r\n            const { keyCode, ctrlKey, shiftKey, altKey } = event;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n\r\n            const currentColumn = colgroups.find((x) => x.key === colKey);\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                switch (keyCode) {\r\n                    case KEY_CODES.TAB: {\r\n                        let direction;\r\n                        if (shiftKey) {\r\n                            direction = CELL_SELECTION_DIRECTION.LEFT;\r\n                        } else {\r\n                            direction = CELL_SELECTION_DIRECTION.RIGHT;\r\n                        }\r\n\r\n                        this.selectCellByDirection({\r\n                            direction,\r\n                        });\r\n\r\n                        this.clearCellSelectionNormalEndCell();\r\n\r\n                        this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                        event.preventDefault();\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.ARROW_LEFT: {\r\n                        const direction = CELL_SELECTION_DIRECTION.LEFT;\r\n                        if (enableStopEditing) {\r\n                            this.selectCellByDirection({\r\n                                direction,\r\n                            });\r\n\r\n                            this.clearCellSelectionNormalEndCell();\r\n\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                            event.preventDefault();\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.ARROW_RIGHT: {\r\n                        const direction = CELL_SELECTION_DIRECTION.RIGHT;\r\n\r\n                        if (enableStopEditing) {\r\n                            this.selectCellByDirection({\r\n                                direction,\r\n                            });\r\n\r\n                            this.clearCellSelectionNormalEndCell();\r\n\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                            event.preventDefault();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.ARROW_UP: {\r\n                        const direction = CELL_SELECTION_DIRECTION.UP;\r\n\r\n                        if (enableStopEditing) {\r\n                            this.selectCellByDirection({\r\n                                direction,\r\n                            });\r\n\r\n                            this.clearCellSelectionNormalEndCell();\r\n\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                            event.preventDefault();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.ARROW_DOWN: {\r\n                        const direction = CELL_SELECTION_DIRECTION.DOWN;\r\n\r\n                        if (enableStopEditing) {\r\n                            this.selectCellByDirection({\r\n                                direction,\r\n                            });\r\n\r\n                            this.clearCellSelectionNormalEndCell();\r\n\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                            event.preventDefault();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.ENTER: {\r\n                        let direction;\r\n                        // add new line\r\n                        if (altKey) {\r\n                            const editInputEditor =\r\n                                this.$refs[this.editInputRef];\r\n\r\n                            editInputEditor.textareaAddNewLine();\r\n                        }\r\n                        // direction up\r\n                        else if (shiftKey) {\r\n                            direction = CELL_SELECTION_DIRECTION.UP;\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                        }\r\n                        // stop editing and stay in current cell\r\n                        else if (ctrlKey) {\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                        }\r\n                        // direction down\r\n                        else {\r\n                            direction = CELL_SELECTION_DIRECTION.DOWN;\r\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                        }\r\n\r\n                        if (direction) {\r\n                            this.clearCellSelectionNormalEndCell();\r\n                            this.selectCellByDirection({\r\n                                direction,\r\n                            });\r\n                        }\r\n                        event.preventDefault();\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.SPACE: {\r\n                        if (!isCellEditing) {\r\n                            // start editing and enter a space\r\n                            this[INSTANCE_METHODS.START_EDITING_CELL]({\r\n                                rowKey,\r\n                                colKey,\r\n                                defaultValue: \" \",\r\n                            });\r\n                            event.preventDefault();\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.BACK_SPACE: {\r\n                        if (!isCellEditing) {\r\n                            // start editing and clear value\r\n                            this[INSTANCE_METHODS.START_EDITING_CELL]({\r\n                                rowKey,\r\n                                colKey,\r\n                                defaultValue: \"\",\r\n                            });\r\n                            event.preventDefault();\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.DELETE: {\r\n                        if (!isCellEditing) {\r\n                            // delete cell selection range value\r\n                            this.deleteCellSelectionRangeValue();\r\n                            event.preventDefault();\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case KEY_CODES.F2: {\r\n                        if (!isCellEditing) {\r\n                            if (currentColumn.edit) {\r\n                                // start editing cell and don't allow stop eidting by direction key\r\n                                this.enableStopEditing = false;\r\n                                this[INSTANCE_METHODS.START_EDITING_CELL]({\r\n                                    rowKey,\r\n                                    colKey,\r\n                                });\r\n                            }\r\n                            event.preventDefault();\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        // enter text directly\r\n                        if (isInputKeyCode(event)) {\r\n                            this[INSTANCE_METHODS.START_EDITING_CELL]({\r\n                                rowKey,\r\n                                colKey,\r\n                                defaultValue: \"\",\r\n                            });\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // select cell by direction\r\n        selectCellByDirection({ direction }) {\r\n            const { colgroups, allRowKeys, cellSelectionData } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n\r\n            let columnIndex = colgroups.findIndex((x) => x.key === colKey);\r\n            let rowIndex = allRowKeys.indexOf(rowKey);\r\n\r\n            if (direction === CELL_SELECTION_DIRECTION.LEFT) {\r\n                if (columnIndex > 0) {\r\n                    let nextColumn = colgroups[columnIndex - 1];\r\n                    this.cellSelectionData.currentCell.colKey = nextColumn.key;\r\n                    this.columnToVisible(nextColumn);\r\n                }\r\n            } else if (direction === CELL_SELECTION_DIRECTION.RIGHT) {\r\n                if (columnIndex < colgroups.length - 1) {\r\n                    let nextColumn = colgroups[columnIndex + 1];\r\n                    this.cellSelectionData.currentCell.colKey = nextColumn.key;\r\n                    this.columnToVisible(nextColumn);\r\n                }\r\n            } else if (direction === CELL_SELECTION_DIRECTION.UP) {\r\n                if (rowIndex > 0) {\r\n                    const nextRowKey = allRowKeys[rowIndex - 1];\r\n                    this.rowToVisible(KEY_CODES.ARROW_UP, nextRowKey);\r\n                }\r\n            } else if (direction === CELL_SELECTION_DIRECTION.DOWN) {\r\n                if (rowIndex < allRowKeys.length - 1) {\r\n                    const nextRowKey = allRowKeys[rowIndex + 1];\r\n                    this.rowToVisible(KEY_CODES.ARROW_DOWN, nextRowKey);\r\n                }\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @columnToVisible\r\n         * @desc  column to visible\r\n         * @param {object} nextColumn - next column\r\n         */\r\n        columnToVisible(nextColumn) {\r\n            const { hasXScrollBar, colgroups } = this;\r\n\r\n            if (!hasXScrollBar) {\r\n                return false;\r\n            }\r\n\r\n            const tableContainerRef = this.$refs[this.tableContainerRef];\r\n\r\n            const { scrollWidth, clientWidth, scrollLeft } = tableContainerRef;\r\n\r\n            if (!nextColumn.fixed) {\r\n                const leftTotalWidth = getNotFixedTotalWidthByColumnKey({\r\n                    colgroups,\r\n                    colKey: nextColumn.key,\r\n                    fixed: COLUMN_FIXED_TYPE.LEFT,\r\n                });\r\n\r\n                const rightTotalWidth = getNotFixedTotalWidthByColumnKey({\r\n                    colgroups,\r\n                    colKey: nextColumn.key,\r\n                    fixed: COLUMN_FIXED_TYPE.RIGHT,\r\n                });\r\n\r\n                if (scrollLeft) {\r\n                    const diff = scrollLeft - leftTotalWidth;\r\n                    if (diff > 0) {\r\n                        tableContainerRef.scrollLeft = scrollLeft - diff;\r\n                    }\r\n                }\r\n\r\n                const scrollRight = scrollWidth - clientWidth - scrollLeft;\r\n                if (scrollRight) {\r\n                    const diff = scrollRight - rightTotalWidth;\r\n                    if (diff > 0) {\r\n                        tableContainerRef.scrollLeft = scrollLeft + diff;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @rowToVisible\r\n         * @desc  row to visible\r\n         * @param {number} keyCode - current keyCode\r\n         * @param {any} nextRowKey - next row key\r\n         */\r\n        rowToVisible(keyCode, nextRowKey) {\r\n            const tableContainerRef = this.$refs[this.tableContainerRef];\r\n            const tableContentWrapperRef =\r\n                this.$refs[this.tableContentWrapperRef].$el;\r\n\r\n            const { isVirtualScroll, headerTotalHeight, footerTotalHeight } =\r\n                this;\r\n\r\n            const {\r\n                clientHeight: containerClientHeight,\r\n                scrollTop: containerScrollTop,\r\n            } = tableContainerRef;\r\n\r\n            const nextRowEl = this.$el.querySelector(\r\n                `tbody tr[${COMPS_CUSTOM_ATTRS.BODY_ROW_KEY}=\"${nextRowKey}\"]`,\r\n            );\r\n\r\n            if (nextRowEl) {\r\n                const { offsetTop: trOffsetTop, clientHeight: trClientHeight } =\r\n                    nextRowEl;\r\n\r\n                const parentOffsetTop = tableContentWrapperRef.offsetTop;\r\n\r\n                // arrow up\r\n                if (keyCode === KEY_CODES.ARROW_UP) {\r\n                    let diff = 0;\r\n                    if (isVirtualScroll) {\r\n                        diff =\r\n                            headerTotalHeight -\r\n                            (trOffsetTop -\r\n                                (containerScrollTop - parentOffsetTop));\r\n                    } else {\r\n                        diff =\r\n                            containerScrollTop +\r\n                            headerTotalHeight -\r\n                            trOffsetTop;\r\n                    }\r\n\r\n                    if (diff > 0) {\r\n                        tableContainerRef.scrollTop = containerScrollTop - diff;\r\n                    }\r\n                }\r\n                // arrow down\r\n                else if (keyCode === KEY_CODES.ARROW_DOWN) {\r\n                    let diff = 0;\r\n                    if (isVirtualScroll) {\r\n                        diff =\r\n                            trOffsetTop -\r\n                            (containerScrollTop - parentOffsetTop) +\r\n                            trClientHeight +\r\n                            footerTotalHeight -\r\n                            containerClientHeight;\r\n                    } else {\r\n                        diff =\r\n                            trOffsetTop +\r\n                            trClientHeight +\r\n                            footerTotalHeight -\r\n                            (containerClientHeight + containerScrollTop);\r\n                    }\r\n\r\n                    if (diff >= 0) {\r\n                        tableContainerRef.scrollTop = containerScrollTop + diff;\r\n                    }\r\n                }\r\n                const { currentCell } = this.cellSelectionData;\r\n                this.cellSelectionCurrentCellChange({\r\n                    rowKey: nextRowKey,\r\n                    colKey: currentCell.colKey,\r\n                });\r\n            }\r\n        },\r\n\r\n        // set virtual scroll visible data\r\n        setVirtualScrollVisibleData() {\r\n            const { tableData } = this;\r\n\r\n            const startIndex = this.virtualScrollStartIndex;\r\n            const endIndex = this.virtualScrollEndIndex;\r\n\r\n            const aboveCount = this.getVirtualScrollAboveCount();\r\n            const belowCount = this.getVirtualScrollBelowCount();\r\n\r\n            let start = startIndex - aboveCount;\r\n            let end = endIndex + belowCount;\r\n\r\n            this.virtualScrollVisibleIndexs.start = start;\r\n            this.virtualScrollVisibleIndexs.end = end - 1;\r\n\r\n            this.virtualScrollVisibleData = tableData.slice(start, end);\r\n        },\r\n\r\n        // get virtual scroll above count\r\n        getVirtualScrollAboveCount() {\r\n            let result = 0;\r\n            const { isVirtualScroll, virtualScrollBufferCount } = this;\r\n\r\n            const virtualScrollStartIndex = this.virtualScrollStartIndex;\r\n\r\n            if (isVirtualScroll) {\r\n                result = Math.min(\r\n                    virtualScrollStartIndex,\r\n                    virtualScrollBufferCount,\r\n                );\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // get virtual scroll bellow count\r\n        getVirtualScrollBelowCount() {\r\n            let result = 0;\r\n\r\n            const { isVirtualScroll, tableData, virtualScrollBufferCount } =\r\n                this;\r\n\r\n            const virtualScrollEndIndex = this.virtualScrollEndIndex;\r\n\r\n            if (isVirtualScroll) {\r\n                result = Math.min(\r\n                    tableData.length - virtualScrollEndIndex,\r\n                    virtualScrollBufferCount,\r\n                );\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // get virtual phantom\r\n        getVirtualViewPhantom() {\r\n            let content = null;\r\n\r\n            /*\r\n            1、is virtualScroll\r\n            or\r\n            2、\r\n            has left fixed column and expand option（resolve expand row content sticky）\r\n            */\r\n            const { isVirtualScroll, hasLeftFixedColumn, expandOption } = this;\r\n\r\n            if (isVirtualScroll || (hasLeftFixedColumn && expandOption)) {\r\n                const props = {\r\n                    props: {\r\n                        tagName: \"div\",\r\n                    },\r\n                    style: {\r\n                        width: \"100%\",\r\n                    },\r\n                    on: {\r\n                        \"on-dom-resize-change\": ({ width }) => {\r\n                            this.tableViewportWidth = width;\r\n                        },\r\n                    },\r\n                };\r\n\r\n                content = (\r\n                    <div\r\n                        ref={this.virtualPhantomRef}\r\n                        class={[\r\n                            clsName(\"virtual-phantom\"),\r\n                            isVirtualScroll ? clsName(\"virtual-scroll\") : \"\",\r\n                        ]}\r\n                    >\r\n                        <VueDomResizeObserver {...props} />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return content;\r\n        },\r\n\r\n        // init virtual scroll positions\r\n        initVirtualScrollPositions() {\r\n            if (this.isVirtualScroll) {\r\n                const {\r\n                    virtualScrollOption,\r\n                    rowKeyFieldName,\r\n                    tableData,\r\n                    defaultVirtualScrollMinRowHeight,\r\n                } = this;\r\n\r\n                const minRowHeight = isNumber(virtualScrollOption.minRowHeight)\r\n                    ? virtualScrollOption.minRowHeight\r\n                    : defaultVirtualScrollMinRowHeight;\r\n\r\n                this.virtualScrollPositions = tableData.map((item, index) => ({\r\n                    rowKey: item[rowKeyFieldName],\r\n                    height: minRowHeight,\r\n                    top: index * minRowHeight,\r\n                    bottom: (index + 1) * minRowHeight,\r\n                }));\r\n            }\r\n        },\r\n\r\n        // list item height change\r\n        bodyRowHeightChange({ rowKey, height }) {\r\n            //获取真实元素大小，修改对应的尺寸缓存\r\n            const index = this.virtualScrollPositions.findIndex(\r\n                (x) => x.rowKey === rowKey,\r\n            );\r\n\r\n            let oldHeight = this.virtualScrollPositions[index].height;\r\n            let dValue = oldHeight - height;\r\n            //存在差值\r\n            if (dValue) {\r\n                this.virtualScrollPositions[index].bottom =\r\n                    this.virtualScrollPositions[index].bottom - dValue;\r\n                this.virtualScrollPositions[index].height = height;\r\n                for (\r\n                    let k = index + 1;\r\n                    k < this.virtualScrollPositions.length;\r\n                    k++\r\n                ) {\r\n                    this.virtualScrollPositions[k].top =\r\n                        this.virtualScrollPositions[k - 1].bottom;\r\n                    this.virtualScrollPositions[k].bottom =\r\n                        this.virtualScrollPositions[k].bottom - dValue;\r\n                }\r\n\r\n                // 更新 virtual phantom 列表总高度\r\n                this.setVirtualPhantomHeight();\r\n\r\n                //更新真实偏移量\r\n                this.setVirtualScrollStartOffset();\r\n            }\r\n        },\r\n        // update virtual phantom list height\r\n        setVirtualPhantomHeight() {\r\n            let totalHeight = 0;\r\n            if (this.virtualScrollPositions.length) {\r\n                totalHeight =\r\n                    this.virtualScrollPositions[\r\n                        this.virtualScrollPositions.length - 1\r\n                    ].bottom;\r\n            }\r\n\r\n            this.$refs[this.virtualPhantomRef].style.height =\r\n                totalHeight + \"px\";\r\n        },\r\n        // set virtual scroll start offset\r\n        setVirtualScrollStartOffset() {\r\n            const start = this.virtualScrollStartIndex;\r\n\r\n            const aboveCount = this.getVirtualScrollAboveCount();\r\n\r\n            let startOffset = 0;\r\n\r\n            if (start >= 1) {\r\n                let size =\r\n                    this.virtualScrollPositions[start].top -\r\n                    (this.virtualScrollPositions[start - aboveCount]\r\n                        ? this.virtualScrollPositions[start - aboveCount].top\r\n                        : 0);\r\n                startOffset =\r\n                    this.virtualScrollPositions[start - 1].bottom - size;\r\n            }\r\n\r\n            this.setTableContentTopValue({ top: startOffset });\r\n        },\r\n        // set table content top value\r\n        setTableContentTopValue({ top }) {\r\n            //this.$refs[this.tableContentWrapperRef].style.transform = `translate3d(0,${startOffset}px,0)`;\r\n            window.requestAnimationFrame(() => {\r\n                const ele = this.$refs[this.tableContentWrapperRef];\r\n                if (ele) {\r\n                    ele.$el.style.top = `${top}px`;\r\n                }\r\n            });\r\n        },\r\n        // get virtual scroll start index\r\n        getVirtualScrollStartIndex(scrollTop = 0) {\r\n            return this.virtualScrollBinarySearch(\r\n                this.virtualScrollPositions,\r\n                scrollTop,\r\n            );\r\n        },\r\n        // virtual scroll binary search\r\n        virtualScrollBinarySearch(list, value) {\r\n            let start = 0;\r\n            let end = list.length - 1;\r\n            let tempIndex = null;\r\n\r\n            while (start <= end) {\r\n                let midIndex = parseInt((start + end) / 2);\r\n                let midValue = list[midIndex].bottom;\r\n                if (midValue === value) {\r\n                    return midIndex + 1;\r\n                } else if (midValue < value) {\r\n                    start = midIndex + 1;\r\n                } else if (midValue > value) {\r\n                    if (tempIndex === null || tempIndex > midIndex) {\r\n                        tempIndex = midIndex;\r\n                    }\r\n                    end = end - 1;\r\n                }\r\n            }\r\n            return tempIndex;\r\n        },\r\n        // table container virtual scroll handler\r\n        tableContainerVirtualScrollHandler(tableContainerRef) {\r\n            const {\r\n                virtualScrollVisibleCount: visibleCount,\r\n                virtualScrollOption,\r\n            } = this;\r\n\r\n            //当前滚动位置\r\n            let scrollTop = tableContainerRef.scrollTop;\r\n\r\n            //此时的开始索引\r\n            let visibleStartIndex = this.getVirtualScrollStartIndex(scrollTop);\r\n            this.virtualScrollStartIndex = visibleStartIndex;\r\n\r\n            //此时的结束索引\r\n            let visibleEndIndex = visibleStartIndex + visibleCount;\r\n            this.virtualScrollEndIndex = visibleEndIndex;\r\n\r\n            const visibleAboveCount = this.getVirtualScrollAboveCount();\r\n            const visibleBelowCount = this.getVirtualScrollBelowCount();\r\n\r\n            //此时的偏移量\r\n            this.setVirtualScrollStartOffset();\r\n\r\n            if (!this.showVirtualScrollingPlaceholder) {\r\n                const bodyElement = this.$refs[this.tableBodyRef];\r\n\r\n                if (bodyElement) {\r\n                    bodyElement.renderingRowKeys(\r\n                        this.allRowKeys.slice(\r\n                            visibleStartIndex - visibleAboveCount,\r\n                            visibleEndIndex + visibleBelowCount,\r\n                        ),\r\n                    );\r\n                }\r\n            }\r\n\r\n            const { scrolling } = virtualScrollOption;\r\n            if (isFunction(scrolling)) {\r\n                const visibleAboveCount = this.getVirtualScrollAboveCount();\r\n                const visibleBelowCount = this.getVirtualScrollBelowCount();\r\n\r\n                let startRowIndex = visibleStartIndex - visibleAboveCount;\r\n\r\n                scrolling({\r\n                    startRowIndex: startRowIndex > 0 ? startRowIndex : 0,\r\n                    visibleStartIndex,\r\n                    visibleEndIndex,\r\n                    visibleAboveCount,\r\n                    visibleBelowCount,\r\n                });\r\n            }\r\n\r\n            this.setVirtualScrollVisibleData();\r\n        },\r\n        // debounce scroll ended\r\n        debounceScrollEnded() {\r\n            const scrollingResetTimeInterval = 150;\r\n\r\n            const { disablePointerEventsTimeoutId } = this;\r\n\r\n            if (disablePointerEventsTimeoutId) {\r\n                cancelAnimationTimeout(disablePointerEventsTimeoutId);\r\n            }\r\n\r\n            this.disablePointerEventsTimeoutId = requestAnimationTimeout(\r\n                this.debounceScrollEndedCallback,\r\n                scrollingResetTimeInterval,\r\n            );\r\n        },\r\n        // debounce scroll callback\r\n        debounceScrollEndedCallback() {\r\n            this.disablePointerEventsTimeoutId = null;\r\n            this.showVirtualScrollingPlaceholder = false;\r\n        },\r\n        // init virtual scroll\r\n        initVirtualScroll() {\r\n            if (this.isVirtualScroll) {\r\n                const startIndex = 0;\r\n\r\n                this.virtualScrollStartIndex = startIndex;\r\n                this.virtualScrollEndIndex =\r\n                    startIndex + this.virtualScrollVisibleCount;\r\n\r\n                // 修复渲染结束，同时开启虚拟滚动和设置表格数据，无法设置 virtual phantom 高度的问题\r\n                this.$nextTick(() => {\r\n                    const tableContainerRef =\r\n                        this.$refs[this.tableContainerRef];\r\n                    this.tableContainerVirtualScrollHandler(tableContainerRef);\r\n                    this.setVirtualPhantomHeight();\r\n                });\r\n            }\r\n        },\r\n\r\n        // set scrolling\r\n        setScrolling(tableContainerRef) {\r\n            if (this.hasFixedColumn) {\r\n                const { scrollWidth, clientWidth, scrollLeft } =\r\n                    tableContainerRef;\r\n\r\n                const { previewTableContainerScrollLeft: previewScrollLeft } =\r\n                    this;\r\n\r\n                // 仅横向滚动需要处理\r\n                if (\r\n                    previewScrollLeft === 0 ||\r\n                    previewScrollLeft !== scrollLeft\r\n                ) {\r\n                    this.previewTableContainerScrollLeft = scrollLeft;\r\n\r\n                    this.isLeftScrolling = scrollLeft > 0;\r\n                    this.isRightScrolling =\r\n                        scrollWidth - clientWidth > scrollLeft;\r\n                }\r\n                this.isLeftScrolling = scrollLeft > 0;\r\n                this.isRightScrolling = scrollWidth - clientWidth > scrollLeft;\r\n            }\r\n\r\n            if (this.fixedHeader) {\r\n                const { scrollTop } = tableContainerRef;\r\n                this.isVerticalScrolling = scrollTop > 0;\r\n            }\r\n        },\r\n\r\n        // set scroll bar status\r\n        setScrollBarStatus() {\r\n            const tableContainerRef = this.$refs[this.tableContainerRef];\r\n            if (tableContainerRef) {\r\n                const { scrollWidth, clientWidth, scrollHeight, clientHeight } =\r\n                    tableContainerRef;\r\n\r\n                if (scrollWidth && clientWidth) {\r\n                    this.hasXScrollBar =\r\n                        scrollWidth - clientWidth ? true : false;\r\n                }\r\n\r\n                if (scrollHeight && clientHeight) {\r\n                    this.hasYScrollBar =\r\n                        scrollHeight - clientHeight ? true : false;\r\n                }\r\n            }\r\n        },\r\n\r\n        // init scrolling\r\n        initScrolling() {\r\n            this.setScrolling(this.$refs[this.tableContainerRef]);\r\n        },\r\n\r\n        // table click outside\r\n        tableClickOutside(e) {\r\n            // exclude contextmenu panel clicked\r\n            if (isContextmenuPanelClicked(e)) {\r\n                return false;\r\n            }\r\n\r\n            this.isHeaderCellMousedown = false;\r\n            this.isBodyCellMousedown = false;\r\n            this.isBodyOperationColumnMousedown = false;\r\n            this.isAutofillStarting = false;\r\n            this.setIsColumnResizing(false);\r\n\r\n            // clear cell selection\r\n            this.clearCellSelectionCurrentCell();\r\n            this.clearCellSelectionNormalEndCell();\r\n\r\n            // clear indicators\r\n            this.clearHeaderIndicatorColKeys();\r\n            this.clearBodyIndicatorRowKeys();\r\n\r\n            // stop editing cell\r\n            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n        },\r\n\r\n        // save cell when stop editing\r\n        saveCellWhenStopEditing() {\r\n            const {\r\n                colgroups,\r\n                rowKeyFieldName,\r\n                editOption,\r\n                editingCell,\r\n                isCellEditing,\r\n            } = this;\r\n\r\n            const {\r\n                cellValueChange,\r\n                beforeCellValueChange,\r\n                afterCellValueChange,\r\n            } = editOption;\r\n\r\n            if (isCellEditing) {\r\n                const { rowKey, colKey } = editingCell;\r\n\r\n                let currentRow = this.tableData.find(\r\n                    (x) => x[rowKeyFieldName] === rowKey,\r\n                );\r\n\r\n                if (currentRow) {\r\n                    const currentColumn = colgroups.find(\r\n                        (x) => x.key === colKey,\r\n                    );\r\n\r\n                    const changeValue = editingCell.row[currentColumn.field];\r\n\r\n                    if (isFunction(beforeCellValueChange)) {\r\n                        const allowChange = beforeCellValueChange({\r\n                            row: cloneDeep(currentRow),\r\n                            column: currentColumn,\r\n                            changeValue,\r\n                        });\r\n                        if (isBoolean(allowChange) && !allowChange) {\r\n                            // celar editing cell\r\n                            this.clearEditingCell();\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    currentRow[currentColumn.field] = changeValue;\r\n\r\n                    // 同 afterCellValueChange，未来被移除\r\n                    cellValueChange &&\r\n                        cellValueChange({\r\n                            row: currentRow,\r\n                            column: currentColumn,\r\n                            changeValue,\r\n                        });\r\n\r\n                    afterCellValueChange &&\r\n                        afterCellValueChange({\r\n                            row: currentRow,\r\n                            column: currentColumn,\r\n                            changeValue,\r\n                        });\r\n\r\n                    // celar editing cell\r\n                    this.clearEditingCell();\r\n                }\r\n\r\n                // reset status\r\n                this.enableStopEditing = true;\r\n            }\r\n        },\r\n\r\n        // cell selection by click\r\n        cellSelectionByClick({ rowData, column }) {\r\n            const { rowKeyFieldName } = this;\r\n\r\n            const rowKey = getRowKey(rowData, rowKeyFieldName);\r\n\r\n            // set cell selection and column to visible\r\n            this[INSTANCE_METHODS.SET_CELL_SELECTION]({\r\n                rowKey,\r\n                colKey: column.key,\r\n                isScrollToRow: false,\r\n            });\r\n            // row to visible\r\n            this.rowToVisible(KEY_CODES.ARROW_UP, rowKey);\r\n            this.rowToVisible(KEY_CODES.ARROW_DOWN, rowKey);\r\n        },\r\n\r\n        /*\r\n         * @bodyCellContextmenu\r\n         * @desc  recieve td right click\\contextmenu event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellContextmenu({ event, rowData, column }) {\r\n            const { editOption, rowKeyFieldName } = this;\r\n\r\n            if (editOption) {\r\n                const rowKey = getRowKey(rowData, rowKeyFieldName);\r\n                this.editCellByClick({\r\n                    isDblclick: false,\r\n                    rowKey,\r\n                    colKey: column.key,\r\n                });\r\n            }\r\n\r\n            this.setContextmenuOptions(column);\r\n        },\r\n\r\n        /*\r\n         * @bodyCellDoubleClick\r\n         * @desc  recieve td double click event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellDoubleClick({ event, rowData, column }) {\r\n            const { editOption, rowKeyFieldName, colgroups } = this;\r\n\r\n            if (isOperationColumn(column.key, colgroups)) {\r\n                // clear cell selection\r\n                this.clearCellSelectionCurrentCell();\r\n                this.clearCellSelectionNormalEndCell();\r\n\r\n                // stop editing cell\r\n                this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                return false;\r\n            }\r\n\r\n            if (editOption) {\r\n                const rowKey = getRowKey(rowData, rowKeyFieldName);\r\n                this.editCellByClick({\r\n                    isDblclick: true,\r\n                    rowKey,\r\n                    colKey: column.key,\r\n                });\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @bodyCellClick\r\n         * @desc  recieve td click event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellClick({ event, rowData, column }) {\r\n            // feature...\r\n        },\r\n\r\n        /*\r\n         * @bodyCellMousedown\r\n         * @desc  recieve td mousedown event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellMousedown({ event, rowData, column }) {\r\n            if (!this.enableCellSelection) {\r\n                return false;\r\n            }\r\n\r\n            const { shiftKey } = event;\r\n\r\n            const {\r\n                editOption,\r\n                rowKeyFieldName,\r\n                colgroups,\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                allRowKeys,\r\n            } = this;\r\n\r\n            const rowKey = getRowKey(rowData, rowKeyFieldName);\r\n            const colKey = column.key;\r\n\r\n            const { currentCell } = cellSelectionData;\r\n\r\n            const mouseEventClickType = getMouseEventClickType(event);\r\n\r\n            if (isOperationColumn(colKey, colgroups)) {\r\n                // clear header indicator colKeys\r\n                this.clearHeaderIndicatorColKeys();\r\n\r\n                const { bodyIndicatorRowKeys } = this;\r\n                this.isBodyOperationColumnMousedown = true;\r\n\r\n                const {\r\n                    startRowKey,\r\n                    endRowKey,\r\n                    startRowKeyIndex,\r\n                    endRowKeyIndex,\r\n                } = bodyIndicatorRowKeys;\r\n                let newStartRowKey = startRowKey;\r\n                let newEndRowKey = endRowKey;\r\n\r\n                if (\r\n                    shiftKey &&\r\n                    (startRowKeyIndex > -1 || currentCell.rowIndex > -1)\r\n                ) {\r\n                    newStartRowKey = isEmptyValue(currentCell.rowKey)\r\n                        ? startRowKey\r\n                        : currentCell.rowKey;\r\n                    newEndRowKey = rowKey;\r\n                } else {\r\n                    const currentRowIndex = allRowKeys.indexOf(rowKey);\r\n\r\n                    // 左键点击 || 不在当前选择行内\r\n                    if (\r\n                        mouseEventClickType ===\r\n                            MOUSE_EVENT_CLICK_TYPE.LEFT_MOUSE ||\r\n                        currentRowIndex < startRowKeyIndex ||\r\n                        currentRowIndex > endRowKeyIndex\r\n                    ) {\r\n                        newStartRowKey = rowKey;\r\n                        newEndRowKey = rowKey;\r\n                    }\r\n                }\r\n\r\n                this.bodyIndicatorRowKeysChange({\r\n                    startRowKey: newStartRowKey,\r\n                    endRowKey: newEndRowKey,\r\n                });\r\n            } else {\r\n                // body cell mousedown\r\n                this.isBodyCellMousedown = true;\r\n\r\n                const isClearByRightClick =\r\n                    isClearSelectionByBodyCellRightClick({\r\n                        mouseEventClickType,\r\n                        cellData: {\r\n                            rowKey,\r\n                            colKey,\r\n                        },\r\n                        cellSelectionData,\r\n                        cellSelectionRangeData,\r\n                        colgroups,\r\n                        allRowKeys,\r\n                    });\r\n\r\n                if (isClearByRightClick) {\r\n                    // clear header indicator colKeys\r\n                    this.clearHeaderIndicatorColKeys();\r\n                    // clear body indicator colKeys\r\n                    this.clearBodyIndicatorRowKeys();\r\n\r\n                    if (shiftKey && currentCell.rowIndex > -1) {\r\n                        this.cellSelectionNormalEndCellChange({\r\n                            rowKey,\r\n                            colKey,\r\n                        });\r\n                    } else {\r\n                        // cell selection by click\r\n                        this.cellSelectionByClick({ rowData, column });\r\n                        this.clearCellSelectionNormalEndCell();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (editOption) {\r\n                this.editCellByClick({\r\n                    isDblclick: false,\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @bodyCellMouseover\r\n         * @desc  recieve td mouseover event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellMouseover({ event, rowData, column }) {\r\n            const {\r\n                rowKeyFieldName,\r\n                isBodyCellMousedown,\r\n                isAutofillStarting,\r\n                isHeaderCellMousedown,\r\n                isBodyOperationColumnMousedown,\r\n            } = this;\r\n\r\n            const rowKey = getRowKey(rowData, rowKeyFieldName);\r\n            const colKey = column.key;\r\n\r\n            if (isBodyCellMousedown) {\r\n                // 操作列不能单元格选中\r\n                if (isOperationColumn(colKey, this.colgroups)) {\r\n                    return false;\r\n                }\r\n                this.cellSelectionNormalEndCellChange({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n            }\r\n\r\n            if (isBodyOperationColumnMousedown) {\r\n                this.bodyIndicatorRowKeysChange({\r\n                    startRowKey: this.bodyIndicatorRowKeys.startRowKey,\r\n                    endRowKey: rowKey,\r\n                });\r\n            }\r\n\r\n            // 允许在body cell mouseover 里补充 header indicator 信息\r\n            if (isHeaderCellMousedown) {\r\n                this.headerIndicatorColKeysChange({\r\n                    startColKey: this.headerIndicatorColKeys.startColKey,\r\n                    endColKey: colKey,\r\n                });\r\n            }\r\n\r\n            if (isAutofillStarting) {\r\n                // 操作列不能autofilling 效果\r\n                if (isOperationColumn(colKey, this.colgroups)) {\r\n                    return false;\r\n                }\r\n                this.cellSelectionAutofillCellChange({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @bodyCellMousemove\r\n         * @desc  recieve td mousemove event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellMousemove({ event, rowData, column }) {\r\n            this.hooks.triggerHook(HOOKS_NAME.BODY_CELL_MOUSEMOVE, {\r\n                event,\r\n                column,\r\n            });\r\n        },\r\n\r\n        /*\r\n         * @bodyCellMouseup\r\n         * @desc  recieve td mouseup event\r\n         * @param {object} rowData - row data\r\n         * @param {object} column - column data\r\n         */\r\n        bodyCellMouseup({ event, rowData, column }) {\r\n            // feature...\r\n        },\r\n\r\n        // header cell click\r\n        headerCellClick({ event, column }) {\r\n            // feature...\r\n        },\r\n\r\n        // header cell contextmenu\r\n        headerCellContextmenu({ event, column }) {\r\n            this.setContextmenuOptions(column);\r\n        },\r\n\r\n        // set contextmenu options\r\n        setContextmenuOptions(column) {\r\n            const { contextMenuType } = this;\r\n\r\n            // header contextmenu\r\n            if (contextMenuType === CONTEXTMENU_TYPES.HEADER_CONTEXTMENU) {\r\n                // set header contextmenu options before contextmen show\r\n                this.contextmenuOptions = setHeaderContextmenuOptions({\r\n                    column,\r\n                    contextmenuHeaderOption: this.contextmenuHeaderOption,\r\n                    cellSelectionRangeData: this.cellSelectionRangeData,\r\n                    colgroups: this.colgroups,\r\n                    allRowKeys: this.allRowKeys,\r\n                    headerIndicatorColKeys: this.headerIndicatorColKeys,\r\n                    enableHeaderContextmenu: this.enableHeaderContextmenu,\r\n                    t,\r\n                });\r\n            }\r\n            // body contextmenu\r\n            else {\r\n                // set body contextmenu options before contextmen show\r\n                this.contextmenuOptions = setBodyContextmenuOptions({\r\n                    enableBodyContextmenu: this.enableBodyContextmenu,\r\n                    contextmenuBodyOption: this.contextmenuBodyOption,\r\n                    cellSelectionRangeData: this.cellSelectionRangeData,\r\n                    colgroups: this.colgroups,\r\n                    allRowKeys: this.allRowKeys,\r\n                    bodyIndicatorRowKeys: this.bodyIndicatorRowKeys,\r\n                    t,\r\n                });\r\n            }\r\n        },\r\n\r\n        // header cell mousedown\r\n        headerCellMousedown({ event, column }) {\r\n            if (!this.enableCellSelection) {\r\n                return false;\r\n            }\r\n\r\n            this.isHeaderCellMousedown = true;\r\n\r\n            const { shiftKey } = event;\r\n\r\n            const {\r\n                isGroupHeader,\r\n                colgroups,\r\n                headerIndicatorColKeys,\r\n                cellSelectionData,\r\n            } = this;\r\n\r\n            // clear body indicator colKeys\r\n            this.clearBodyIndicatorRowKeys();\r\n\r\n            let colKeys;\r\n            if (isGroupHeader) {\r\n                colKeys = getColKeysByHeaderColumn({\r\n                    headerColumnItem: column,\r\n                });\r\n            } else {\r\n                colKeys = [column.key];\r\n            }\r\n\r\n            const currentCellStartColKey = colKeys[0];\r\n            const currentCellEndColKey = colKeys[colKeys.length - 1];\r\n\r\n            const { currentCell } = cellSelectionData;\r\n\r\n            if (isOperationColumn(column.key, colgroups)) {\r\n                // clear cell selection\r\n                this.clearCellSelectionCurrentCell();\r\n                this.clearCellSelectionNormalEndCell();\r\n                this.$nextTick(() => {\r\n                    // select all cell\r\n                    this[INSTANCE_METHODS.SET_ALL_CELL_SELECTION]();\r\n                });\r\n                return false;\r\n            }\r\n\r\n            // 需要先将之前选中单元格元素清空\r\n            if (isEmptyValue(headerIndicatorColKeys.startColKey)) {\r\n                // 值的比较（currentCell.colKey 会变化）\r\n                if (\r\n                    JSON.stringify(colKeys) !=\r\n                    JSON.stringify([currentCell.colKey])\r\n                ) {\r\n                    this.$refs[this.cellSelectionRef].clearCurrentCellRect();\r\n                }\r\n                this.$refs[this.cellSelectionRef].clearNormalEndCellRect();\r\n            }\r\n\r\n            const { startColKey, endColKey, startColKeyIndex, endColKeyIndex } =\r\n                headerIndicatorColKeys;\r\n\r\n            let newStartColKey = startColKey;\r\n            let newEndColKey = endColKey;\r\n            if (shiftKey) {\r\n                if (isEmptyValue(startColKey)) {\r\n                    if (!isEmptyValue(currentCell.colKey)) {\r\n                        const leftColKey = getLeftmostColKey({\r\n                            colgroups,\r\n                            colKeys: colKeys.concat([currentCell.colKey]),\r\n                        });\r\n\r\n                        newStartColKey = currentCell.colKey;\r\n                        if (leftColKey === currentCell.colKey) {\r\n                            newEndColKey = currentCellEndColKey;\r\n                        } else {\r\n                            newEndColKey = currentCellStartColKey;\r\n                        }\r\n                    } else {\r\n                        newStartColKey = currentCellStartColKey;\r\n                        newEndColKey = currentCellEndColKey;\r\n                    }\r\n                } else {\r\n                    newStartColKey = startColKey;\r\n                    const leftColKey = getLeftmostColKey({\r\n                        colgroups,\r\n                        colKeys: colKeys.concat([startColKey]),\r\n                    });\r\n\r\n                    if (leftColKey === startColKey) {\r\n                        newEndColKey = currentCellEndColKey;\r\n                    } else {\r\n                        newEndColKey = currentCellStartColKey;\r\n                    }\r\n                }\r\n            } else {\r\n                const mouseEventClickType = getMouseEventClickType(event);\r\n                const currentCellStartColIndex = colgroups.findIndex(\r\n                    (x) => x.key === currentCellEndColKey,\r\n                );\r\n                const currentCellEndColIndex = colgroups.findIndex(\r\n                    (x) => x.key === currentCellStartColKey,\r\n                );\r\n                // 左键点击 || 不在当前选择列内\r\n                if (\r\n                    mouseEventClickType === MOUSE_EVENT_CLICK_TYPE.LEFT_MOUSE ||\r\n                    currentCellStartColIndex < startColKeyIndex ||\r\n                    currentCellEndColIndex < startColKeyIndex ||\r\n                    currentCellStartColIndex > endColKeyIndex ||\r\n                    currentCellEndColIndex > endColKeyIndex\r\n                ) {\r\n                    newStartColKey = currentCellStartColKey;\r\n                    newEndColKey = currentCellEndColKey;\r\n                }\r\n            }\r\n\r\n            this.headerIndicatorColKeysChange({\r\n                startColKey: newStartColKey,\r\n                endColKey: newEndColKey,\r\n            });\r\n        },\r\n\r\n        // header cell mouseover\r\n        headerCellMouseover({ event, column }) {\r\n            const {\r\n                colgroups,\r\n                isGroupHeader,\r\n                isHeaderCellMousedown,\r\n                headerIndicatorColKeys,\r\n            } = this;\r\n\r\n            if (\r\n                isHeaderCellMousedown &&\r\n                !isOperationColumn(column.key, colgroups)\r\n            ) {\r\n                let colKeys;\r\n                if (isGroupHeader) {\r\n                    colKeys = getColKeysByHeaderColumn({\r\n                        headerColumnItem: column,\r\n                    });\r\n                } else {\r\n                    colKeys = [column.key];\r\n                }\r\n\r\n                const leftColKey = getLeftmostColKey({\r\n                    colgroups,\r\n                    colKeys: colKeys.concat([\r\n                        headerIndicatorColKeys.startColKey,\r\n                    ]),\r\n                });\r\n\r\n                let endColKey;\r\n                if (leftColKey === headerIndicatorColKeys.startColKey) {\r\n                    endColKey = colKeys[colKeys.length - 1];\r\n                } else {\r\n                    endColKey = colKeys[0];\r\n                }\r\n                this.headerIndicatorColKeysChange({\r\n                    startColKey: this.headerIndicatorColKeys.startColKey,\r\n                    endColKey,\r\n                });\r\n            }\r\n        },\r\n\r\n        // header cell mousemove\r\n        headerCellMousemove({ event, column }) {\r\n            this.hooks.triggerHook(HOOKS_NAME.HEADER_CELL_MOUSEMOVE, {\r\n                event,\r\n                column,\r\n            });\r\n        },\r\n\r\n        // header cell mouseleave\r\n        headerCellMouseleave({ event, column }) {\r\n            // todo\r\n        },\r\n\r\n        // header mouseleave\r\n        headerMouseleave(event) {\r\n            this.setIsColumnResizerHover(false);\r\n        },\r\n\r\n        // table container mouseup\r\n        tableContainerMouseup() {\r\n            this.isHeaderCellMousedown = false;\r\n            this.isBodyCellMousedown = false;\r\n            this.isBodyOperationColumnMousedown = false;\r\n            this.isAutofillStarting = false;\r\n        },\r\n\r\n        /*\r\n         * @cellSelectionCornerMousedown\r\n         * @desc  recieve cell selection corner mousedown\r\n         */\r\n        cellSelectionCornerMousedown({ event }) {\r\n            this.isAutofillStarting = true;\r\n        },\r\n\r\n        /*\r\n         * @cellSelectionCornerMouseup\r\n         * @desc  recieve cell selection corner mouseup\r\n         */\r\n        cellSelectionCornerMouseup({ event }) {\r\n            this.isAutofillStarting = false;\r\n        },\r\n\r\n        // is edit column\r\n        isEditColumn(colKey) {\r\n            return this.colgroups.some((x) => x.key === colKey && x.edit);\r\n        },\r\n\r\n        /*\r\n         * @editCellByClick\r\n         * @desc  recieve td click event\r\n         * @param {boolean} isDblclick - is dblclick\r\n         */\r\n        editCellByClick({ isDblclick, rowKey, colKey }) {\r\n            const {\r\n                editOption,\r\n                isCellEditing,\r\n                hasEditColumn,\r\n                editingCell,\r\n                isEditColumn,\r\n            } = this;\r\n\r\n            if (!editOption) {\r\n                return false;\r\n            }\r\n\r\n            // has edit column\r\n            if (!hasEditColumn) {\r\n                return false;\r\n            }\r\n\r\n            if (isEmptyValue(rowKey) || isEmptyValue(colKey)) {\r\n                return false;\r\n            }\r\n            if (\r\n                editingCell &&\r\n                editingCell.rowKey == rowKey &&\r\n                editingCell.colKey == colKey\r\n            ) {\r\n                return false;\r\n            }\r\n            if (isCellEditing) {\r\n                this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n            }\r\n\r\n            if (isDblclick && isEditColumn(colKey)) {\r\n                this.enableStopEditing = false;\r\n\r\n                this[INSTANCE_METHODS.START_EDITING_CELL]({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n            } else {\r\n                this.enableStopEditing = true;\r\n            }\r\n        },\r\n\r\n        /*\r\n         * @setEditingCell\r\n         * @desc  add editing cells\r\n         * @param {object} rowKey - row key\r\n         * @param {object} colKey - col key\r\n         * @param {object} column - column\r\n         * @param {object} row - row data\r\n         */\r\n        setEditingCell({ rowKey, colKey, column, row }) {\r\n            this.editingCell = {\r\n                rowKey,\r\n                row: cloneDeep(row),\r\n                colKey,\r\n                column,\r\n            };\r\n        },\r\n\r\n        // update editing cell value\r\n        updateEditingCellValue(value) {\r\n            const { editingCell } = this;\r\n            let { row, column } = editingCell;\r\n            row[column.field] = value;\r\n            this.editingCell.row = row;\r\n        },\r\n\r\n        /*\r\n         * @clearEditingCell\r\n         * @desc clear editing cell\r\n         */\r\n        clearEditingCell() {\r\n            this.editingCell = {\r\n                rowKey: \"\",\r\n                colKey: \"\",\r\n                row: null,\r\n                column: null,\r\n            };\r\n        },\r\n\r\n        // contextmenu item click\r\n        contextmenuItemClick(type) {\r\n            // header contextmenu\r\n            if (this.contextMenuType === CONTEXTMENU_TYPES.HEADER_CONTEXTMENU) {\r\n                this.headerContextmenuItemClick(type);\r\n            }\r\n            // body contextmenu\r\n            else {\r\n                this.bodyContextmenuItemClick(type);\r\n            }\r\n        },\r\n\r\n        // header contextmenu item click\r\n        headerContextmenuItemClick(type) {\r\n            const {\r\n                contextmenuHeaderOption,\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                allRowKeys,\r\n                colgroups,\r\n                enableColumnResize,\r\n            } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n            const { afterMenuClick } = contextmenuHeaderOption;\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                let selectionRangeKeys = getSelectionRangeKeys({\r\n                    cellSelectionRangeData,\r\n                });\r\n\r\n                let selectionRangeIndexes = getSelectionRangeIndexes({\r\n                    cellSelectionRangeData,\r\n                    colgroups,\r\n                    allRowKeys,\r\n                });\r\n\r\n                if (isFunction(afterMenuClick)) {\r\n                    const callback = afterMenuClick({\r\n                        type,\r\n                        selectionRangeKeys,\r\n                        selectionRangeIndexes,\r\n                    });\r\n                    if (isBoolean(callback) && !callback) {\r\n                        return false;\r\n                    }\r\n                }\r\n                const editInputEditor = this.$refs[this.editInputRef];\r\n\r\n                // cut\r\n                if (CONTEXTMENU_NODE_TYPES.CUT === type) {\r\n                    editInputEditor.textareaSelect();\r\n                    document.execCommand(\"cut\");\r\n                }\r\n                // copy\r\n                else if (CONTEXTMENU_NODE_TYPES.COPY === type) {\r\n                    editInputEditor.textareaSelect();\r\n                    document.execCommand(\"copy\");\r\n                }\r\n                // empty column\r\n                else if (CONTEXTMENU_NODE_TYPES.EMPTY_COLUMN === type) {\r\n                    this.deleteCellSelectionRangeValue();\r\n                }\r\n                // left fixed column to\r\n                else if (CONTEXTMENU_NODE_TYPES.LEFT_FIXED_COLUMN_TO === type) {\r\n                    this.cloneColumns = setColumnFixed({\r\n                        cloneColumns: this.cloneColumns,\r\n                        cellSelectionRangeData,\r\n                        fixedType: COLUMN_FIXED_TYPE.LEFT,\r\n                        colgroups,\r\n                        enableColumnResize,\r\n                    });\r\n                }\r\n                // cancel left fixed column to\r\n                else if (\r\n                    CONTEXTMENU_NODE_TYPES.CANCEL_LEFT_FIXED_COLUMN_TO === type\r\n                ) {\r\n                    this.cloneColumns = cancelColumnFixed({\r\n                        cloneColumns: this.cloneColumns,\r\n                        colgroups,\r\n                        fixedType: COLUMN_FIXED_TYPE.LEFT,\r\n                        enableColumnResize,\r\n                    });\r\n                }\r\n                // right fixed column to\r\n                else if (\r\n                    CONTEXTMENU_NODE_TYPES.RIGHT_FIXED_COLUMN_TO === type\r\n                ) {\r\n                    this.cloneColumns = setColumnFixed({\r\n                        cloneColumns: this.cloneColumns,\r\n                        cellSelectionRangeData,\r\n                        fixedType: COLUMN_FIXED_TYPE.RIGHT,\r\n                        colgroups,\r\n                        enableColumnResize,\r\n                    });\r\n                }\r\n                // cancel right fixed column to\r\n                else if (\r\n                    CONTEXTMENU_NODE_TYPES.CANCEL_RIGHT_FIXED_COLUMN_TO === type\r\n                ) {\r\n                    this.cloneColumns = cancelColumnFixed({\r\n                        cloneColumns: this.cloneColumns,\r\n                        colgroups,\r\n                        fixedType: COLUMN_FIXED_TYPE.RIGHT,\r\n                        enableColumnResize,\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        // body contextmenu item click\r\n        bodyContextmenuItemClick(type) {\r\n            const {\r\n                contextmenuBodyOption,\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                tableData,\r\n                allRowKeys,\r\n                colgroups,\r\n                rowKeyFieldName,\r\n            } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n            const { afterMenuClick } = contextmenuBodyOption;\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                let selectionRangeKeys = getSelectionRangeKeys({\r\n                    cellSelectionRangeData,\r\n                });\r\n\r\n                let selectionRangeIndexes = getSelectionRangeIndexes({\r\n                    cellSelectionRangeData,\r\n                    colgroups,\r\n                    allRowKeys,\r\n                });\r\n\r\n                if (isFunction(afterMenuClick)) {\r\n                    const callback = afterMenuClick({\r\n                        type,\r\n                        selectionRangeKeys,\r\n                        selectionRangeIndexes,\r\n                    });\r\n                    if (isBoolean(callback) && !callback) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                const { startRowIndex, endRowIndex } = selectionRangeIndexes;\r\n\r\n                const currentRowIndex = allRowKeys.findIndex(\r\n                    (x) => x === rowKey,\r\n                );\r\n\r\n                const editInputEditor = this.$refs[this.editInputRef];\r\n\r\n                // cut\r\n                if (CONTEXTMENU_NODE_TYPES.CUT === type) {\r\n                    editInputEditor.textareaSelect();\r\n                    document.execCommand(\"cut\");\r\n                }\r\n                // copy\r\n                else if (CONTEXTMENU_NODE_TYPES.COPY === type) {\r\n                    editInputEditor.textareaSelect();\r\n                    document.execCommand(\"copy\");\r\n                }\r\n                // paste todo\r\n                // else if (CONTEXTMENU_NODE_TYPES.PASTE === type) {\r\n                //     editInputEditor.textareaSelect();\r\n                //     document.execCommand(\"paste\", null, null);\r\n                // }\r\n                // remove rows\r\n                else if (CONTEXTMENU_NODE_TYPES.REMOVE_ROW === type) {\r\n                    tableData.splice(\r\n                        startRowIndex,\r\n                        endRowIndex - startRowIndex + 1,\r\n                    );\r\n                }\r\n                // empty rows\r\n                else if (CONTEXTMENU_NODE_TYPES.EMPTY_ROW === type) {\r\n                    this.deleteCellSelectionRangeValue();\r\n                }\r\n                // empty rows\r\n                else if (CONTEXTMENU_NODE_TYPES.EMPTY_CELL === type) {\r\n                    this.deleteCellSelectionRangeValue();\r\n                }\r\n                // insert row above\r\n                else if (CONTEXTMENU_NODE_TYPES.INSERT_ROW_ABOVE === type) {\r\n                    tableData.splice(\r\n                        currentRowIndex,\r\n                        0,\r\n                        createEmptyRowData({ colgroups, rowKeyFieldName }),\r\n                    );\r\n                }\r\n                // insert row below\r\n                else if (CONTEXTMENU_NODE_TYPES.INSERT_ROW_BELOW === type) {\r\n                    tableData.splice(\r\n                        currentRowIndex + 1,\r\n                        0,\r\n                        createEmptyRowData({ colgroups, rowKeyFieldName }),\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        // editor copy\r\n        editorCopy(event) {\r\n            const {\r\n                isCellEditing,\r\n                enableClipboard,\r\n                clipboardOption,\r\n                cellSelectionRangeData,\r\n                tableData,\r\n                colgroups,\r\n                allRowKeys,\r\n            } = this;\r\n\r\n            if (!enableClipboard) {\r\n                return false;\r\n            }\r\n\r\n            // 正在编辑的单元格不进行自定义复制功能\r\n            if (isCellEditing) {\r\n                return false;\r\n            }\r\n\r\n            const {\r\n                copy,\r\n                beforeCopy: beforeCopyCallback,\r\n                afterCopy: afterCopyCallback,\r\n            } = clipboardOption || {};\r\n\r\n            if (isBoolean(copy) && !copy) {\r\n                return false;\r\n            }\r\n\r\n            event.preventDefault();\r\n\r\n            const selectionRangeData = getSelectionRangeData({\r\n                cellSelectionRangeData,\r\n                resultType: \"flat\",\r\n                tableData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n\r\n            const response = onBeforeCopy({\r\n                cellSelectionRangeData,\r\n                selectionRangeData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n\r\n            if (isFunction(beforeCopyCallback)) {\r\n                const allowCoping = beforeCopyCallback(response);\r\n                if (isBoolean(allowCoping) && !allowCoping) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            onAfterCopy({ event, selectionRangeData });\r\n\r\n            if (isFunction(afterCopyCallback)) {\r\n                afterCopyCallback(response);\r\n            }\r\n        },\r\n\r\n        // editor paste\r\n        editorPaste(event) {\r\n            const { isCellEditing, enableClipboard, clipboardOption } = this;\r\n\r\n            if (!enableClipboard) {\r\n                return false;\r\n            }\r\n\r\n            // 正在编辑的单元格不进行自定义粘贴功能\r\n            if (isCellEditing) {\r\n                return false;\r\n            }\r\n\r\n            const {\r\n                paste,\r\n                beforePaste: beforePasteCallback,\r\n                afterPaste: afterPasteCallback,\r\n            } = clipboardOption || {};\r\n\r\n            if (isBoolean(paste) && !paste) {\r\n                return false;\r\n            }\r\n\r\n            event.preventDefault();\r\n\r\n            const response = onBeforePaste({\r\n                event,\r\n                cellSelectionRangeData: this.cellSelectionRangeData,\r\n                colgroups: this.colgroups,\r\n                allRowKeys: this.allRowKeys,\r\n                rowKeyFieldName: this.rowKeyFieldName,\r\n            });\r\n\r\n            if (\r\n                response &&\r\n                Array.isArray(response.data) &&\r\n                response.data.length\r\n            ) {\r\n                if (isFunction(beforePasteCallback)) {\r\n                    const allowPasting = beforePasteCallback(response);\r\n                    if (isBoolean(allowPasting) && !allowPasting) {\r\n                        return false;\r\n                    }\r\n                }\r\n                // change table cell data\r\n                onAfterPaste({\r\n                    tableData: this.tableData,\r\n                    beforePasteResponse: response,\r\n                });\r\n\r\n                if (isFunction(afterPasteCallback)) {\r\n                    afterPasteCallback(response);\r\n                }\r\n\r\n                const { startColKey, endColKey, startRowKey, endRowKey } =\r\n                    response.selectionRangeKeys;\r\n\r\n                this.cellSelectionCurrentCellChange({\r\n                    rowKey: startRowKey,\r\n                    colKey: startColKey,\r\n                });\r\n\r\n                this.cellSelectionNormalEndCellChange({\r\n                    rowKey: endRowKey,\r\n                    colKey: endColKey,\r\n                });\r\n\r\n                // clipboard cell value change\r\n                this.hooks.triggerHook(HOOKS_NAME.CLIPBOARD_CELL_VALUE_CHANGE);\r\n            }\r\n        },\r\n\r\n        // editor cut\r\n        editorCut(event) {\r\n            const {\r\n                isCellEditing,\r\n                enableClipboard,\r\n                clipboardOption,\r\n                cellSelectionRangeData,\r\n                tableData,\r\n                colgroups,\r\n                allRowKeys,\r\n            } = this;\r\n\r\n            if (!enableClipboard) {\r\n                return false;\r\n            }\r\n\r\n            // 正在编辑的单元格不进行自定义剪切功能\r\n            if (isCellEditing) {\r\n                return false;\r\n            }\r\n\r\n            const {\r\n                cut,\r\n                beforeCut: beforeCutCallback,\r\n                afterCut: afterCutCallback,\r\n            } = clipboardOption || {};\r\n\r\n            if (isBoolean(cut) && !cut) {\r\n                return false;\r\n            }\r\n\r\n            event.preventDefault();\r\n\r\n            const selectionRangeData = getSelectionRangeData({\r\n                cellSelectionRangeData,\r\n                resultType: \"flat\",\r\n                tableData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n\r\n            const response = onBeforeCut({\r\n                cellSelectionRangeData,\r\n                selectionRangeData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n\r\n            if (isFunction(beforeCutCallback)) {\r\n                const allowCuting = beforeCutCallback(response);\r\n                if (isBoolean(allowCuting) && !allowCuting) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            onAfterCut({\r\n                event,\r\n                tableData,\r\n                colgroups,\r\n                selectionRangeData,\r\n                selectionRangeIndexes: response.selectionRangeIndexes,\r\n            });\r\n\r\n            if (isFunction(afterCutCallback)) {\r\n                afterCutCallback(response);\r\n            }\r\n        },\r\n\r\n        // delete selection cell value\r\n        deleteCellSelectionRangeValue() {\r\n            const {\r\n                isCellEditing,\r\n                enableClipboard,\r\n                clipboardOption,\r\n                cellSelectionRangeData,\r\n                tableData,\r\n                colgroups,\r\n                allRowKeys,\r\n            } = this;\r\n\r\n            if (!enableClipboard) {\r\n                return false;\r\n            }\r\n\r\n            // 正在编辑的单元格不进行删除区域单元格功能\r\n            if (isCellEditing) {\r\n                return false;\r\n            }\r\n\r\n            const {\r\n                // delete is key word\r\n                delete: delete2,\r\n                beforeDelete: beforeDeleteCallback,\r\n                afterDelete: afterDeleteCallback,\r\n            } = clipboardOption || {};\r\n\r\n            if (isBoolean(delete2) && !delete2) {\r\n                return false;\r\n            }\r\n\r\n            const selectionRangeData = getSelectionRangeData({\r\n                cellSelectionRangeData,\r\n                resultType: \"flat\",\r\n                tableData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n\r\n            const response = onBeforeDelete({\r\n                cellSelectionRangeData,\r\n                selectionRangeData,\r\n                colgroups,\r\n                allRowKeys,\r\n            });\r\n\r\n            if (isFunction(beforeDeleteCallback)) {\r\n                const allowDeleting = beforeDeleteCallback(response);\r\n                if (isBoolean(allowDeleting) && !allowDeleting) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            onAfterDelete({\r\n                tableData,\r\n                colgroups,\r\n                selectionRangeIndexes: response.selectionRangeIndexes,\r\n            });\r\n\r\n            if (isFunction(afterDeleteCallback)) {\r\n                afterDeleteCallback(response);\r\n            }\r\n        },\r\n\r\n        // set range cell selection by header indicator\r\n        setRangeCellSelectionByHeaderIndicator() {\r\n            const { headerIndicatorColKeys, allRowKeys } = this;\r\n            const { startColKey, endColKey } = headerIndicatorColKeys;\r\n\r\n            if (isEmptyValue(startColKey) || isEmptyValue(endColKey)) {\r\n                return false;\r\n            }\r\n\r\n            this.cellSelectionCurrentCellChange({\r\n                rowKey: allRowKeys[0],\r\n                colKey: startColKey,\r\n            });\r\n\r\n            this.cellSelectionNormalEndCellChange({\r\n                rowKey: allRowKeys[allRowKeys.length - 1],\r\n                colKey: endColKey,\r\n            });\r\n        },\r\n\r\n        // set range cell selection by body indicator\r\n        setRangeCellSelectionByBodyIndicator() {\r\n            const { bodyIndicatorRowKeys, colgroups } = this;\r\n            const { startRowKey, endRowKey } = bodyIndicatorRowKeys;\r\n\r\n            if (isEmptyValue(startRowKey) || isEmptyValue(endRowKey)) {\r\n                return false;\r\n            }\r\n\r\n            if (colgroups.length > 1) {\r\n                this.cellSelectionCurrentCellChange({\r\n                    rowKey: startRowKey,\r\n                    colKey: colgroups[1].key,\r\n                });\r\n\r\n                this.cellSelectionNormalEndCellChange({\r\n                    rowKey: endRowKey,\r\n                    colKey: colgroups[colgroups.length - 1].key,\r\n                });\r\n            }\r\n        },\r\n\r\n        // set isColumnResizerHover\r\n        setIsColumnResizerHover(val) {\r\n            this.isColumnResizerHover = val;\r\n        },\r\n\r\n        // set isColumnResizing\r\n        setIsColumnResizing(val) {\r\n            this.isColumnResizing = val;\r\n        },\r\n\r\n        /*\r\n        set cell selection and column to visible\r\n        */\r\n        [INSTANCE_METHODS.SET_CELL_SELECTION]({\r\n            rowKey,\r\n            colKey,\r\n            isScrollToRow = true,\r\n        }) {\r\n            const { enableCellSelection } = this;\r\n\r\n            if (!enableCellSelection) {\r\n                return false;\r\n            }\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                this.cellSelectionCurrentCellChange({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n\r\n                const column = getColumnByColkey(colKey, this.colgroups);\r\n                // column to visible\r\n                this.columnToVisible(column);\r\n                // row to visible\r\n                if (isScrollToRow) {\r\n                    this[INSTANCE_METHODS.SCROLL_TO_ROW_KEY]({ rowKey });\r\n                }\r\n            }\r\n        },\r\n\r\n        /*\r\n        set range cell selection and column to visible\r\n        */\r\n        [INSTANCE_METHODS.SET_RANGE_CELL_SELECTION]({\r\n            startRowKey,\r\n            startColKey,\r\n            endRowKey,\r\n            endColKey,\r\n            isScrollToStartCell = false,\r\n        }) {\r\n            const { enableCellSelection } = this;\r\n\r\n            if (!enableCellSelection) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                isEmptyValue(startRowKey) ||\r\n                isEmptyValue(startColKey) ||\r\n                isEmptyValue(endRowKey) ||\r\n                isEmptyValue(endColKey)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            this.cellSelectionCurrentCellChange({\r\n                rowKey: startRowKey,\r\n                colKey: startColKey,\r\n            });\r\n\r\n            this.cellSelectionNormalEndCellChange({\r\n                rowKey: endRowKey,\r\n                colKey: endColKey,\r\n            });\r\n\r\n            // row to visible\r\n            if (isScrollToStartCell) {\r\n                const column = getColumnByColkey(startColKey, this.colgroups);\r\n                // column to visible\r\n                this.columnToVisible(column);\r\n                this[INSTANCE_METHODS.SCROLL_TO_ROW_KEY]({\r\n                    rowKey: startRowKey,\r\n                });\r\n            }\r\n        },\r\n\r\n        /*\r\n        get range cell selection\r\n        */\r\n        [INSTANCE_METHODS.GET_RANGE_CELL_SELECTION]() {\r\n            const {\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                allRowKeys,\r\n                colgroups,\r\n            } = this;\r\n\r\n            const { rowKey, colKey } = cellSelectionData.currentCell;\r\n\r\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\r\n                let selectionRangeKeys = getSelectionRangeKeys({\r\n                    cellSelectionRangeData,\r\n                });\r\n\r\n                let selectionRangeIndexes = getSelectionRangeIndexes({\r\n                    cellSelectionRangeData,\r\n                    colgroups,\r\n                    allRowKeys,\r\n                });\r\n\r\n                return {\r\n                    selectionRangeKeys,\r\n                    selectionRangeIndexes,\r\n                };\r\n            }\r\n        },\r\n\r\n        /*\r\n        set all cell selection and column to visible\r\n        */\r\n        [INSTANCE_METHODS.SET_ALL_CELL_SELECTION]() {\r\n            const { enableCellSelection } = this;\r\n\r\n            if (!enableCellSelection) {\r\n                return false;\r\n            }\r\n\r\n            const { colgroups, allRowKeys } = this;\r\n\r\n            if (colgroups.length) {\r\n                const colKeys = colgroups\r\n                    .filter((x) => !x.operationColumn)\r\n                    .map((x) => x.key);\r\n\r\n                if (colKeys.length) {\r\n                    this.headerIndicatorColKeysChange({\r\n                        startColKey: colKeys[0],\r\n                        endColKey: colKeys[colKeys.length - 1],\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (allRowKeys.length) {\r\n                this.bodyIndicatorRowKeysChange({\r\n                    startRowKey: allRowKeys[0],\r\n                    endRowKey: allRowKeys[allRowKeys.length - 1],\r\n                });\r\n            }\r\n        },\r\n\r\n        // hide columns by keys\r\n        [INSTANCE_METHODS.HIDE_COLUMNS_BY_KEYS](keys) {\r\n            if (!isEmptyArray(keys)) {\r\n                /*\r\n                将要隐藏的列添加到 hiddenColumns 中\r\n                Add the columns you want to hide to hidden columns\r\n                */\r\n                this.hiddenColumns = Array.from(\r\n                    new Set(this.hiddenColumns.concat(keys)),\r\n                );\r\n\r\n                this.showOrHideColumns();\r\n            }\r\n        },\r\n\r\n        // show columns by keys\r\n        [INSTANCE_METHODS.SHOW_COLUMNS_BY_KEYS](keys) {\r\n            if (!isEmptyArray(keys)) {\r\n                /*\r\n                将要显示的列从 hiddenColumns 中移除\r\n                Remove the columns to show from hidden columns\r\n                */\r\n                for (let i = keys.length - 1; i >= 0; i--) {\r\n                    const delIndex = this.hiddenColumns.indexOf(keys[i]);\r\n                    if (delIndex > -1) {\r\n                        this.hiddenColumns.splice(delIndex, 1);\r\n                    }\r\n                }\r\n\r\n                this.showOrHideColumns();\r\n            }\r\n        },\r\n\r\n        // table scrollTo\r\n        [INSTANCE_METHODS.SCROLL_TO](option) {\r\n            scrollTo(this.$refs[this.tableContainerRef], option);\r\n        },\r\n        // table scroll to rowKey position\r\n        [INSTANCE_METHODS.SCROLL_TO_ROW_KEY]({ rowKey }) {\r\n            if (isEmptyValue(rowKey)) {\r\n                console.warn(\"Row key can't be empty!\");\r\n                return false;\r\n            }\r\n\r\n            let scrollTop = 0;\r\n\r\n            const { isVirtualScroll, headerTotalHeight } = this;\r\n\r\n            const tableContainerRef = this.$refs[this.tableContainerRef];\r\n\r\n            if (isVirtualScroll) {\r\n                const position = this.virtualScrollPositions.find(\r\n                    (x) => x.rowKey === rowKey,\r\n                );\r\n\r\n                if (position) {\r\n                    scrollTop = position.top;\r\n                }\r\n\r\n                // fix bug #470\r\n                setTimeout(() => {\r\n                    scrollTo(tableContainerRef, {\r\n                        top: scrollTop,\r\n                        behavior: \"auto\",\r\n                    });\r\n                }, 200);\r\n            } else {\r\n                const rowEl = this.$el.querySelector(\r\n                    `tbody tr[${COMPS_CUSTOM_ATTRS.BODY_ROW_KEY}=\"${rowKey}\"]`,\r\n                );\r\n\r\n                scrollTop = rowEl.offsetTop - headerTotalHeight;\r\n            }\r\n\r\n            scrollTo(tableContainerRef, {\r\n                top: scrollTop,\r\n                behavior: isVirtualScroll ? \"auto\" : \"smooth\",\r\n            });\r\n        },\r\n        // scroll to col key position\r\n        [INSTANCE_METHODS.SCROLL_TO_COL_KEY]({ colKey }) {\r\n            const column = getColumnByColkey(colKey, this.colgroups);\r\n            if (column) {\r\n                this.columnToVisible(column);\r\n            }\r\n        },\r\n        // start editing cell\r\n        [INSTANCE_METHODS.START_EDITING_CELL]({\r\n            rowKey,\r\n            colKey,\r\n            defaultValue,\r\n        }) {\r\n            const {\r\n                editOption,\r\n                colgroups,\r\n                rowKeyFieldName,\r\n                editingCell,\r\n                cellSelectionData,\r\n            } = this;\r\n\r\n            if (!editOption) {\r\n                return false;\r\n            }\r\n\r\n            let currentRow = this.tableData.find(\r\n                (x) => x[rowKeyFieldName] === rowKey,\r\n            );\r\n\r\n            currentRow = cloneDeep(currentRow);\r\n\r\n            /* \r\n            调用API编辑的情况，需要关闭之前编辑的单元格\r\n            */\r\n            if (\r\n                editingCell.rowKey === rowKey &&\r\n                editingCell.colKey === colKey\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            const currentColumn = colgroups.find((x) => x.key === colKey);\r\n            // 当前列是否可编辑\r\n            if (!currentColumn.edit) {\r\n                return false;\r\n            }\r\n\r\n            // 给当前列赋默认值\r\n            if (isDefined(defaultValue)) {\r\n                this.editorInputStartValue = defaultValue;\r\n                // doesn't change cell original value\r\n                currentRow[currentColumn.field] = defaultValue;\r\n            } else {\r\n                this.editorInputStartValue = currentRow[currentColumn.field];\r\n            }\r\n\r\n            if (\r\n                cellSelectionData.currentCell.colKey !== colKey ||\r\n                cellSelectionData.currentCell.rowKey !== rowKey\r\n            ) {\r\n                this.cellSelectionCurrentCellChange({\r\n                    rowKey,\r\n                    colKey,\r\n                });\r\n            }\r\n\r\n            // set editing cell\r\n            this.setEditingCell({\r\n                rowKey,\r\n                colKey,\r\n                column: currentColumn,\r\n                row: cloneDeep(currentRow),\r\n            });\r\n        },\r\n        // stop editing cell\r\n        [INSTANCE_METHODS.STOP_EDITING_CELL]() {\r\n            const { editOption, isCellEditing } = this;\r\n\r\n            if (!editOption) {\r\n                return false;\r\n            }\r\n\r\n            // clear editor input start value\r\n            this.editorInputStartValue = \"\";\r\n\r\n            if (isCellEditing) {\r\n                this.saveCellWhenStopEditing();\r\n            }\r\n        },\r\n        // set highlight row\r\n        [INSTANCE_METHODS.SET_HIGHLIGHT_ROW]({ rowKey }) {\r\n            this.highlightRowKey = rowKey;\r\n        },\r\n    },\r\n    created() {\r\n        // bug fixed #467\r\n        this.debouncedBodyCellWidthChange = debounce(\r\n            this.bodyCellWidthChange,\r\n            0,\r\n        );\r\n    },\r\n    mounted() {\r\n        this.parentRendered = true;\r\n\r\n        // set contextmenu event target\r\n        this.contextmenuEventTarget = this.$el.querySelector(\r\n            `.${clsName(\"content\")}`,\r\n        );\r\n\r\n        // create hook instance\r\n        this.hooks = new Hooks();\r\n\r\n        // receive sort change\r\n        this.$on(EMIT_EVENTS.SORT_CHANGE, (params) => {\r\n            this.updateColgroupsBySortChange(params);\r\n        });\r\n\r\n        // receive row selected change\r\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE, (params) => {\r\n            this.selectedAllChange(params);\r\n        });\r\n\r\n        // receive selected all info\r\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO, (params) => {\r\n            this.setSelectedAllInfo(params);\r\n        });\r\n\r\n        // receive multiple header row height change\r\n        this.$on(\r\n            EMIT_EVENTS.HEADER_ROW_HEIGHT_CHANGE,\r\n            ({ rowIndex, height }) => {\r\n                this.headerRowHeightChange({ rowIndex, height });\r\n            },\r\n        );\r\n\r\n        // receive virtual scroll row height change\r\n        this.$on(EMIT_EVENTS.BODY_ROW_HEIGHT_CHANGE, ({ rowKey, height }) => {\r\n            this.bodyRowHeightChange({ rowKey, height });\r\n        });\r\n\r\n        // receive footer row height change\r\n        this.$on(\r\n            EMIT_EVENTS.FOOTER_ROW_HEIGHT_CHANGE,\r\n            ({ rowIndex, height }) => {\r\n                this.footRowHeightChange({ rowIndex, height });\r\n            },\r\n        );\r\n\r\n        // recieve body cell click\r\n        this.$on(EMIT_EVENTS.BODY_CELL_CLICK, (params) => {\r\n            this.bodyCellClick(params);\r\n        });\r\n\r\n        // recieve body cell mouseover\r\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEOVER, (params) => {\r\n            this.bodyCellMouseover(params);\r\n        });\r\n\r\n        // recieve body cell mousedown\r\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEDOWN, (params) => {\r\n            this.bodyCellMousedown(params);\r\n        });\r\n\r\n        // recieve body cell mousemove\r\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEMOVE, (params) => {\r\n            this.bodyCellMousemove(params);\r\n        });\r\n\r\n        // recieve body cell mouseup\r\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEUP, (params) => {\r\n            this.bodyCellMouseup(params);\r\n        });\r\n\r\n        // recieve selection corner mousedown\r\n        this.$on(EMIT_EVENTS.SELECTION_CORNER_MOUSEDOWN, (params) => {\r\n            this.cellSelectionCornerMousedown(params);\r\n        });\r\n\r\n        // recieve selection corner mouseup\r\n        this.$on(EMIT_EVENTS.SELECTION_CORNER_MOUSEUP, (params) => {\r\n            this.cellSelectionCornerMouseup(params);\r\n        });\r\n\r\n        // autofilling direction change\r\n        this.$on(EMIT_EVENTS.AUTOFILLING_DIRECTION_CHANGE, (params) => {\r\n            this.autofillingDirectionChange(params);\r\n        });\r\n\r\n        // recieve body cell contextmenu(right click)\r\n        this.$on(EMIT_EVENTS.BODY_CELL_CONTEXTMENU, (params) => {\r\n            this.bodyCellContextmenu(params);\r\n        });\r\n\r\n        // recieve body cell double click\r\n        this.$on(EMIT_EVENTS.BODY_CELL_DOUBLE_CLICK, (params) => {\r\n            this.bodyCellDoubleClick(params);\r\n        });\r\n\r\n        // recieve header cell contextmenu(right click)\r\n        this.$on(EMIT_EVENTS.HEADER_CELL_CLICK, (params) => {\r\n            this.headerCellClick(params);\r\n        });\r\n\r\n        // recieve header cell contextmenu(right click)\r\n        this.$on(EMIT_EVENTS.HEADER_CELL_CONTEXTMENU, (params) => {\r\n            this.headerCellContextmenu(params);\r\n        });\r\n\r\n        // recieve header cell mousedown\r\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSEDOWN, (params) => {\r\n            this.headerCellMousedown(params);\r\n        });\r\n\r\n        // recieve header cell mouseover\r\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSEOVER, (params) => {\r\n            this.headerCellMouseover(params);\r\n        });\r\n\r\n        // recieve header cell mousemove\r\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSEMOVE, (params) => {\r\n            this.headerCellMousemove(params);\r\n        });\r\n\r\n        // recieve header cell mouseleave\r\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSELEAVE, (params) => {\r\n            this.headerCellMouseleave(params);\r\n        });\r\n\r\n        // add key down event listener\r\n        document.addEventListener(\"keydown\", this.dealKeydownEvent);\r\n\r\n        // init scrolling\r\n        this.initScrolling();\r\n    },\r\n    destroyed() {\r\n        // remove key down event listener\r\n        document.removeEventListener(\"keydown\", this.dealKeydownEvent);\r\n    },\r\n    render() {\r\n        const {\r\n            showHeader,\r\n            tableViewportWidth,\r\n            tableContainerStyle,\r\n            tableStyle,\r\n            tableClass,\r\n            colgroups,\r\n            groupColumns,\r\n            fixedHeader,\r\n            fixedFooter,\r\n            actualRenderTableData,\r\n            debouncedBodyCellWidthChange,\r\n            expandOption,\r\n            checkboxOption,\r\n            radioOption,\r\n            rowKeyFieldName,\r\n            virtualScrollOption,\r\n            isVirtualScroll,\r\n            sortOption,\r\n            cellStyleOption,\r\n            showVirtualScrollingPlaceholder,\r\n            cellSelectionData,\r\n            editOption,\r\n            contextmenuOptions,\r\n            allRowKeys,\r\n            enableCellSelection,\r\n            enableColumnResize,\r\n            cellSelectionRangeData,\r\n            headerIndicatorColKeys,\r\n            bodyIndicatorRowKeys,\r\n        } = this;\r\n\r\n        // header props\r\n        const headerProps = {\r\n            class: clsName(\"header\"),\r\n            style: {\r\n                cursor:\r\n                    this.isColumnResizerHover || this.isColumnResizing\r\n                        ? \"col-resize\"\r\n                        : \"\",\r\n            },\r\n            props: {\r\n                columnsOptionResetTime: this.columnsOptionResetTime,\r\n                tableViewportWidth,\r\n                groupColumns,\r\n                colgroups,\r\n                isGroupHeader: this.isGroupHeader,\r\n                fixedHeader,\r\n                checkboxOption,\r\n                sortOption,\r\n                cellStyleOption,\r\n                eventCustomOption: this.eventCustomOption,\r\n                headerRows: this.headerRows,\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                headerIndicatorColKeys,\r\n            },\r\n            nativeOn: {\r\n                click: () => {\r\n                    this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                },\r\n                mouseleave: (event) => {\r\n                    this.headerMouseleave(event);\r\n                },\r\n            },\r\n        };\r\n\r\n        // body props\r\n        const bodyProps = {\r\n            ref: this.tableBodyRef,\r\n            class: [clsName(\"body\"), this.tableBodyClass],\r\n            props: {\r\n                tableViewportWidth,\r\n                columnsOptionResetTime: this.columnsOptionResetTime,\r\n                colgroups,\r\n                expandOption,\r\n                checkboxOption,\r\n                actualRenderTableData,\r\n                rowKeyFieldName,\r\n                radioOption,\r\n                virtualScrollOption,\r\n                isVirtualScroll,\r\n                cellStyleOption,\r\n                cellSpanOption: this.cellSpanOption,\r\n                eventCustomOption: this.eventCustomOption,\r\n                cellSelectionOption: this.cellSelectionOption,\r\n                hasFixedColumn: this.hasFixedColumn,\r\n                cellSelectionData,\r\n                cellSelectionRangeData,\r\n                allRowKeys,\r\n                editOption,\r\n                highlightRowKey: this.highlightRowKey,\r\n                showVirtualScrollingPlaceholder,\r\n                bodyIndicatorRowKeys,\r\n            },\r\n            on: {\r\n                [EMIT_EVENTS.BODY_CELL_WIDTH_CHANGE]:\r\n                    debouncedBodyCellWidthChange,\r\n                [EMIT_EVENTS.HIGHLIGHT_ROW_CHANGE]:\r\n                    this[INSTANCE_METHODS.SET_HIGHLIGHT_ROW],\r\n            },\r\n        };\r\n\r\n        // footer props\r\n        const footerProps = {\r\n            class: [clsName(\"footer\")],\r\n            props: {\r\n                colgroups,\r\n                footerData: this.footerData,\r\n                rowKeyFieldName,\r\n                cellStyleOption,\r\n                fixedFooter,\r\n                cellSpanOption: this.cellSpanOption,\r\n                eventCustomOption: this.eventCustomOption,\r\n                hasFixedColumn: this.hasFixedColumn,\r\n                allRowKeys,\r\n                footerRows: this.footerRows,\r\n            },\r\n            nativeOn: {\r\n                click: () => {\r\n                    this[INSTANCE_METHODS.STOP_EDITING_CELL]();\r\n                },\r\n            },\r\n        };\r\n\r\n        // table root props\r\n        const tableRootProps = {\r\n            ref: this.tableRootRef,\r\n            class: {\r\n                \"vue-table-root\": true,\r\n            },\r\n        };\r\n\r\n        // table container wrapper props\r\n        const tableContainerWrapperProps = {\r\n            ref: this.tableContainerWrapperRef,\r\n            style: this.tableContainerWrapperStyle,\r\n            class: {\r\n                \"ve-table\": true,\r\n                [clsName(\"border-around\")]: this.borderAround,\r\n            },\r\n            props: {\r\n                tagName: \"div\",\r\n            },\r\n            on: {\r\n                \"on-dom-resize-change\": ({ height }) => {\r\n                    this.tableOffestHeight = height;\r\n                    this.initVirtualScroll();\r\n                    // fixed #404\r\n                    this.initScrolling();\r\n                    this.setScrollBarStatus();\r\n                    this.hooks.triggerHook(HOOKS_NAME.TABLE_SIZE_CHANGE);\r\n                },\r\n            },\r\n            directives: [\r\n                {\r\n                    name: \"click-outside\",\r\n                    value: (e) => {\r\n                        this.tableClickOutside(e);\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        // table container props\r\n        const tableContainerProps = {\r\n            ref: this.tableContainerRef,\r\n            class: this.tableContainerClass,\r\n            style: tableContainerStyle,\r\n            on: {\r\n                scroll: () => {\r\n                    const tableContainerRef =\r\n                        this.$refs[this.tableContainerRef];\r\n\r\n                    this.hooks.triggerHook(\r\n                        HOOKS_NAME.TABLE_CONTAINER_SCROLL,\r\n                        tableContainerRef,\r\n                    );\r\n                    this.setScrolling(tableContainerRef);\r\n\r\n                    if (isVirtualScroll) {\r\n                        this.tableContainerVirtualScrollHandler(\r\n                            tableContainerRef,\r\n                        );\r\n\r\n                        const {\r\n                            virtualScrollStartIndex: startIndex,\r\n                            previewVirtualScrollStartIndex: previewStartIndex,\r\n                        } = this;\r\n\r\n                        const differ = Math.abs(startIndex - previewStartIndex);\r\n\r\n                        this.previewVirtualScrollStartIndex = startIndex;\r\n\r\n                        // default placeholder per scrolling row count\r\n                        if (\r\n                            differ > this.defaultPlaceholderPerScrollingRowCount\r\n                        ) {\r\n                            this.showVirtualScrollingPlaceholder = true;\r\n                        } else {\r\n                            this.showVirtualScrollingPlaceholder = false;\r\n                        }\r\n\r\n                        this.debounceScrollEnded();\r\n                    }\r\n                },\r\n                mouseup: () => {\r\n                    // 事件的先后顺序 containerMouseup > bodyCellMousedown > bodyCellMouseup > bodyCellClick\r\n                    this.tableContainerMouseup();\r\n                },\r\n                mousemove: (event) => {\r\n                    // todo\r\n                },\r\n            },\r\n        };\r\n\r\n        // table wrapper props\r\n        const tableWrapperProps = {\r\n            ref: this.tableContentWrapperRef,\r\n            class: [clsName(\"content-wrapper\")],\r\n            props: {\r\n                tagName: \"div\",\r\n            },\r\n            on: {\r\n                \"on-dom-resize-change\": ({ height }) => {\r\n                    this.tableHeight = height;\r\n                },\r\n            },\r\n        };\r\n\r\n        // tale props\r\n        const tableProps = {\r\n            ref: this.tableRef,\r\n            class: [clsName(\"content\"), tableClass],\r\n            style: tableStyle,\r\n        };\r\n\r\n        // selection props\r\n        const selectionProps = {\r\n            ref: this.cellSelectionRef,\r\n            props: {\r\n                tableEl: this.$refs[this.tableRef],\r\n                allRowKeys,\r\n                colgroups,\r\n                parentRendered: this.parentRendered,\r\n                hooks: this.hooks,\r\n                cellSelectionData,\r\n                isAutofillStarting: this.isAutofillStarting,\r\n                cellSelectionRangeData,\r\n                currentCellSelectionType: this.currentCellSelectionType,\r\n                showVirtualScrollingPlaceholder,\r\n                isVirtualScroll,\r\n                virtualScrollVisibleIndexs: this.virtualScrollVisibleIndexs,\r\n                isCellEditing: this.isCellEditing,\r\n                cellAutofillOption: this.cellAutofillOption,\r\n            },\r\n            on: {\r\n                [EMIT_EVENTS.CELL_SELECTION_RANGE_DATA_CHANGE]: (newData) => {\r\n                    this.cellSelectionRangeDataChange(newData);\r\n                },\r\n            },\r\n        };\r\n\r\n        // edit input props\r\n        const editInputProps = {\r\n            ref: this.editInputRef,\r\n            props: {\r\n                hooks: this.hooks,\r\n                parentRendered: this.parentRendered,\r\n                inputStartValue: this.editorInputStartValue,\r\n                rowKeyFieldName,\r\n                tableData: this.tableData,\r\n                cellSelectionData,\r\n                colgroups,\r\n                editingCell: this.editingCell,\r\n                isCellEditing: this.isCellEditing,\r\n                allRowKeys,\r\n                hasXScrollBar: this.hasXScrollBar,\r\n                hasYScrollBar: this.hasYScrollBar,\r\n                hasRightFixedColumn: this.hasRightFixedColumn,\r\n                scrollBarWidth: this.getScrollBarWidth(),\r\n            },\r\n            on: {\r\n                // edit input click\r\n                [EMIT_EVENTS.EDIT_INPUT_CLICK]: () => {\r\n                    this.enableStopEditing = false;\r\n                },\r\n                // edit input value change\r\n                [EMIT_EVENTS.EDIT_INPUT_VALUE_CHANGE]: (value) => {\r\n                    this.updateEditingCellValue(value);\r\n                },\r\n                // copy\r\n                [EMIT_EVENTS.EDIT_INPUT_COPY]: (e) => {\r\n                    this.editorCopy(e);\r\n                },\r\n                // paste\r\n                [EMIT_EVENTS.EDIT_INPUT_PASTE]: (e) => {\r\n                    this.editorPaste(e);\r\n                },\r\n                // cut\r\n                [EMIT_EVENTS.EDIT_INPUT_CUT]: (e) => {\r\n                    this.editorCut(e);\r\n                },\r\n            },\r\n        };\r\n\r\n        // 直接在组件上写事件，单元测试无法通过。如 on={{\"on-node-click\":()=>{}}}\r\n        const contextmenuProps = {\r\n            ref: this.contextmenuRef,\r\n            props: {\r\n                eventTarget: this.contextmenuEventTarget,\r\n                options: contextmenuOptions,\r\n            },\r\n            on: {\r\n                \"on-node-click\": (type) => {\r\n                    this.contextmenuItemClick(type);\r\n                },\r\n            },\r\n        };\r\n\r\n        // column resizer props\r\n        const columnResizerProps = {\r\n            props: {\r\n                parentRendered: this.parentRendered,\r\n                tableContainerEl: this.$refs[this.tableContainerRef],\r\n                hooks: this.hooks,\r\n                colgroups,\r\n                isColumnResizerHover: this.isColumnResizerHover,\r\n                isColumnResizing: this.isColumnResizing,\r\n                setIsColumnResizerHover: this.setIsColumnResizerHover,\r\n                setIsColumnResizing: this.setIsColumnResizing,\r\n                setColumnWidth: this.setColumnWidth,\r\n                columnWidthResizeOption: this.columnWidthResizeOption,\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div {...tableRootProps}>\r\n                <VueDomResizeObserver {...tableContainerWrapperProps}>\r\n                    <div {...tableContainerProps}>\r\n                        {/* virtual view phantom */}\r\n                        {this.getVirtualViewPhantom()}\r\n                        {/* vue 实例类型，访问dom时需要通过$el属性访问 */}\r\n                        <VueDomResizeObserver {...tableWrapperProps}>\r\n                            <table {...tableProps}>\r\n                                {/* colgroup */}\r\n                                <Colgroup\r\n                                    colgroups={colgroups}\r\n                                    enableColumnResize={enableColumnResize}\r\n                                />\r\n                                {/* table header */}\r\n                                {showHeader && <Header {...headerProps} />}\r\n                                {/* table body */}\r\n                                <Body {...bodyProps} />\r\n                                {/* table footer */}\r\n                                <Footer {...footerProps} />\r\n                            </table>\r\n                            {/* cell selection */}\r\n                            {enableCellSelection && (\r\n                                <Selection {...selectionProps} />\r\n                            )}\r\n                        </VueDomResizeObserver>\r\n                    </div>\r\n                    {/* edit input */}\r\n                    {enableCellSelection && <EditInput {...editInputProps} />}\r\n                    {/* contextmenu */}\r\n                    {(this.enableHeaderContextmenu ||\r\n                        this.enableBodyContextmenu) && (\r\n                        <VeContextmenu {...contextmenuProps} />\r\n                    )}\r\n                    {/* column resizer */}\r\n                    {enableColumnResize && (\r\n                        <ColumnResizer {...columnResizerProps} />\r\n                    )}\r\n                </VueDomResizeObserver>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import VeTable from \"./src/index.jsx\";\r\n\r\nVeTable.install = function (Vue) {\r\n    Vue.component(VeTable.name, VeTable);\r\n};\r\n\r\nexport default VeTable;\r\n","// This file is auto gererated by build/build-entry.js\r\n\r\nimport VeCheckbox from './ve-checkbox';\r\nimport VeCheckboxGroup from './ve-checkbox-group';\r\nimport VeContextmenu from './ve-contextmenu';\r\nimport VeDropdown from './ve-dropdown';\r\nimport VeIcon from './ve-icon';\r\nimport VeLoading from './ve-loading';\r\nimport VeLocale from './ve-locale';\r\nimport VePagination from './ve-pagination';\r\nimport VeRadio from './ve-radio';\r\nimport VeSelect from './ve-select';\r\nimport VeTable from './ve-table';\r\n\r\n\r\nconst version = '2.23.0';\r\nconst components = [\r\n  VeCheckbox,\r\n  VeCheckboxGroup,\r\n  VeContextmenu,\r\n  VeDropdown,\r\n  VeIcon,\r\n  VeLoading,\r\n  VeLocale,\r\n  VePagination,\r\n  VeRadio,\r\n  VeSelect,\r\n  VeTable\r\n];\r\n\r\nconst install = Vue => {\r\n  components.forEach(Component => {\r\n    Vue.use(Component);\r\n  });\r\n\r\n  Vue.prototype.$veLoading = VeLoading;\r\n  Vue.prototype.$veLocale = VeLocale;\r\n};\r\n\r\n/* istanbul ignore if */\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  install(window.Vue);\r\n}\r\n\r\nexport {\r\n  install,\r\n  version,\r\n  VeCheckbox,\r\n  VeCheckboxGroup,\r\n  VeContextmenu,\r\n  VeDropdown,\r\n  VeIcon,\r\n  VeLoading,\r\n  VeLocale,\r\n  VePagination,\r\n  VeRadio,\r\n  VeSelect,\r\n  VeTable\r\n};\r\n\r\nexport default {\r\n  install,\r\n  version,\r\n  VeCheckbox,\r\n  VeCheckboxGroup,\r\n  VeContextmenu,\r\n  VeDropdown,\r\n  VeIcon,\r\n  VeLoading,\r\n  VeLocale,\r\n  VePagination,\r\n  VeRadio,\r\n  VeSelect,\r\n  VeTable\r\n};\r\n","// polyfills\r\nimport \"core-js/stable\";\r\nimport \"regenerator-runtime/runtime\";\r\n\r\nimport Vue from \"vue\";\r\nimport APP from \"@/comp/app.vue\";\r\nimport router from \"@/router/index\";\r\n\r\nimport { getDocTheme } from \"@/utils/cookies\";\r\n\r\nimport NProgress from \"nprogress\"; // Progress 进度条\r\n\r\nimport \"@/css/index.less\";\r\nimport \"@/css/custom.less\";\r\nimport \"@/comp/app.less\";\r\n\r\n// Progress 进度条 样式\r\nimport \"nprogress/nprogress.css\";\r\n// highlight theme\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/color-brewer.css\";\r\n\r\nimport DemoBlock from \"@/comp/demo-block.vue\";\r\nimport Anchor from \"@/comp/anchor.vue\";\r\nVue.component(\"demo-block\", DemoBlock);\r\nVue.component(\"anchor\", Anchor);\r\n\r\n// 仅用作示例\r\nimport {\r\n    Switch,\r\n    Row,\r\n    Col,\r\n    Radio,\r\n    RadioButton,\r\n    RadioGroup,\r\n    Select,\r\n    Option,\r\n    DatePicker,\r\n    InputNumber,\r\n    Input,\r\n    Button,\r\n    CascaderPanel,\r\n} from \"element-ui\";\r\nVue.use(Switch);\r\nVue.use(Row);\r\nVue.use(Col);\r\nVue.use(Radio);\r\nVue.use(RadioButton);\r\nVue.use(RadioGroup);\r\nVue.use(Select);\r\nVue.use(Option);\r\nVue.use(DatePicker);\r\nVue.use(InputNumber);\r\nVue.use(Input);\r\nVue.use(Button);\r\nVue.use(CascaderPanel);\r\n\r\n// vue-lazy-container\r\nimport VueLazyContainer from \"vue-lazy-container\";\r\nVue.use(VueLazyContainer);\r\n\r\n// product\r\n/* import \"../../libs/theme-default/index.css\";\r\nimport {\r\n    VeCheckbox,\r\n    VeCheckboxGroup,\r\n    VeDropdown,\r\n    VeIcon,\r\n    VeLoading,\r\n    VeLocale,\r\n    VePagination,\r\n    VeRadio,\r\n    VeSelect,\r\n    VeTable\r\n} from \"../../libs/main.js\";\r\nimport zhCN from \"../../libs/locale/lang/zh-CN\";\r\nimport enUS from \"../../libs/locale/lang/en-US\";\r\nVeLocale.use(zhCN); */\r\n\r\n// 设置当前环境\r\nwindow.env = process.env.NODE_ENV === \"development\" ? \"dev\" : \"pro\";\r\n\r\n/*\r\ndev mode\r\n1、生产环境使用已发布的样式文件，参考 theme-switch-mixins.js\r\n*/\r\n\r\nif (window.env === \"dev\") {\r\n    const docTheme = getDocTheme();\r\n    if (docTheme && docTheme === \"dark\") {\r\n        require(\"../../packages/theme-dark/index.less\");\r\n    } else {\r\n        require(\"../../packages/theme-default/index.less\");\r\n    }\r\n}\r\n\r\nimport {\r\n    VeCheckbox,\r\n    VeCheckboxGroup,\r\n    VeContextmenu,\r\n    VeDropdown,\r\n    VeIcon,\r\n    VeLoading,\r\n    VeLocale,\r\n    VePagination,\r\n    VeRadio,\r\n    VeSelect,\r\n    VeTable,\r\n} from \"../../packages/index.js\";\r\n\r\nVue.use(VeCheckbox);\r\nVue.use(VeCheckboxGroup);\r\nVue.use(VeContextmenu);\r\nVue.use(VeDropdown);\r\nVue.use(VeIcon);\r\nVue.use(VePagination);\r\nVue.use(VeRadio);\r\nVue.use(VeSelect);\r\nVue.use(VeTable);\r\n\r\nVue.prototype.$veLoading = VeLoading;\r\nVue.prototype.$veLocale = VeLocale;\r\n\r\n// 全部引入\r\n/* import \"../../packages/theme-default/index.less\";\r\nimport vueEasytable from \"../../packages/index.js\";\r\nVue.use(vueEasytable); */\r\n\r\n/* import \"../../libs/theme-default/index.css\";\r\nimport vueEasytable from \"../../libs/main.js\";\r\nVue.use(vueEasytable); */\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    NProgress.start();\r\n\r\n    next();\r\n\r\n    NProgress.done();\r\n});\r\n\r\nrouter.afterEach(() => {\r\n    Vue.nextTick(() => {\r\n        const blocks = document.querySelectorAll(\"pre code:not(.hljs)\");\r\n        Array.prototype.forEach.call(blocks, hljs.highlightBlock);\r\n\r\n        window.scroll(0, 0);\r\n    });\r\n    NProgress.done(); // 结束Progress\r\n});\r\n\r\nnew Vue({\r\n    el: \"#app\",\r\n    router,\r\n    render: (h) => h(APP),\r\n});\r\n","/* doc lang */\r\nexport const DOC_LANG = {\r\n    EN: \"en\",\r\n    ZH: \"zh\",\r\n};\r\n\r\n// doc theme\r\n// export const DOC_THEME = {\r\n//     DEFAULT: \"default\",\r\n//     DARK: \"dark\",\r\n// };\r\n\r\n// doc lang cookie\r\nexport const DOC_LANG_COOKIE = \"doc_lang_cookie\";\r\n\r\n// doc theme cookie\r\nexport const DOC_THEME_COOKIE = \"doc_lang_cookie\";\r\n","const emptyLayout = () => import(\"@/comp/layout/empty-layout.vue\");\r\n\r\nconst config = [\r\n    {\r\n        path: \"intro\",\r\n        component: () => import(\"@/docs/zh/intro.md\"),\r\n        name: \"简介\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"start\",\r\n        component: () => import(\"@/docs/zh/start.md\"),\r\n        name: \"快速开始\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"theme\",\r\n        component: () => import(\"@/docs/zh/theme.md\"),\r\n        name: \"主题定制\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"locale\",\r\n        component: () => import(\"@/docs/zh/locale.md\"),\r\n        name: \"国际化\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"qa\",\r\n        component: () => import(\"@/docs/zh/QA.md\"),\r\n        name: \"常见问题\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"base\",\r\n        name: \"基础组件\",\r\n        component: emptyLayout,\r\n        children: [\r\n            {\r\n                path: \"loading\",\r\n                component: () => import(\"@/docs/zh/ve-loading/main.vue\"),\r\n                name: \"Loading 加载\",\r\n            },\r\n            {\r\n                path: \"locale\",\r\n                component: () => import(\"@/docs/zh/ve-locale/main.vue\"),\r\n                name: \"Locale 国际化\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"icon\",\r\n                component: () => import(\"@/docs/zh/ve-icon/main.vue\"),\r\n                name: \"Icon 图标\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"pagination\",\r\n                component: () => import(\"@/docs/zh/ve-pagination/main.vue\"),\r\n                name: \"Pagination 分页\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"contextmenu\",\r\n                component: () => import(\"@/docs/zh/ve-contextmenu/main.vue\"),\r\n                name: \"Contextmenu 右键菜单\",\r\n                meta: { keepAlive: true },\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: \"table\",\r\n        name: \"Table 组件\",\r\n        component: emptyLayout,\r\n        children: [\r\n            /*  {\r\n                path: \"test\",\r\n                component: () => import(\"@/docs/zh/ve-table/test/main.vue\"),\r\n                name: \"性能测试\",\r\n                meta: { keepAlive: true }\r\n            }, */\r\n            {\r\n                path: \"usage\",\r\n                component: () => import(\"@/docs/zh/ve-table/usage/main.md\"),\r\n                name: \"用法\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"table-width\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/table-width/main.vue\"),\r\n                name: \"表格宽度\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"table-height\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/table-height/main.vue\"),\r\n                name: \"表格高度\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"table-border\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/table-border/main.vue\"),\r\n                name: \"表格边框\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-width\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/column-width/main.vue\"),\r\n                name: \"列宽设置\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-resize\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/column-resize/main.vue\"),\r\n                name: \"列宽拖动\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-fixed\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/column-fixed/main.vue\"),\r\n                name: \"列固定\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-hidden\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/column-hidden/main.vue\"),\r\n                name: \"列隐藏\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-fixed\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/header-fixed/main.vue\"),\r\n                name: \"表头固定\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-grouping\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/header-grouping/main.vue\"),\r\n                name: \"表头分组\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-hidden\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/header-hidden/main.vue\"),\r\n                name: \"表头隐藏\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-filter\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/header-filter/main.vue\"),\r\n                name: \"筛选\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-filter-custom\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/header-filter-custom/main.vue\"),\r\n                name: \"筛选自定义\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-sort\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/header-sort/main.vue\"),\r\n                name: \"排序\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-align\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-align/main.vue\"),\r\n                name: \"单元格对齐\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-style\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-style/main.vue\"),\r\n                name: \"单元格样式\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-custom\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-custom/main.vue\"),\r\n                name: \"单元格自定义\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-span\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-span/main.vue\"),\r\n                name: \"单元格合并\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"operation-column\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/operation-column/main.vue\"),\r\n                name: \"操作列\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-selection\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-selection/main.vue\"),\r\n                name: \"单元格选择\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-autofill\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-autofill/main.vue\"),\r\n                name: \"单元格自动填充\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-edit\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-edit/main.vue\"),\r\n                name: \"单元格编辑\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"clipboard\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/clipboard/main.vue\"),\r\n                name: \"剪贴板\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"contextmenu\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/contextmenu/main.vue\"),\r\n                name: \"右键菜单\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-ellipsis\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/cell-ellipsis/main.vue\"),\r\n                name: \"单元格省略\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-index\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/row-index/main.vue\"),\r\n                name: \"行序号\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-radio\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/row-radio/main.vue\"),\r\n                name: \"行单选\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-checkbox\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/row-checkbox/main.vue\"),\r\n                name: \"行多选\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-expand\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/row-expand/main.vue\"),\r\n                name: \"行展开\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-style\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/row-style/main.vue\"),\r\n                name: \"行样式\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"footer-summary\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/footer-summary/main.vue\"),\r\n                name: \"footer 汇总\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"pagination\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/pagination/main.vue\"),\r\n                name: \"分页\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"loading\",\r\n                component: () => import(\"@/docs/zh/ve-table/loading/main.vue\"),\r\n                name: \"开启 loading\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"virtual-scroll\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/virtual-scroll/main.vue\"),\r\n                name: \"虚拟滚动\",\r\n                meta: { keepAlive: false },\r\n            },\r\n            {\r\n                path: \"event-custom\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/event-custom/main.vue\"),\r\n                name: \"事件自定义\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"data-empty\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/data-empty/main.vue\"),\r\n                name: \"空数据\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"instance-methods\",\r\n                component: () =>\r\n                    import(\"@/docs/zh/ve-table/instance-methods/main.vue\"),\r\n                name: \"实例方法\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"api\",\r\n                component: () => import(\"@/docs/zh/ve-table/api/main.vue\"),\r\n                name: \"API\",\r\n                meta: { keepAlive: true },\r\n            },\r\n        ],\r\n    },\r\n    /* {\r\n        path: \"other\",\r\n        name: \"辅助组件\",\r\n        component: emptyLayout,\r\n        children: [\r\n            {\r\n                path: \"checkbox\",\r\n                component: () => import(\"@/docs/zh/ve-checkbox/main.vue\"),\r\n                name: \"checkbox\"\r\n            },\r\n            {\r\n                path: \"radio\",\r\n                component: () => import(\"@/docs/zh/ve-radio/main.vue\"),\r\n                name: \"radio\"\r\n            },\r\n            {\r\n                path: \"select\",\r\n                component: () => import(\"@/docs/zh/ve-select/main.vue\"),\r\n                name: \"select\"\r\n            },\r\n            {\r\n                path: \"dropdown\",\r\n                component: () => import(\"@/docs/zh/ve-dropdown/main.vue\"),\r\n                name: \"dropdown\"\r\n            }\r\n        ]\r\n    } */\r\n];\r\n\r\nexport default config;\r\n","const emptyLayout = () => import(\"@/comp/layout/empty-layout.vue\");\r\n\r\nconst config = [\r\n    {\r\n        path: \"intro\",\r\n        component: () => import(\"@/docs/en/intro.md\"),\r\n        name: \"Intro\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"start\",\r\n        component: () => import(\"@/docs/en/start.md\"),\r\n        name: \"Quick Start\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"theme\",\r\n        component: () => import(\"@/docs/en/theme.md\"),\r\n        name: \"Theme Custom\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"locale\",\r\n        component: () => import(\"@/docs/en/locale.md\"),\r\n        name: \"Internationalization\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"qa\",\r\n        component: () => import(\"@/docs/en/QA.md\"),\r\n        name: \"Q&A\",\r\n        meta: { keepAlive: true },\r\n    },\r\n    {\r\n        path: \"base\",\r\n        name: \"Base Components\",\r\n        component: emptyLayout,\r\n        children: [\r\n            {\r\n                path: \"loading\",\r\n                component: () => import(\"@/docs/en/ve-loading/main.vue\"),\r\n                name: \"Loading\",\r\n            },\r\n            {\r\n                path: \"locale\",\r\n                component: () => import(\"@/docs/en/ve-locale/main.vue\"),\r\n                name: \"Locale\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"icon\",\r\n                component: () => import(\"@/docs/en/ve-icon/main.vue\"),\r\n                name: \"Icon\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"pagination\",\r\n                component: () => import(\"@/docs/en/ve-pagination/main.vue\"),\r\n                name: \"Pagination\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"contextmenu\",\r\n                component: () => import(\"@/docs/en/ve-contextmenu/main.vue\"),\r\n                name: \"Contextmenu\",\r\n                meta: { keepAlive: true },\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: \"table\",\r\n        name: \"Table Component\",\r\n        component: emptyLayout,\r\n        children: [\r\n            /* {\r\n                path: \"test\",\r\n                component: () => import(\"@/docs/en/ve-table/test/main.vue\"),\r\n                name: \"性能测试\",\r\n                meta: { keepAlive: true }\r\n            }, */\r\n            {\r\n                path: \"usage\",\r\n                component: () => import(\"@/docs/en/ve-table/usage/main.md\"),\r\n                name: \"Usage\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"table-width\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/table-width/main.vue\"),\r\n                name: \"Table Width\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"table-height\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/table-height/main.vue\"),\r\n                name: \"Table Height\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"table-border\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/table-border/main.vue\"),\r\n                name: \"Table Border\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-width\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/column-width/main.vue\"),\r\n                name: \"Column Width\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-resize\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/column-resize/main.vue\"),\r\n                name: \"Column Resize\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-fixed\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/column-fixed/main.vue\"),\r\n                name: \"Column Fixed\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"column-hidden\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/column-hidden/main.vue\"),\r\n                name: \"Column Hidden\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-fixed\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/header-fixed/main.vue\"),\r\n                name: \"Header Fixed\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-grouping\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/header-grouping/main.vue\"),\r\n                name: \"Header Grouping\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-hidden\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/header-hidden/main.vue\"),\r\n                name: \"Header Hidden\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-filter\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/header-filter/main.vue\"),\r\n                name: \"Filter\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-filter-custom\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/header-filter-custom/main.vue\"),\r\n                name: \"Filter Custom\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"header-sort\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/header-sort/main.vue\"),\r\n                name: \"Sort\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-align\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-align/main.vue\"),\r\n                name: \"Cell Align\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-style\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-style/main.vue\"),\r\n                name: \"Cell Style\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-custom\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-custom/main.vue\"),\r\n                name: \"Cell Custom\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-span\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-span/main.vue\"),\r\n                name: \"Cell Span\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"operation-column\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/operation-column/main.vue\"),\r\n                name: \"Operation Column\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-selection\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-selection/main.vue\"),\r\n                name: \"Cell Selection\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-autofill\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-autofill/main.vue\"),\r\n                name: \"Cell Autofill\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-edit\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-edit/main.vue\"),\r\n                name: \"Cell Edit\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"clipboard\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/clipboard/main.vue\"),\r\n                name: \"Clipboard\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"contextmenu\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/contextmenu/main.vue\"),\r\n                name: \"Contextmenu\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"cell-ellipsis\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/cell-ellipsis/main.vue\"),\r\n                name: \"Cell Ellipsis\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-index\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/row-index/main.vue\"),\r\n                name: \"Row Index\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-radio\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/row-radio/main.vue\"),\r\n                name: \"Row Radio\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-checkbox\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/row-checkbox/main.vue\"),\r\n                name: \"Row Checkbox\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-expand\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/row-expand/main.vue\"),\r\n                name: \"Row Expand\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"row-style\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/row-style/main.vue\"),\r\n                name: \"Row Style\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"footer-summary\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/footer-summary/main.vue\"),\r\n                name: \"Footer Summary\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"pagination\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/pagination/main.vue\"),\r\n                name: \"Pagination\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"loading\",\r\n                component: () => import(\"@/docs/en/ve-table/loading/main.vue\"),\r\n                name: \"Enable Loading\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"virtual-scroll\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/virtual-scroll/main.vue\"),\r\n                name: \"Virtual Scroll\",\r\n                meta: { keepAlive: false },\r\n            },\r\n            {\r\n                path: \"event-custom\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/event-custom/main.vue\"),\r\n                name: \"Event Custom\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"data-empty\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/data-empty/main.vue\"),\r\n                name: \"Data Empty\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"instance-methods\",\r\n                component: () =>\r\n                    import(\"@/docs/en/ve-table/instance-methods/main.vue\"),\r\n                name: \"Instance methods\",\r\n                meta: { keepAlive: true },\r\n            },\r\n            {\r\n                path: \"api\",\r\n                component: () => import(\"@/docs/en/ve-table/api/main.vue\"),\r\n                name: \"API\",\r\n                meta: { keepAlive: true },\r\n            },\r\n        ],\r\n    },\r\n    /*  {\r\n        path: \"other\",\r\n        name: \"辅助组件\",\r\n        component: emptyLayout,\r\n        children: [\r\n            {\r\n                path: \"checkbox\",\r\n                component: () => import(\"@/docs/en/ve-checkbox/main.vue\"),\r\n                name: \"checkbox\"\r\n            },\r\n            {\r\n                path: \"radio\",\r\n                component: () => import(\"@/docs/en/ve-radio/main.vue\"),\r\n                name: \"radio\"\r\n            },\r\n            {\r\n                path: \"select\",\r\n                component: () => import(\"@/docs/en/ve-select/main.vue\"),\r\n                name: \"select\"\r\n            },\r\n            {\r\n                path: \"dropdown\",\r\n                component: () => import(\"@/docs/en/ve-dropdown/main.vue\"),\r\n                name: \"dropdown\"\r\n            }\r\n        ]\r\n    } */\r\n];\r\n\r\nexport default config;\r\n","import zh from \"./zh.router.config\";\r\nimport en from \"./en.router.config\";\r\n\r\nexport default { zh, en };\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./anchor.vue?vue&type=style&index=0&id=72d05200&lang=less&scoped=true&\"","export default {\r\n    pagination: {\r\n        goto: \"Go to\",\r\n        page: \"\",\r\n        itemsPerPage: \" / page\",\r\n        total: (total) => `Total ${total}`,\r\n        prev5: \"Previous 5 Pages\",\r\n        next5: \"Next 5 Pages\",\r\n    },\r\n    table: {\r\n        // filter\r\n        confirmFilter: \"Confirm\",\r\n        resetFilter: \"Reset\",\r\n        // contextmenu event\r\n        cut: \"Cut\",\r\n        copy: \"Copy\",\r\n        insertRowAbove: \"Insert row above\",\r\n        insertRowBelow: \"Insert row below\",\r\n        removeRow: \"Remove $1 row\",\r\n        emptyRow: \"Empty $1 row\",\r\n        //removeColumn: \"Remove column\",\r\n        emptyColumn: \"Empty $1 column\",\r\n        //hideColumn: \"Hide column\",\r\n        emptyCell: \"Empty cell\",\r\n        leftFixedColumnTo: \"Left fixed column to\",\r\n        cancelLeftFixedColumnTo: \"Cancel left fixed column to\",\r\n        rightFixedColumnTo: \"Right fixed column to\",\r\n        cancelRightFixedColumnTo: \"Cancel right fixed column to\",\r\n    },\r\n};\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo-block.vue?vue&type=style&index=0&lang=less&\"","export function stripScript(content) {\r\n    const result = content.match(/<(script)>([\\s\\S]+)<\\/\\1>/);\r\n    return result && result[2] ? result[2].trim() : \"\";\r\n}\r\n\r\nexport function stripStyle(content) {\r\n    const result = content.match(/<(style)\\s*>([\\s\\S]+)<\\/\\1>/);\r\n    return result && result[2] ? result[2].trim() : \"\";\r\n}\r\n\r\nexport function stripTemplate(content) {\r\n    content = content.trim();\r\n    if (!content) {\r\n        return content;\r\n    }\r\n    return content.replace(/<(script|style)[\\s\\S]+<\\/\\1>/g, \"\").trim();\r\n}\r\n\r\n/*\r\n * @isFunction\r\n * @desc is function\r\n * @param {any} val\r\n */\r\nexport function isFunction(val) {\r\n    return typeof val === \"function\";\r\n}\r\n\r\n// 根据锚点id 定位\r\nexport function goTobyAnchorId(context, id) {\r\n    context.$router\r\n        .replace({\r\n            path: context.$route.path,\r\n            query: { anchor: id },\r\n        })\r\n        .finally(() => {\r\n            context.$nextTick(() => {\r\n                let anchor = document.querySelector(`#${id}`);\r\n\r\n                if (anchor) {\r\n                    // 65 为 头部高度\r\n                    window.scroll(0, anchor.offsetTop - 65);\r\n                }\r\n            });\r\n        })\r\n        .catch(() => {});\r\n}\r\n"],"sourceRoot":""}