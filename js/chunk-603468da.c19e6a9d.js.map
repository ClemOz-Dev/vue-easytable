{"version":3,"sources":["webpack:///./src/demo/normal-data-grid.vue?bb70","webpack:///./src/demo/index.vue?5573","webpack:///./src/demo/index.vue?0ab9","webpack:///./src/demo/normal-data-grid.vue?3ff4","webpack:///src/demo/normal-data-grid.vue","webpack:///./src/demo/normal-data-grid.vue?9d32","webpack:///./src/demo/normal-data-grid.vue","webpack:///./src/demo/spreadsheet.vue?cefe","webpack:///src/demo/spreadsheet.vue","webpack:///./src/demo/spreadsheet.vue?ee49","webpack:///./src/demo/spreadsheet.vue","webpack:///src/demo/index.vue","webpack:///./src/demo/index.vue?6c88","webpack:///./src/demo/index.vue","webpack:///./src/demo/spreadsheet.vue?7778"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","currentLocal","demo1","selection","demo2","staticRenderFns","attrs","staticStyle","on","dataRowChange","model","value","callback","$$v","dataRow","expression","_l","item","key","label","switchActiveColor","switchInactiveColor","enableColumnFixed","enableExpand","switchLoading","enableLoading","enableRowRadio","enableRowCheckbox","ref","tableScrollWdith","sortOption","virtualScrollOption","columns","tableData","cellStyleOption","expandOption","radioOption","checkboxOption","rowStyleOption","name","components","mixins","data","editOption","cellValueChange","console","sourceData","startRowIndex","filterConditions","bodyCellClass","enable","scrolling","stripe","sortChange","selectedRowChange","selectedAllChange","row","computed","scrollWidth","field","title","width","fixed","type","renderBodyCell","children","align","sortBy","edit","cellData","h","column","rowIndex","colorClass","color","skill","filter","filterList","selected","isMultiple","filterConfirm","map","filterReset","state","methods","visibleStartIndex","visibleEndIndex","visibleAboveCount","visibleBelowCount","renderRowIndex","searchByNameField","values","top","slice","params","resetTableData","setTimeout","initSourceData","rowKey","sex","profession","proficiency","skills","address","status","created","mounted","target","destroyed","component","cellAutofillOption","contextmenuBodyOption","directionX","directionY","beforeAutofill","direction","sourceSelectionRangeIndexes","targetSelectionRangeIndexes","sourceSelectionData","targetSelectionData","afterAutofill","beforeCellValueChange","afterCellValueChange","contextmenus","operationColumn","COLUMN_KEYS","initTableData","i","dataItem","NormalDataGrid","Spreadsheet"],"mappings":"kKAAA,W,kCCAA,W,gECAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACN,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAaC,MAAMC,WAAW,SAASP,EAAG,kBAAkBA,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACN,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAaG,MAAMD,WAAW,SAASP,EAAG,gBAAgB,MACzdS,EAAkB,G,wBCDlB,EAAS,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,SAAS,CAACU,MAAM,CAAC,OAAS,KAAK,CAACV,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,IAAI,CAACd,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAa,aAAa,KAAKL,EAAG,YAAY,CAACW,YAAY,CAAC,MAAQ,OAAOD,MAAM,CAAC,KAAO,SAASE,GAAG,CAAC,OAAShB,EAAIiB,eAAeC,MAAM,CAACC,MAAOnB,EAAW,QAAEoB,SAAS,SAAUC,GAAMrB,EAAIsB,QAAQD,GAAKE,WAAW,YAAYvB,EAAIwB,GAAIxB,EAAIS,aAAa,mBAAmB,SAASgB,GAAM,OAAOrB,EAAG,YAAY,CAACsB,IAAID,EAAKN,MAAML,MAAM,CAAC,MAAQW,EAAKE,MAAM,MAAQF,EAAKN,YAAW,IAAI,GAAGf,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,IAAI,CAACd,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAa,gBAAgB,KAAKL,EAAG,YAAY,CAACU,MAAM,CAAC,eAAed,EAAI4B,kBAAkB,iBAAiB5B,EAAI6B,qBAAqBX,MAAM,CAACC,MAAOnB,EAAqB,kBAAEoB,SAAS,SAAUC,GAAMrB,EAAI8B,kBAAkBT,GAAKE,WAAW,wBAAwB,GAAGnB,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,IAAI,CAACd,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAa,WAAW,KAAKL,EAAG,YAAY,CAACU,MAAM,CAAC,eAAed,EAAI4B,kBAAkB,iBAAiB5B,EAAI6B,qBAAqBX,MAAM,CAACC,MAAOnB,EAAgB,aAAEoB,SAAS,SAAUC,GAAMrB,EAAI+B,aAAaV,GAAKE,WAAW,mBAAmB,GAAGnB,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,IAAI,CAACd,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAa,YAAY,KAAKL,EAAG,YAAY,CAACU,MAAM,CAAC,eAAed,EAAI4B,kBAAkB,iBAAiB5B,EAAI6B,qBAAqBb,GAAG,CAAC,OAAShB,EAAIgC,eAAed,MAAM,CAACC,MAAOnB,EAAiB,cAAEoB,SAAS,SAAUC,GAAMrB,EAAIiC,cAAcZ,GAAKE,WAAW,oBAAoB,GAAGnB,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,IAAI,CAACd,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAa,UAAU,KAAKL,EAAG,YAAY,CAACU,MAAM,CAAC,eAAed,EAAI4B,kBAAkB,iBAAiB5B,EAAI6B,qBAAqBX,MAAM,CAACC,MAAOnB,EAAkB,eAAEoB,SAAS,SAAUC,GAAMrB,EAAIkC,eAAeb,GAAKE,WAAW,qBAAqB,GAAGnB,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,IAAI,CAACd,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,aAAa,aAAa,KAAKL,EAAG,YAAY,CAACU,MAAM,CAAC,eAAed,EAAI4B,kBAAkB,iBAAiB5B,EAAI6B,qBAAqBX,MAAM,CAACC,MAAOnB,EAAqB,kBAAEoB,SAAS,SAAUC,GAAMrB,EAAImC,kBAAkBd,GAAKE,WAAW,wBAAwB,GAAGnB,EAAG,SAAS,CAACU,MAAM,CAAC,KAAO,MAAM,IAAI,KAAKV,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,WAAW,CAACgC,IAAI,WAAWtB,MAAM,CAAC,GAAK,yBAAyB,eAAe,GAAG,WAAW,GAAG,aAAa,IAAI,eAAed,EAAIqC,iBAAiB,cAAcrC,EAAIsC,WAAW,wBAAwBtC,EAAIuC,oBAAoB,QAAUvC,EAAIwC,QAAQ,aAAaxC,EAAIyC,UAAU,qBAAqB,SAAS,oBAAoBzC,EAAI0C,gBAAgB,gBAAgB1C,EAAI2C,aAAa,eAAe3C,EAAI4C,YAAY,kBAAkB5C,EAAI6C,eAAe,mBAAmB7C,EAAI8C,mBAAmB,MAC1vF,EAAkB,G,qBCyGP,GACfC,YACAC,cAGAC,gBACAC,KANA,WAMA,+BACA,OAEAC,YAEAC,4BAAA,YAAI,EAAJ,SACAC,uCACAA,4CAGA/B,YACAM,4BACAC,sCAEAC,qBACAG,iBACAF,gBACAG,kBACAC,qBAGAmB,cACAb,aACAc,gBAEAC,oBACAd,iBACAe,0BAAA,UAAI,EAAJ,oBACA,2BACA,sCAIAlB,qBAEAmB,UACAC,0BAEAb,gBACAc,WAEAtB,YACAuB,uBACA,kBAGAjB,aACAkB,8BAAA,QAIAjB,gBAEAiB,8BAAA,sCAIAC,8BAAA,iCAIApB,cACA5C,qBAAA,gCACA,2CAEA,IAFA,gBAGA,qBAHA,CAGAiE,SAHA,WAIAA,aAJA,sBAIA,IACAA,UALA,UAYAC,UAEAxD,aAFA,WAGA,6DAIA4B,iBAPA,WAQA,QAEA,eAUA,OARA,UACAG,uBACA,4BACA0B,eAKA,GAIA1B,QAxBA,WAwBA,WACA,GADA,oBACA,IAyPA,OAvPA,qBACAA,QACA2B,cACAzC,YACA0C,SACAC,UACAC,uCACAC,eAIA,wBACA/B,QACA2B,iBACAzC,eACA0C,SACAC,UACAC,uCACAC,kBAIA,mBACA/B,QACA2B,eACAzC,aACA0C,SACAC,UACAC,uCACAC,gBAIA/B,QACA2B,iBACAzC,eACA0C,UACAC,UACAC,uCACAE,qCAGAhC,YACA,CACA4B,mBACAE,uCACAD,UACAI,UACA,CACAN,aACAzC,WACA0C,aACAC,UACAK,cAEA,CACAP,YACAzC,UACA0C,YACAC,UACAK,eACAC,UACAC,QACAJ,6BAAA,YAAI,EAAJ,SACA,GADA,WACA,YAEA,EACAK,MACA,YACA,cAEA,oBAEA,6BAFA,MAGA,6BAOA,CACAT,4BACAM,eACAL,UACAI,UACA,CACAL,mBACAD,mBACAzC,iBACA2C,UACAK,cAEA,CACAN,kBACAK,UACA,CACAN,oBACAzC,kBACA0C,oBACAC,UACAM,UACAC,QACAJ,0BAEAM,GACA,IAFAd,EAEA,EAFAA,IAAAe,EAEA,EAFAA,OAGA,GADA,EAFAC,SAGA,YAEA,EACAH,KACA,YACAA,KACA,cACA,WAEA,sBACA,8BADA,iBAIA,oBACAI,EALA,MAQA,SACAJ,EACA,MAVA,CAaAA,EAbA,UAmBA,CACAV,eACAzC,aACA0C,eACAC,UACAK,aACAE,QACAJ,0BAEAM,GACA,IAFAd,EAEA,EAFAA,IAAAe,EAEA,EAFAA,OAGA,GADA,EAFAC,SAGA,YAEA,GACA,CACAjC,kBACAmC,iBAEA,CACAnC,cACAmC,iBAEA,CAAAnC,YAAAmC,kBAIA,eAEA,0BACA,uBAEA,aAFA,MAIA,oBACAC,SALA,CAQAA,kBAUA,CACAhB,gBACAzC,cACA0C,gBACAC,UACAK,cAEA,CACAP,eACAzC,aACA0C,eACAC,UACAC,wCACAI,aAEAU,QACAC,YACA,CAAAlE,QAAAQ,gBAAA2D,aACA,CAAAnE,QAAAQ,gBAAA2D,aACA,CAAAnE,QAAAQ,kBAAA2D,cAEAC,cAEAC,0BACA,QACAJ,QAAA,iCACAK,KAAA,8BACA,wBAGAC,wBACA,0BAKAlB,6BAAA,YAAI,EAAJ,SACA,GADA,WACA,YAEA,GACA,CACAzB,eACAmC,iBAEA,CACAnC,eACAmC,iBAEA,CAAAnC,iBAAAmC,kBAGA,OAEA,uBAEA,cAFA,MAGA,kBAHA,CAKAS,aAOA,IAGAC,SAEAjC,UAFA,YAQA,IALAJ,EAKA,EALAA,cAKA,EAJAsC,kBAIA,EAHAC,gBAGA,EAFAC,kBAEA,EADAC,kBAEA,sBAGAC,eAZA,YAYA,mBAAI,EAAJ,iCACA,2CAIAC,kBAjBA,SAiBAC,GACA,wBACA,cAEA,iCAAAC,SAIAhB,OAzBA,WA0BA,4BACA,+BACAiB,MAAA,GACAjB,QACA,0DAKAvB,WAnCA,SAmCAyC,GACA,YACA,gBAEA,WACA,mCACA,SACA,gBACA,iBACA,iBACA,sBAEA,SACA,gBACA,iBACA,iBACA,qBAKA,sBAIA,iCAAAF,SAIApE,cAhEA,WAiEA,mBACA,4BAEA,8BAKAuE,eAzEA,WA0EA,wCACA,eAIAtF,cA/EA,WA+EA,WACAuF,uBACA,mBAEA,8BAAAJ,YAIAK,eAvFA,WAoGA,IAZA,OACA,kBACA,0BACA,sBACA,SACA,mBACA,mBAGA,KAEA,eACA,YACAvD,QACAwD,SACA3D,uBACA4D,6BACAC,sCACAC,qCACAC,+BACAC,8BACAC,iCAIA,kBACA,wBAGAC,QA3dA,WA4dA,uBAEAC,QA9dA,WA+dA,sCACAC,yDAGApE,eAGAqE,UAteA,cC1G0V,I,wBCQtVC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QCnBX,EAAS,WAAa,IAAIrH,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,WAAW,CAACW,YAAY,CAAC,aAAa,cAAcD,MAAM,CAAC,eAAe,GAAG,eAAe,IAAK,aAAa,IAAI,WAAW,GAAG,QAAUd,EAAIwC,QAAQ,aAAaxC,EAAIyC,UAAU,qBAAqB,SAAS,wBAAwBzC,EAAIuC,oBAAoB,uBAAuBvC,EAAIsH,mBAAmB,cAActH,EAAImD,WAAW,0BAA0BnD,EAAIuH,0BAA0B,IACvgB,EAAkB,GCmBtB,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEe,GACfrE,KADA,WAEA,OAEAK,gBACAhB,qBAEAmB,UACAC,0BAEA2D,oBACAE,cACAC,cACAC,2BAMA,EALAC,UAKA,EAJAC,4BAIA,EAHAC,4BAGA,EAFAC,oBAEA,EADAC,qBAEAC,0BAMA,EALAL,UAKA,EAJAC,4BAIA,EAHAC,4BAGA,EAFAC,oBAEA,EADAC,sBAIA5E,YACA8E,kCAAA,8BACAC,iCAAA,+BAEAX,uBAEAnG,qBAAA,oBAGA+G,cACA,CACA5D,yBAEA,CACAA,yBAEA,CACAA,kBAEA,CACAA,mBAEA,CACAA,kBAEA,CACAA,sBAIA9B,eAGAwB,UACAzB,QADA,WAEA,OACA,CACA2B,cACAzC,YAEA0G,mBACAhE,UACAC,SACAC,aACAE,qCAeA,OAZAhC,WACA6F,mBACA,OACAjE,QACAD,QACAzC,MACA2C,SACAO,aAKA,IAGAgB,SAEAK,eAFA,YAEA,mBAAI,EAAJ,iCACA,2CAEAtC,UALA,YAWA,IALAJ,EAKA,EALAA,cAKA,EAJAsC,kBAIA,EAHAC,gBAGA,EAFAC,kBAEA,EADAC,kBAEA,sBAEAsC,cAdA,WAgBA,IADA,SADA,WAEAC,GACA,OACA7B,UAGA2B,uBACAG,WAGA,eACAA,aACAA,aACAA,aACAA,eACAA,cACAA,eACAA,cAGA/F,WAnBA,mBAsBA,mBAGAwE,QApIA,WAqIA,uBCrLqV,ICQjV,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,OAIa,I,QCKA,GACflE,YACAC,YACAyF,iBACAC,eAEAzF,gBACAC,KAPA,WAQA,UAEAe,UAEAxD,aAFA,WAGA,sDCrC+U,ICQ3U,G,UAAY,eACd,EACAV,EACAc,GACA,EACA,KACA,KACA,OAIa,e,2CCnBf","file":"js/chunk-603468da.c19e6a9d.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./normal-data-grid.vue?vue&type=style&index=0&id=0d75eb73&prod&lang=less&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=07ac5491&prod&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"site-demo-container\"},[_c('div',{staticClass:\"demo-title\"},[_c('div',{staticClass:\"demo-title-text\"},[_vm._v(\" \"+_vm._s(_vm.currentLocal.demo1.selection)+\" \")])]),_c('NormalDataGrid'),_c('div',{staticClass:\"demo-title last\"},[_c('div',{staticClass:\"demo-title-text\"},[_vm._v(\" \"+_vm._s(_vm.currentLocal.demo2.selection)+\" \")])]),_c('Spreadsheet')],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"normal-data-grid\"},[_c('div',{staticClass:\"operation\"},[_c('div',{staticClass:\"operation-item\"},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_vm._v(\" \"+_vm._s(_vm.currentLocal[\"dataRows\"])+\" \"),_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"size\":\"small\"},on:{\"change\":_vm.dataRowChange},model:{value:(_vm.dataRow),callback:function ($$v) {_vm.dataRow=$$v},expression:\"dataRow\"}},_vm._l((_vm.currentLocal['dataRowsOption']),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-col',{attrs:{\"span\":3}},[_vm._v(\" \"+_vm._s(_vm.currentLocal[\"columnFixed\"])+\" \"),_c('el-switch',{attrs:{\"active-color\":_vm.switchActiveColor,\"inactive-color\":_vm.switchInactiveColor},model:{value:(_vm.enableColumnFixed),callback:function ($$v) {_vm.enableColumnFixed=$$v},expression:\"enableColumnFixed\"}})],1),_c('el-col',{attrs:{\"span\":3}},[_vm._v(\" \"+_vm._s(_vm.currentLocal[\"expand\"])+\" \"),_c('el-switch',{attrs:{\"active-color\":_vm.switchActiveColor,\"inactive-color\":_vm.switchInactiveColor},model:{value:(_vm.enableExpand),callback:function ($$v) {_vm.enableExpand=$$v},expression:\"enableExpand\"}})],1),_c('el-col',{attrs:{\"span\":3}},[_vm._v(\" \"+_vm._s(_vm.currentLocal[\"loading\"])+\" \"),_c('el-switch',{attrs:{\"active-color\":_vm.switchActiveColor,\"inactive-color\":_vm.switchInactiveColor},on:{\"change\":_vm.switchLoading},model:{value:(_vm.enableLoading),callback:function ($$v) {_vm.enableLoading=$$v},expression:\"enableLoading\"}})],1),_c('el-col',{attrs:{\"span\":3}},[_vm._v(\" \"+_vm._s(_vm.currentLocal[\"radio\"])+\" \"),_c('el-switch',{attrs:{\"active-color\":_vm.switchActiveColor,\"inactive-color\":_vm.switchInactiveColor},model:{value:(_vm.enableRowRadio),callback:function ($$v) {_vm.enableRowRadio=$$v},expression:\"enableRowRadio\"}})],1),_c('el-col',{attrs:{\"span\":3}},[_vm._v(\" \"+_vm._s(_vm.currentLocal[\"checkbox\"])+\" \"),_c('el-switch',{attrs:{\"active-color\":_vm.switchActiveColor,\"inactive-color\":_vm.switchInactiveColor},model:{value:(_vm.enableRowCheckbox),callback:function ($$v) {_vm.enableRowCheckbox=$$v},expression:\"enableRowCheckbox\"}})],1),_c('el-col',{attrs:{\"span\":2}})],1)],1)]),_c('div',{staticClass:\"table-list\"},[_c('ve-table',{ref:\"tableRef\",attrs:{\"id\":\"demo-loading-container\",\"fixed-header\":\"\",\"border-y\":\"\",\"max-height\":500,\"scroll-width\":_vm.tableScrollWdith,\"sort-option\":_vm.sortOption,\"virtual-scroll-option\":_vm.virtualScrollOption,\"columns\":_vm.columns,\"table-data\":_vm.tableData,\"row-key-field-name\":\"rowKey\",\"cell-style-option\":_vm.cellStyleOption,\"expand-option\":_vm.expandOption,\"radio-option\":_vm.radioOption,\"checkbox-option\":_vm.checkboxOption,\"row-style-option\":_vm.rowStyleOption}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"normal-data-grid\">\n        <div class=\"operation\">\n            <div class=\"operation-item\">\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"4\">\n                        {{ currentLocal[\"dataRows\"] }}\n                        <el-select\n                            v-model=\"dataRow\"\n                            style=\"width: 60%\"\n                            size=\"small\"\n                            @change=\"dataRowChange\"\n                        >\n                            <el-option\n                                v-for=\"item in currentLocal['dataRowsOption']\"\n                                :key=\"item.value\"\n                                :label=\"item.label\"\n                                :value=\"item.value\"\n                            ></el-option>\n                        </el-select>\n                    </el-col>\n                    <el-col :span=\"3\">\n                        {{ currentLocal[\"columnFixed\"] }}\n                        <el-switch\n                            v-model=\"enableColumnFixed\"\n                            :active-color=\"switchActiveColor\"\n                            :inactive-color=\"switchInactiveColor\"\n                        ></el-switch>\n                    </el-col>\n                    <el-col :span=\"3\">\n                        {{ currentLocal[\"expand\"] }}\n                        <el-switch\n                            v-model=\"enableExpand\"\n                            :active-color=\"switchActiveColor\"\n                            :inactive-color=\"switchInactiveColor\"\n                        ></el-switch>\n                    </el-col>\n                    <el-col :span=\"3\">\n                        {{ currentLocal[\"loading\"] }}\n                        <el-switch\n                            v-model=\"enableLoading\"\n                            :active-color=\"switchActiveColor\"\n                            :inactive-color=\"switchInactiveColor\"\n                            @change=\"switchLoading\"\n                        ></el-switch>\n                    </el-col>\n                    <el-col :span=\"3\">\n                        {{ currentLocal[\"radio\"] }}\n                        <el-switch\n                            v-model=\"enableRowRadio\"\n                            :active-color=\"switchActiveColor\"\n                            :inactive-color=\"switchInactiveColor\"\n                        ></el-switch>\n                    </el-col>\n                    <el-col :span=\"3\">\n                        {{ currentLocal[\"checkbox\"] }}\n                        <el-switch\n                            v-model=\"enableRowCheckbox\"\n                            :active-color=\"switchActiveColor\"\n                            :inactive-color=\"switchInactiveColor\"\n                        ></el-switch>\n                    </el-col>\n                    <el-col :span=\"2\"></el-col>\n                </el-row>\n            </div>\n            <!--   <div class=\"operation-item\">\n                    <el-row :gutter=\"20\">\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                        <el-col :span=\"3\"></el-col>\n                    </el-row>\n                </div> -->\n        </div>\n        <div class=\"table-list\">\n            <ve-table\n                id=\"demo-loading-container\"\n                ref=\"tableRef\"\n                fixed-header\n                border-y\n                :max-height=\"500\"\n                :scroll-width=\"tableScrollWdith\"\n                :sort-option=\"sortOption\"\n                :virtual-scroll-option=\"virtualScrollOption\"\n                :columns=\"columns\"\n                :table-data=\"tableData\"\n                row-key-field-name=\"rowKey\"\n                :cell-style-option=\"cellStyleOption\"\n                :expand-option=\"expandOption\"\n                :radio-option=\"radioOption\"\n                :checkbox-option=\"checkboxOption\"\n                :row-style-option=\"rowStyleOption\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\n/* import Footer from \"@/comp/layout/footer.vue\"; */\nimport Mock from \"mockjs\";\nimport locale from \"../comp/locale\";\nimport I18nMixins from \"../comp/mixins/i18n-mixins\";\nexport default {\n    name: \"demo\",\n    components: {\n        /* Footer */\n    },\n    mixins: [I18nMixins],\n    data() {\n        return {\n            // edit option 可控单元格编辑\n            editOption: {\n                // cell value change\n                cellValueChange: ({ row, column }) => {\n                    console.log(\"cellValueChange row::\", row);\n                    console.log(\"cellValueChange column::\", column);\n                },\n            },\n            dataRow: 5000,\n            switchActiveColor: \"#1890ff\",\n            switchInactiveColor: \"rgba(0,0,0,.25)\",\n\n            enableColumnFixed: true,\n            enableLoading: false,\n            enableExpand: true,\n            enableRowRadio: false,\n            enableRowCheckbox: false,\n\n            // ---------------table options---------------\n            sourceData: [],\n            tableData: [],\n            startRowIndex: 0,\n            // filter condition\n            filterConditions: [],\n            cellStyleOption: {\n                bodyCellClass: ({ row, column, rowIndex }) => {\n                    if (column.field === \"proficiency\") {\n                        return \"table-body-cell-proficiency\";\n                    }\n                },\n            },\n            virtualScrollOption: {\n                // 是否开启\n                enable: true,\n                scrolling: this.scrolling,\n            },\n            rowStyleOption: {\n                stripe: true,\n            },\n            sortOption: {\n                sortChange: (params) => {\n                    this.sortChange(params);\n                },\n            },\n            radioOption: {\n                selectedRowChange: ({ row }) => {\n                    //console.log(row);\n                },\n            },\n            checkboxOption: {\n                // row select change event\n                selectedRowChange: ({ row, isSelected, selectedRowKeys }) => {\n                    //console.log(row, isSelected, selectedRowKeys);\n                },\n                // selected all change event\n                selectedAllChange: ({ isSelected, selectedRowKeys }) => {\n                    //console.log(isSelected, selectedRowKeys);\n                },\n            },\n            expandOption: {\n                render: ({ row, column, rowIndex }, h) => {\n                    return (\n                        <p>\n                            Hello everyone, My name is{\" \"}\n                            <span style=\"font-weight:bold;\">{row.name}</span>,\n                            I'm a {row.profession}. And I'm living in{\" \"}\n                            {row.address}.\n                        </p>\n                    );\n                },\n            },\n        };\n    },\n    computed: {\n        // current local\n        currentLocal() {\n            return locale[this.currentDocLang][\"completeDemo\"][\"demo1\"];\n        },\n\n        // tableScrollWidth\n        tableScrollWdith() {\n            let scrollWidth = 0;\n\n            const { columns } = this;\n\n            if (columns.length) {\n                columns.forEach((item) => {\n                    if (typeof item.width === \"number\") {\n                        scrollWidth += item.width;\n                    }\n                });\n            }\n\n            return scrollWidth;\n        },\n\n        // columns\n        columns() {\n            let columns = [];\n\n            if (this.enableRowRadio) {\n                columns.push({\n                    field: \"radio\",\n                    key: \"radio\",\n                    title: \"\",\n                    width: 100,\n                    fixed: this.enableColumnFixed ? \"left\" : \"\",\n                    type: \"radio\",\n                });\n            }\n\n            if (this.enableRowCheckbox) {\n                columns.push({\n                    field: \"checkbox\",\n                    key: \"checkbox\",\n                    title: \"\",\n                    width: 100,\n                    fixed: this.enableColumnFixed ? \"left\" : \"\",\n                    type: \"checkbox\",\n                });\n            }\n\n            if (this.enableExpand) {\n                columns.push({\n                    field: \"expand\",\n                    key: \"expand\",\n                    title: \"\",\n                    width: 100,\n                    fixed: this.enableColumnFixed ? \"left\" : \"\",\n                    type: \"expand\",\n                });\n            }\n\n            columns.push({\n                field: \"rowIndex\",\n                key: \"rowIndex\",\n                title: \"#\",\n                width: 100,\n                fixed: this.enableColumnFixed ? \"left\" : \"\",\n                renderBodyCell: this.renderRowIndex,\n            });\n\n            columns = columns.concat([\n                {\n                    title: \"Basic Info\",\n                    fixed: this.enableColumnFixed ? \"left\" : \"\",\n                    width: 300,\n                    children: [\n                        {\n                            field: \"name\",\n                            key: \"name\",\n                            title: \"Name\",\n                            width: 200,\n                            align: \"left\",\n                        },\n                        {\n                            field: \"sex\",\n                            key: \"sex\",\n                            title: \"Sex\",\n                            width: 100,\n                            align: \"center\",\n                            sortBy: \"\",\n                            edit: true,\n                            renderBodyCell: ({ row, column, rowIndex }, h) => {\n                                const cellData = row[column.field];\n\n                                let iconName =\n                                    cellData === 1\n                                        ? \"icon-male\"\n                                        : \"icon-female\";\n\n                                return (\n                                    <i\n                                        style=\"font-size:20px;color:#666;\"\n                                        class={\"demo-sex iconfont \" + iconName}\n                                    />\n                                );\n                            },\n                        },\n                    ],\n                },\n                {\n                    title: \"Personal Experience\",\n                    align: \"center\",\n                    width: 800,\n                    children: [\n                        {\n                            title: \"Profession\",\n                            field: \"profession\",\n                            key: \"profession\",\n                            width: 200,\n                            align: \"left\",\n                        },\n                        {\n                            title: \"IT Skills\",\n                            children: [\n                                {\n                                    field: \"proficiency\",\n                                    key: \"proficiency\",\n                                    title: \"Proficiency\",\n                                    width: 300,\n                                    sortBy: \"\",\n                                    edit: true,\n                                    renderBodyCell: (\n                                        { row, column, rowIndex },\n                                        h,\n                                    ) => {\n                                        const cellData = row[column.field];\n\n                                        const colorClass =\n                                            cellData > 60\n                                                ? \"demo-blue\"\n                                                : cellData > 30\n                                                ? \"demo-orange\"\n                                                : \"demo-red\";\n\n                                        return (\n                                            <div class=\"proficiency-span-container\">\n                                                <span\n                                                    class={\n                                                        \"proficiency-span \" +\n                                                        colorClass\n                                                    }\n                                                    style={\n                                                        \"width:\" +\n                                                        cellData +\n                                                        \"%;\"\n                                                    }\n                                                >\n                                                    {cellData}%\n                                                </span>\n                                            </div>\n                                        );\n                                    },\n                                },\n                                {\n                                    field: \"skills\",\n                                    key: \"skills\",\n                                    title: \"Skills\",\n                                    width: 300,\n                                    align: \"left\",\n                                    edit: true,\n                                    renderBodyCell: (\n                                        { row, column, rowIndex },\n                                        h,\n                                    ) => {\n                                        const cellData = row[column.field];\n\n                                        const LANGS = [\n                                            {\n                                                name: \"Javascript\",\n                                                color: \"#48a4ef\",\n                                            },\n                                            {\n                                                name: \"Python\",\n                                                color: \"#d8899c\",\n                                            },\n                                            { name: \"java\", color: \"#a88cd9\" },\n                                            /* { name: \"C++\", color: \"#88d317\" } */\n                                        ];\n\n                                        const skills = LANGS.slice(0, cellData);\n\n                                        return skills.map((skill) => {\n                                            return (\n                                                <span\n                                                    class=\"skill-span\"\n                                                    style={\n                                                        \"background-color:\" +\n                                                        skill.color\n                                                    }\n                                                >\n                                                    {skill.name}\n                                                </span>\n                                            );\n                                        });\n                                    },\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    field: \"address\",\n                    key: \"address\",\n                    title: \"Address\",\n                    width: 350,\n                    align: \"left\",\n                },\n                {\n                    field: \"status\",\n                    key: \"status\",\n                    title: \"Status\",\n                    width: 100,\n                    fixed: this.enableColumnFixed ? \"right\" : \"\",\n                    align: \"left\",\n                    // filter\n                    filter: {\n                        filterList: [\n                            { value: 0, label: \"Working\", selected: false },\n                            { value: 1, label: \"Metting\", selected: false },\n                            { value: 2, label: \"Traveling\", selected: false },\n                        ],\n                        isMultiple: true,\n                        // filter confirm hook\n                        filterConfirm: (filterList) => {\n                            const values = filterList\n                                .filter((x) => x.selected)\n                                .map((x) => x.value);\n                            this.searchByNameField(values);\n                        },\n                        // filter reset hook\n                        filterReset: (filterList) => {\n                            this.searchByNameField([]);\n                        },\n                        // max height\n                        //maxHeight: 120\n                    },\n                    renderBodyCell: ({ row, column, rowIndex }, h) => {\n                        const cellData = row[column.field];\n\n                        const STATUS = [\n                            {\n                                name: \"Working\",\n                                color: \"#48a4ef\",\n                            },\n                            {\n                                name: \"Meeting\",\n                                color: \"#d8899c\",\n                            },\n                            { name: \"Traveling\", color: \"#a88cd9\" },\n                        ];\n\n                        const state = STATUS[cellData];\n\n                        return (\n                            <span\n                                class=\"status-span\"\n                                style={\"color:\" + state.color}\n                            >\n                                {state.name}\n                            </span>\n                        );\n                    },\n                },\n            ]);\n\n            return columns;\n        },\n    },\n    methods: {\n        // virtual scrolling\n        scrolling({\n            startRowIndex,\n            visibleStartIndex,\n            visibleEndIndex,\n            visibleAboveCount,\n            visibleBelowCount,\n        }) {\n            this.startRowIndex = startRowIndex;\n        },\n\n        renderRowIndex({ row, column, rowIndex }) {\n            return <span>{rowIndex + this.startRowIndex + 1}</span>;\n        },\n\n        // search by name field\n        searchByNameField(values) {\n            this.filterConditions = values;\n            this.filter();\n            // scroll to top\n            this.$refs[\"tableRef\"].scrollTo({ top: 0 });\n        },\n\n        //\n        filter() {\n            const values = this.filterConditions;\n            this.tableData = this.sourceData\n                .slice(0)\n                .filter(\n                    (x) => values.length === 0 || values.includes(x.status),\n                );\n        },\n\n        // sort change\n        sortChange(params) {\n            const sortFileld1 = \"sex\";\n            const sortFileld2 = \"proficiency\";\n\n            if (params[sortFileld1] || params[sortFileld2]) {\n                this.tableData.sort((a, b) => {\n                    if (params[sortFileld1]) {\n                        if (params[sortFileld1] === \"asc\") {\n                            return a[sortFileld1] - b[sortFileld1];\n                        } else if (params[sortFileld1] === \"desc\") {\n                            return b[sortFileld1] - a[sortFileld1];\n                        }\n                    } else if (params[sortFileld2]) {\n                        if (params[sortFileld2] === \"asc\") {\n                            return a[sortFileld2] - b[sortFileld2];\n                        } else if (params[sortFileld2] === \"desc\") {\n                            return b[sortFileld2] - a[sortFileld2];\n                        }\n                    }\n                });\n            } else {\n                this.resetTableData();\n            }\n\n            // scroll to top\n            this.$refs[\"tableRef\"].scrollTo({ top: 0 });\n        },\n\n        // switch loading\n        switchLoading() {\n            if (this.enableLoading) {\n                this.loadingInstance.show();\n            } else {\n                this.loadingInstance.close();\n            }\n        },\n\n        // reset table data\n        resetTableData() {\n            this.tableData = this.sourceData.slice(0);\n            this.filter();\n        },\n\n        // data row change\n        dataRowChange() {\n            setTimeout(() => {\n                this.initSourceData();\n                // scroll to top\n                this.$refs[\"tableRef\"].scrollTo({ top: 0 });\n            });\n        },\n\n        initSourceData() {\n            const PROFESSIONS = [\n                \"Project Manager\",\n                \"User Interface Designer\",\n                \"Front-End Developer\",\n                \"Testor\",\n                \"Product Designer\",\n                \"System Designer\",\n            ];\n\n            let data = [];\n\n            const dataRow = this.dataRow;\n            for (let i = 0; i < dataRow; i++) {\n                data.push({\n                    rowKey: i,\n                    name: Mock.Random.name(),\n                    sex: Mock.Random.boolean() ? 1 : 2,\n                    profession: PROFESSIONS[Mock.Random.natural(0, 5)],\n                    proficiency: Mock.Random.natural(5, 85),\n                    skills: Mock.Random.natural(0, 3),\n                    address: Mock.Random.county(true),\n                    status: Mock.Random.natural(0, 2),\n                });\n            }\n\n            this.sourceData = data;\n            this.resetTableData();\n        },\n    },\n    created() {\n        this.initSourceData();\n    },\n    mounted() {\n        this.loadingInstance = this.$veLoading({\n            target: document.querySelector(\"#demo-loading-container\"),\n            // 等同于\n            // target:\"#loading-container\"\n            name: \"grid\",\n        });\n    },\n    destroyed() {\n        //this.switchThemeMix(\"theme-default\");\n    },\n};\n</script>\n<style lang=\"less\">\n.normal-data-grid {\n    margin: 10px 0;\n    padding: 0 100px;\n    .operation {\n        margin: 10px 0;\n\n        .operation-item {\n            height: 50px;\n            line-height: 50px;\n        }\n    }\n\n    .table-list {\n        // demo sex field\n        .demo-sex {\n            &.icon-male {\n                color: #91d5ff !important;\n            }\n\n            &.icon-female {\n                color: #ffadd2 !important;\n            }\n        }\n\n        // proficiency filed custom cell style\n        .table-body-cell-proficiency {\n            padding: 0 !important;\n        }\n        // proficiency filed\n        .proficiency-span-container {\n            height: 100%;\n            text-align: left;\n            .proficiency-span {\n                height: 100%;\n                display: inline-flex;\n                align-items: center;\n                padding-left: 10px;\n                font-weight: bold;\n                color: #555;\n\n                &.demo-blue {\n                    background-color: RGBA(24, 144, 255, 0.7);\n                }\n                &.demo-orange {\n                    background-color: RGBA(255, 179, 0, 0.7);\n                }\n                &.demo-red {\n                    background-color: RGBA(244, 93, 81, 0.7);\n                }\n            }\n        }\n\n        // skills\n        .skill-span {\n            display: inline-block;\n            margin-right: 5px;\n            padding: 3px 8px;\n            border-radius: 4px;\n            color: #333;\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./normal-data-grid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./normal-data-grid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./normal-data-grid.vue?vue&type=template&id=0d75eb73&\"\nimport script from \"./normal-data-grid.vue?vue&type=script&lang=js&\"\nexport * from \"./normal-data-grid.vue?vue&type=script&lang=js&\"\nimport style0 from \"./normal-data-grid.vue?vue&type=style&index=0&id=0d75eb73&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"spreadsheet\"},[_c('ve-table',{staticStyle:{\"word-break\":\"break-word\"},attrs:{\"fixed-header\":\"\",\"scroll-width\":2000,\"max-height\":500,\"border-y\":\"\",\"columns\":_vm.columns,\"table-data\":_vm.tableData,\"row-key-field-name\":\"rowKey\",\"virtual-scroll-option\":_vm.virtualScrollOption,\"cell-autofill-option\":_vm.cellAutofillOption,\"edit-option\":_vm.editOption,\"contextmenu-body-option\":_vm.contextmenuBodyOption}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"spreadsheet\">\n        <ve-table\n            style=\"word-break: break-word\"\n            fixed-header\n            :scroll-width=\"2000\"\n            :max-height=\"500\"\n            border-y\n            :columns=\"columns\"\n            :table-data=\"tableData\"\n            row-key-field-name=\"rowKey\"\n            :virtual-scroll-option=\"virtualScrollOption\"\n            :cell-autofill-option=\"cellAutofillOption\"\n            :edit-option=\"editOption\"\n            :contextmenu-body-option=\"contextmenuBodyOption\"\n        />\n    </div>\n</template>\n\n<script>\nconst COLUMN_KEYS = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n];\nexport default {\n    data() {\n        return {\n            // start row index\n            startRowIndex: 0,\n            virtualScrollOption: {\n                // 是否开启\n                enable: true,\n                scrolling: this.scrolling,\n            },\n            cellAutofillOption: {\n                directionX: true,\n                directionY: true,\n                beforeAutofill: ({\n                    direction,\n                    sourceSelectionRangeIndexes,\n                    targetSelectionRangeIndexes,\n                    sourceSelectionData,\n                    targetSelectionData,\n                }) => {},\n                afterAutofill: ({\n                    direction,\n                    sourceSelectionRangeIndexes,\n                    targetSelectionRangeIndexes,\n                    sourceSelectionData,\n                    targetSelectionData,\n                }) => {},\n            },\n            // edit option 可控单元格编辑\n            editOption: {\n                beforeCellValueChange: ({ row, column, changeValue }) => {},\n                afterCellValueChange: ({ row, column, changeValue }) => {},\n            },\n            contextmenuBodyOption: {\n                // callback for all options\n                callback: ({ type, selection }) => {},\n\n                // contextmenus\n                contextmenus: [\n                    {\n                        type: \"INSERT_ROW_ABOVE\",\n                    },\n                    {\n                        type: \"INSERT_ROW_BELOW\",\n                    },\n                    {\n                        type: \"SEPARATOR\",\n                    },\n                    {\n                        type: \"REMOVE_ROW\",\n                    },\n                    {\n                        type: \"SEPARATOR\",\n                    },\n                    {\n                        type: \"HIDE_COLUMN\",\n                    },\n                ],\n            },\n            tableData: [],\n        };\n    },\n    computed: {\n        columns() {\n            let columns = [\n                {\n                    field: \"index\",\n                    key: \"index\",\n                    // is operation column\n                    operationColumn: true,\n                    title: \"#\",\n                    width: 35,\n                    fixed: \"left\",\n                    renderBodyCell: this.renderRowIndex,\n                },\n            ];\n            columns = columns.concat(\n                COLUMN_KEYS.map((keyValue) => {\n                    return {\n                        title: keyValue,\n                        field: keyValue,\n                        key: keyValue,\n                        width: 50,\n                        edit: true,\n                    };\n                }),\n            );\n\n            return columns;\n        },\n    },\n    methods: {\n        // render row index\n        renderRowIndex({ row, column, rowIndex }) {\n            return <span>{rowIndex + this.startRowIndex + 1}</span>;\n        },\n        scrolling({\n            startRowIndex,\n            visibleStartIndex,\n            visibleEndIndex,\n            visibleAboveCount,\n            visibleBelowCount,\n        }) {\n            this.startRowIndex = startRowIndex;\n        },\n        initTableData() {\n            let tableData = [];\n            for (let i = 0; i < 5000; i++) {\n                let dataItem = {\n                    rowKey: i,\n                };\n\n                COLUMN_KEYS.forEach((keyValue) => {\n                    dataItem[keyValue] = \"\";\n                });\n\n                if (i === 1 || i === 3) {\n                    dataItem[\"C\"] = \"YOU\";\n                    dataItem[\"D\"] = \"CAN\";\n                    dataItem[\"E\"] = \"TRY\";\n                    dataItem[\"F\"] = \"ENTER\";\n                    dataItem[\"G\"] = \"SOME\";\n                    dataItem[\"H\"] = \"WORDS\";\n                    dataItem[\"I\"] = \"!!!\";\n                }\n\n                tableData.push(dataItem);\n            }\n\n            this.tableData = tableData;\n        },\n    },\n    created() {\n        this.initTableData();\n    },\n};\n</script>\n<style lang=\"less\">\n.spreadsheet {\n    padding: 0 100px;\n    margin: 30px 0;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spreadsheet.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spreadsheet.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./spreadsheet.vue?vue&type=template&id=e35ab856&\"\nimport script from \"./spreadsheet.vue?vue&type=script&lang=js&\"\nexport * from \"./spreadsheet.vue?vue&type=script&lang=js&\"\nimport style0 from \"./spreadsheet.vue?vue&type=style&index=0&id=e35ab856&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <div class=\"site-demo-container\">\n            <div class=\"demo-title\">\n                <div class=\"demo-title-text\">\n                    {{ currentLocal.demo1.selection }}\n                </div>\n            </div>\n            <NormalDataGrid />\n            <div class=\"demo-title last\">\n                <div class=\"demo-title-text\">\n                    {{ currentLocal.demo2.selection }}\n                </div>\n            </div>\n            <Spreadsheet />\n        </div>\n    </div>\n</template>\n\n<script>\nimport locale from \"../comp/locale\";\nimport I18nMixins from \"../comp/mixins/i18n-mixins\";\nimport NormalDataGrid from \"./normal-data-grid.vue\";\nimport Spreadsheet from \"./spreadsheet.vue\";\nexport default {\n    name: \"demo\",\n    components: {\n        NormalDataGrid,\n        Spreadsheet,\n    },\n    mixins: [I18nMixins],\n    data() {\n        return {};\n    },\n    computed: {\n        // current local\n        currentLocal() {\n            return locale[this.currentDocLang][\"completeDemo\"];\n        },\n    },\n};\n</script>\n<style lang=\"less\">\n.site-demo-container {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    margin-top: 62px;\n    padding: 10px 0;\n\n    .demo-title {\n        display: flex;\n        height: 80px;\n        align-items: center;\n        // background: #1890ffb3;\n        font-size: 30px;\n        padding: 0 100px;\n        font-weight: bold;\n        color: #555;\n\n        .demo-title-text {\n            display: inline;\n            padding: 0 8px;\n            border-left: 4px solid #555;\n        }\n\n        &.last {\n            margin-top: 50px;\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=07ac5491&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=07ac5491&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./spreadsheet.vue?vue&type=style&index=0&id=e35ab856&prod&lang=less&\""],"sourceRoot":""}