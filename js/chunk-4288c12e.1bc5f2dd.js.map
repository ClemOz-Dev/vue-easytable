{"version":3,"sources":["webpack:///./src/comp/api-tpl.vue?ac74","webpack:///src/comp/api-tpl.vue","webpack:///./src/comp/api-tpl.vue?2b92","webpack:///./src/comp/api-tpl.vue","webpack:///./src/comp/api-tpl.vue?2347","webpack:///./src/docs/zh/ve-table/api/db.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","getAnchor","_v","_s","desc","columns","cloneTable","expandOption","cellSelectionOption","staticRenderFns","component","columnsType1","key","field","title","width","align","type","renderBodyCell","h","row","column","rowIndex","param","optionalVal","default","columnsType2","name","db","table","data","expandId","filterProps","filterCustomProps","ellipsisProps","instanceMethods","checkboxOption","radioOption","virtualScrollOption","sortOption","cellSpanOption","eventCustomOption","columnHiddenOption","cellStyleOption","rowStyleOption","editOption","contextmenuHeaderOption","contextmenuBodyOption","cellAutofillOption","clipboardOption","columnWidthResizeOption"],"mappings":"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","file":"js/chunk-4288c12e.1bc5f2dd.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"api-tpl\"},[_c('anchor',{attrs:{\"is-edit\":false,\"label\":_vm.getAnchor}}),_c('div',{staticClass:\"api-tpl-desc\"},[_vm._v(_vm._s(_vm.desc))]),_c('ve-table',{staticClass:\"tpl-table\",attrs:{\"columns\":_vm.columns,\"table-data\":_vm.cloneTable,\"border-around\":true,\"border-x\":true,\"border-y\":false,\"row-key-field-name\":\"__key__\",\"expand-option\":_vm.expandOption,\"cell-selection-option\":_vm.cellSelectionOption}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"api-tpl\">\r\n        <anchor :is-edit=\"false\" :label=\"getAnchor\" />\r\n        <div class=\"api-tpl-desc\">{{ desc }}</div>\r\n        <ve-table\r\n            class=\"tpl-table\"\r\n            :columns=\"columns\"\r\n            :table-data=\"cloneTable\"\r\n            :border-around=\"true\"\r\n            :border-x=\"true\"\r\n            :border-y=\"false\"\r\n            row-key-field-name=\"__key__\"\r\n            :expand-option=\"expandOption\"\r\n            :cell-selection-option=\"cellSelectionOption\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"api-tpl\",\r\n    props: {\r\n        desc: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        anchor: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        tableData: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        columns: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        expandOption: {\r\n            type: Object,\r\n            default: function () {\r\n                return null;\r\n            },\r\n        },\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            cellSelectionOption: {\r\n                // default true\r\n                enable: false,\r\n            },\r\n            cloneTable: [],\r\n        };\r\n    },\r\n    computed: {\r\n        getAnchor() {\r\n            return this.anchor ? this.anchor : this.desc;\r\n        },\r\n    },\r\n    watch: {\r\n        // auto create row key\r\n        tableData: {\r\n            handler: function (val) {\r\n                if (val) {\r\n                    this.cloneTable = val.map((item, index) => {\r\n                        item.__key__ = index;\r\n                        return item;\r\n                    });\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.api-tpl {\r\n    margin-bottom: 30px;\r\n    .api-tpl-desc {\r\n        height: 30px;\r\n    }\r\n\r\n    .tpl-table {\r\n        td,\r\n        th {\r\n            color: #5e6d82 !important;\r\n            font-size: 14px;\r\n            code {\r\n                display: inline-block;\r\n                background: #f7f7f7;\r\n                font-family: Consolas, Monaco, Andale Mono, Ubuntu Mono,\r\n                    monospace;\r\n                margin: 0 3px;\r\n                padding: 1px 5px;\r\n                border-radius: 3px;\r\n                color: #666;\r\n                border: 1px solid #eee;\r\n            }\r\n        }\r\n\r\n        td:first-child {\r\n            code {\r\n                margin: 0;\r\n                padding: 2 px 6 px;\r\n                color: #1989fa;\r\n                font-weight: 600;\r\n                font-size: 11px;\r\n                background-color: rgba(25, 137, 250, 0.1);\r\n                border-radius: 20 px;\r\n            }\r\n        }\r\n\r\n        td {\r\n            .expand {\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api-tpl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api-tpl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./api-tpl.vue?vue&type=template&id=624cf736&\"\nimport script from \"./api-tpl.vue?vue&type=script&lang=js&\"\nexport * from \"./api-tpl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./api-tpl.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./api-tpl.vue?vue&type=style&index=0&lang=less&\"","// 列配置类型1\nconst columnsType1 = [\n    {\n        key: \"a\",\n        field: \"param\",\n        title: \"参数\",\n        width: \"10%\",\n        align: \"left\",\n        type: \"expand\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.param}></span>;\n        },\n    },\n    {\n        key: \"b\",\n        field: \"desc\",\n        title: \"说明\",\n        width: \"60%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.desc}></span>;\n        },\n    },\n    {\n        key: \"c\",\n        field: \"type\",\n        title: \"类型\",\n        width: \"10%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.type}></span>;\n        },\n    },\n    {\n        key: \"d\",\n        field: \"optionalVal\",\n        title: \"可选值\",\n        width: \"10%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.optionalVal}></span>;\n        },\n    },\n    {\n        key: \"e\",\n        field: \"default\",\n        title: \"默认值\",\n        width: \"10%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.default}></span>;\n        },\n    },\n];\n\n// 列配置类型2（应用于实例方法）\nconst columnsType2 = [\n    // {\n    //     key: \"a\",\n    //     field: \"param\",\n    //     title: \"参数\",\n    //     width: \"10%\",\n    //     align: \"left\",\n    //     type: \"expand\",\n    //     renderBodyCell: ({ row, column, rowIndex }, h) => {\n    //         return <span domPropsInnerHTML={row.param}></span>;\n    //     },\n    // },\n    {\n        key: \"b\",\n        field: \"name\",\n        title: \"方法名\",\n        width: \"15%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.name}></span>;\n        },\n    },\n    {\n        key: \"c\",\n        field: \"desc\",\n        title: \"说明\",\n        width: \"65%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.desc}></span>;\n        },\n    },\n    {\n        key: \"d\",\n        field: \"param\",\n        title: \"参数\",\n        width: \"20%\",\n        align: \"left\",\n        renderBodyCell: ({ row, column, rowIndex }, h) => {\n            return <span domPropsInnerHTML={row.param}></span>;\n        },\n    },\n];\n\nexport const db = {\n    // table props option\n    table: {\n        data: [\n            {\n                param: \"tableData\",\n                desc: \"表格数据\",\n                type: \"<code>Array</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"footerData\",\n                desc: \"表格footer 汇总数据，数据结构和 <code>tableData</code> 一致\",\n                type: \"<code>Array</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"columns\",\n                desc: `列配置，具体项见下表 columns 配置`,\n                type: `<code>Array</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"showHeader\",\n                desc: `是否展示表头`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"fixedHeader\",\n                desc: \"是否固定表头，默认启用。需要和 `maxHeight`结合使用\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"fixedFooter\",\n                desc: \"是否固定footer 汇总，默认启用。需要和 `maxHeight`结合使用\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"scrollWidth\",\n                desc: \"表格滚动区域的宽（开始出滚动条的宽度）。<code>Number</code>指定像素；<code>String</code>指定百分比\",\n                type: \"<code>Number</code>、<code>String</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"maxHeight\",\n                desc: \"表格的最大高度。<code>Number</code>指定像素；<code>String</code>指定百分比。用于“固定头”或“虚拟滚动”功能\",\n                type: \"<code>Number</code>、<code>String</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"rowKeyFieldName\",\n                desc: \"指定 row key 的字段名称。用于行展开、行单选、行多选、行点击高亮、虚拟滚动\",\n                type: \"<code>String</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"borderAround\",\n                desc: \"是否展示表格外边框\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"borderX\",\n                desc: \"是否展示列横向边框\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"borderY\",\n                desc: \"是否展示列纵向边框\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"cellSpanOption\",\n                desc: \"单元格合并配置，具体见下表 cellSpanOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"columnHiddenOption\",\n                desc: \"列隐藏配置，具体见下表 columnHiddenOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"cellStyleOption\",\n                desc: \"单元格样式配置，具体见下表 cellStyleOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"rowStyleOption\",\n                desc: \"行样式配置，具体见下表 rowStyleOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"expandOption\",\n                desc: \"行展开配置，具体见下表 expandOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"checkboxOption\",\n                desc: \"行多选配置，具体见下表 checkboxOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"radioOption\",\n                desc: \"行单选配置，具体见下表 radioOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"virtualScrollOption\",\n                desc: \"虚拟滚动配置，建议需要一次性展示1000条以上使用。具体见下表 virtualScrollOption 配置。\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"sortOption\",\n                desc: \"排序配置，具体见下表 sortOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"cellSelectionOption\",\n                desc: \"单元格选择配置，具体见下表 cellSelectionOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"editOption\",\n                desc: \"单元格编辑配置，具体见下表 editOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"contextmenuHeaderOption\",\n                desc: \"表格 header 右键菜单配置，具体见下表 contextmenuHeaderOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"contextmenuBodyOption\",\n                desc: \"表格 body 右键菜单配置，具体见下表 contextmenuBodyOption 配置\",\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"eventCustomOption\",\n                desc: `自定义事件配置，具体见下表 eventCustomOption 配置`,\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"cellAutofillOption\",\n                desc: `单元格自动填充配置，具体见下表 cellAutofillOption 配置`,\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"clipboardOption\",\n                desc: `单元格剪贴板配置，具体见下表 clipboardOption 配置`,\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // columns props\n    columns: {\n        data: [\n            {\n                param: \"field\",\n                desc: \"对应列的字段\",\n                type: \"<code>String</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"key\",\n                desc: \"每个列的唯一key值\",\n                type: \"<code>String</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"type\",\n                desc: `当前列类型。 \"expand\"：行展开；\"checkbox\"：行多选；\"radio\"：行单选`,\n                type: \"<code>String</code>\",\n                optionalVal: `\"expand\"、\"checkbox\"、\"radio\"`,\n                default: \"-\",\n            },\n            {\n                param: \"title\",\n                desc: \"列标题\",\n                type: \"<code>String</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"width\",\n                desc: \"<code>Number</code>指定像素；<code>String</code>指定百分比（<a href='#/zh/doc/table/column-width?anchor=chang-wen-ben-po-pi-bu-ju'>指定了也不生效？</a>）\",\n                type: `<code>String</code>、<code>Number</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"align\",\n                desc: \"单元格对齐方式\",\n                type: \"<code>String</code>\",\n                optionalVal: `\"left\"、\"center\"、\"right\"`,\n                default: `\"center\"`,\n            },\n            {\n                param: \"operationColumn\",\n                desc: \"是否是操作列\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: `-`,\n                default: `false`,\n            },\n            {\n                param: \"edit\",\n                desc: \"是否开启列编辑\",\n                type: \"<code>Boolean</code>\",\n                optionalVal: `-`,\n                default: `false`,\n            },\n            {\n                param: \"sortBy\",\n                desc: `排序规则。<br>1、<code>sortBy=\"\"</code>：允许排序但无排序规则；<br>2、<code>sortBy=\"asc\"</code>：默认当前列升序；<br>3、<code>sortBy=\"desc\"</code>：默认当前列降序；`,\n                type: \"<code>String</code>\",\n                optionalVal: `\"\"、\"desc\"、\"asc\"`,\n                default: `\"\"`,\n            },\n            {\n                param: \"renderBodyCell\",\n                desc: `1、表体自定义单元格渲染函数。jsx 语法,书写和模板语法接近。\\r2、参数信息。<code>row</code>:当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引、<code>h</code>：createElement 函数的别名<br>3、更多 jsx 知识请参考<a href=\"https://vuejs.org/v2/guide/render-function.html#JSX\">Vue.js 官方文档</a>`,\n                type: `<code>Function({row,column,rowIndex},h):VNode</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"renderHeaderCell\",\n                desc: `1、表头自定义单元格渲染函数。用法同<code>renderBodyCell</code>。\\r2、参数信息。<code>column</code>:当前列配置、<code>h</code>：createElement 函数的别名`,\n                type: \"<code>Function({ column },h):VNode</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"renderFooterCell\",\n                desc: `1、footer汇总 自定义单元格渲染函数。\\r2、参数信息。<code>row</code>:当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引、<code>h</code>：createElement 函数的别名<br>3、更多 jsx 知识请参考<a href=\"https://vuejs.org/v2/guide/render-function.html#JSX\">Vue.js 官方文档</a>`,\n                type: `<code>Function({row,column,rowIndex},h):VNode</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"<span class='expand'>ellipsis</span>\",\n                desc: `单元格省略配置。`,\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n                expandId: 49,\n            },\n            {\n                param: \"<span class='expand'>filter</span>\",\n                desc: `筛选配置。`,\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n                expandId: 50,\n            },\n            {\n                param: \"<span class='expand'>filterCustom</span>\",\n                desc: `筛选自定义配置。`,\n                type: \"<code>Object</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n                expandId: 55,\n            },\n        ],\n        columns: columnsType1,\n        //column filter props\n        filterProps: {\n            data: [\n                {\n                    param: \"filterList\",\n                    desc: `1、筛选条件。<br>2、包含label、value、selected 3 个属性，形如：<code>[{ value: 0, label: \"1900-05-20\", selected: false }]</code>`,\n                    type: \"<code>Array</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n                {\n                    param: \"isMultiple\",\n                    desc: `开启筛选项多选。<br>`,\n                    type: \"<code>Boolean</code>\",\n                    optionalVal: \"-\",\n                    default: \"false\",\n                },\n                {\n                    param: \"filterConfirm\",\n                    desc: `1、筛选确认函数。<br>2、接收1个参数，<code>filterList</code>：筛选条件`,\n                    type: \"<code>Function({filterList})</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n                {\n                    param: \"filterReset\",\n                    desc: `1、筛选重置函数<br>2、接收1个参数，<code>filterList</code>：筛选条件`,\n                    type: \"<code>Function({filterList})</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n                {\n                    param: \"filterIcon\",\n                    desc: `1、filter 自定义图标渲染函数。<br>2、参数信息。h：createElement 函数的别名`,\n                    type: \"<code>Function(h):VNode</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n                {\n                    param: \"maxHeight\",\n                    desc: `1、筛选框的最大高度。不包含操作按钮的高度`,\n                    type: \"<code>Number</code>\",\n                    optionalVal: \"-\",\n                    default: \"1000\",\n                },\n                {\n                    param: \"beforeVisibleChange({nextVisible})\",\n                    desc: `filter 面板显示或者隐藏之前的回调方法，返回<code>false</code>则阻止显示或隐藏`,\n                    type: \"<code>Function</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n            ],\n            columns: columnsType1,\n        },\n        //column filter custom props\n        filterCustomProps: {\n            data: [\n                {\n                    param: \"render\",\n                    desc: `1、渲染函数。<br>2、渲染函数接收的参数，showFn:显示filter 函数、closeFn:关闭filter的函数、<code>h</code>：createElement 函数的别名`,\n                    type: \"<code>Function({showFn,closeFn},h):VNode</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n                {\n                    param: \"filterIcon\",\n                    desc: `1、filter 自定义图标渲染函数。<br>2、参数信息。h：createElement 函数的别名`,\n                    type: \"<code>Function(h):VNode</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n                {\n                    param: \"beforeVisibleChange({nextVisible})\",\n                    desc: `filter 面板显示或者隐藏之前的回调方法，返回<code>false</code>则阻止显示或隐藏`,\n                    type: \"<code>Function</code>\",\n                    optionalVal: \"-\",\n                    default: \"-\",\n                },\n            ],\n            columns: columnsType1,\n        },\n        // ellipsis\n        ellipsisProps: {\n            data: [\n                {\n                    param: \"lineClamp\",\n                    desc: `多少行开始省略`,\n                    type: \"<code>Number</code>\",\n                    optionalVal: \"-\",\n                    default: \"1\",\n                },\n                {\n                    param: \"showTitle\",\n                    desc: `是否鼠标悬浮，展示title`,\n                    type: \"<code>Boolean</code>\",\n                    optionalVal: \"-\",\n                    default: \"true\",\n                },\n            ],\n            columns: columnsType1,\n        },\n    },\n\n    // instance methods\n    instanceMethods: {\n        data: [\n            {\n                name: \"scrollTo\",\n                desc: `使表格滚动到指定的位置 <a href='#/zh/doc/table/instance-methods?anchor=scrollto-gun-dong-fang-fa'>参考示例</a>`,\n                param: \"参考<a href='https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollTo'> MDN scrollTo</a>\",\n            },\n            {\n                name: \"scrollToColKey\",\n                desc: `将指定的列显示在可视区域 <a href='#/zh/doc/table/instance-methods?anchor=scrolltocolkey-lie-gun-dong-fang-fa'>参考示例</a>`,\n                param: \"{ rowKey, colKey }\",\n            },\n            {\n                name: \"scrollToRowKey\",\n                desc: `将表格滚动到行为rowKey的位置 <a href='#/zh/doc/table/instance-methods?anchor=scrolltorowkey-gun-dong-fang-fa'>参考示例</a>`,\n                param: \"{rowKey}\",\n            },\n            {\n                name: \"setHighlightRow\",\n                desc: `设置高亮的行 <a href='#/zh/doc/table/row-style?anchor=row-click-highlight'>参考示例</a>`,\n                param: \"{rowKey}\",\n            },\n            {\n                name: \"startEditingCell\",\n                desc: `开始单元格编辑  <a href='#/zh/doc/table/cell-edit?anchor=ke-kong-bian-ji'>参考示例</a>`,\n                param: \"{rowKey,colKey,defaultValue}\",\n            },\n            {\n                name: \"stopEditingCell\",\n                desc: `停止单元格编辑`,\n                param: \"-\",\n            },\n            {\n                name: \"hideColumnsByKeys\",\n                desc: `隐藏列  <a href='#/zh/doc/table/column-hidden?anchor=shi-li-fang-fa'>参考示例</a>`,\n                param: \"keys\",\n            },\n            {\n                name: \"showColumnsByKeys\",\n                desc: `显示列  <a href='#/zh/doc/table/column-hidden?anchor=shi-li-fang-fa'>参考示例</a>`,\n                param: \"keys\",\n            },\n            {\n                name: \"setCellSelection\",\n                desc: `单元格选中  <a href='#/zh/doc/table/cell-selection?anchor=dan-xuan-shi-li-fang-fa'>参考示例</a>`,\n                param: \"{ rowKey, colKey }\",\n            },\n            {\n                name: \"setAllCellSelection\",\n                desc: `单元格全选  <a href='#/en/doc/table/cell-selection?anchor=qu-yu-xuan-ze-shi-li-fang-fa'>参考示例</a>`,\n                param: \"-\",\n            },\n            {\n                name: \"setRangeCellSelection\",\n                desc: `区域单元格选中  <a href='#/zh/doc/table/cell-selection?anchor=qu-yu-xuan-ze-shi-li-fang-fa'>参考示例</a>`,\n                param: \"{ startRowKey,startColKey,endRowKey,endColKey,isScrollToStartCell }\",\n            },\n            {\n                name: \"getRangeCellSelection\",\n                desc: `获取当前选择区域的信息。返回所选区域索引和key信息`,\n                param: \"-\",\n            },\n        ],\n        columns: columnsType2,\n    },\n\n    // 可展开配置\n    expandOption: {\n        data: [\n            {\n                param: \"expandable\",\n                desc: `1、是否允许展开行渲染函数。返回布尔值。\\r2、渲染函数接收三个参数，<code>row</code>:当前行数据、<code>column</code>:可展开列配置、<code>rowIndex</code>:行索引。`,\n                type: \"<code>Function({row,column,rowIndex})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"render\",\n                desc: `1、渲染函数。\\r2、渲染函数接收的参数，row:当前行数据、column:可展开列配置、rowIndex:行索引、<code>h</code>：createElement 函数的别名`,\n                type: \"<code>Function({row,column,rowIndex},h):VNode</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"defaultExpandAllRows\",\n                desc: `是否默认展开全部行`,\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"defaultExpandedRowKeys\",\n                desc: `默认展开的行key。<code>defaultExpandAllRows</code> 参数和<code>defaultExpandedRowKeys</code> 参数同时存在时，优先使用<code>defaultExpandAllRows</code>`,\n                type: \"<code>String[]</code>、<code>Number[]</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"expandedRowKeys\",\n                desc: `展开行的可控属性，设置后属性后 <code>defaultExpandAllRows</code>和<code>defaultExpandedRowKeys</code>属性将会失效。具体见相关实例`,\n                type: \"<code>String[]</code>、<code>Number[]</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"beforeExpandRowChange\",\n                desc: `1、展开切换前的函数，如果返回false 则中断执行。\\r2、函数接收三个参数，<code>beforeExpandedRowKeys</code>:改变前所有展开的key，<code>row</code>:当前的行数据，<code>rowIndex</code>行号`,\n                type: \"<code>Function({beforeExpandedRowKeys,row,rowIndex})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterExpandRowChange\",\n                desc: `1、展开切换后的函数。\\r2、函数接收三个参数，<code>afterExpandedRowKeys</code>:改变后所有展开的key，<code>row</code>:当前的行数据，<code>rowIndex</code>行号`,\n                type: \"<code>Function({afterExpandedRowKeys,row,rowIndex})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"trigger\",\n                desc: `展开行事件触发类型。\\r<code>icon</code>：点击展开小图标；<code>cell</code>：点击单元格;<code>row</code>:点击行`,\n                type: \"<code>String</code>\",\n                optionalVal: `\"icon\"、\"cell\"、\"row\"`,\n                default: `\"icon\"`,\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 行多选配置\n    checkboxOption: {\n        data: [\n            {\n                param: \"defaultSelectedAllRows\",\n                desc: `是否默认全部选中`,\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"defaultSelectedRowKeys\",\n                desc: `默认选中的行key`,\n                type: \"<code>String[]</code>、<code>Number[]</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"disableSelectedRowKeys\",\n                desc: `禁止勾选或者禁止取消勾选的行key`,\n                type: \"<code>String[]</code>、<code>Number[]</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"selectedRowKeys\",\n                desc: `选中行的可控属性，设置后 <code>defaultSelectedAllRows</code> 和 <code>defaultSelectedRowKeys</code> 属性将会失效。具体参考示例`,\n                type: \"<code>String[]</code>、<code>Number[]</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"selectedRowChange\",\n                desc: `行选中的改变事件。事件接收 3 个参数，row:当前行数据，<code>isSelected</code>当前行是否选中，<code>selectedRowKeys</code>所有选中的 rowKey 信息`,\n                type: \"<code>Function({row, isSelected, selectedRowKeys})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"selectedAllChange\",\n                desc: `全选改变事件。事件接收 2 个参数，<code>isSelected</code> 是否全选。<code>selectedRowKeys</code>所有选中的 rowKey 信息`,\n                type: `<code>Function({isSelected, selectedRowKeys})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"hideSelectAll\",\n                desc: `是否隐藏全选按钮`,\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 行单选配置\n    radioOption: {\n        data: [\n            {\n                param: \"defaultSelectedRowKey\",\n                desc: `默认选中的行key`,\n                type: \"<code>String</code>、<code>Number</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"disableSelectedRowKeys\",\n                desc: `禁止勾选或者禁止取消勾选的行key`,\n                type: \"<code>String[]</code>、<code>Number[]</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"selectedRowKey\",\n                desc: `选中行的可控属性，设置后 <code>defaultSelectedRowKey</code>属性将会失效。具体参考示例`,\n                type: \"<code>String</code>、<code>Number</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"selectedRowChange\",\n                desc: `行选中的改变事件。事件接收 1 个参数，row:当前行数据`,\n                type: \"<code>Function({row})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 虚拟滚动设置\n    virtualScrollOption: {\n        data: [\n            {\n                param: \"enable\",\n                desc: `是否开启虚拟滚动`,\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"minRowHeight\",\n                desc: `最小行高（px）。值越小，可视化范围渲染的数据越多，具体根据实际最小高度设置即可`,\n                type: \"<code>Number</code>\",\n                optionalVal: \"-\",\n                default: \"40\",\n            },\n            {\n                param: \"scrolling\",\n                desc: `滚动回调事件。<br><code>startRowIndex</code>为当前开始渲染的行号，<code>visibleStartIndex</code>为当前可见区域的开始行号，<code>visibleEndIndex</code>为当前可见区域的结束行号，<code>visibleAboveCount</code>为当前可见区域上方渲染的数量，<code>visibleBelowCount</code>为当前可见区域下方渲染的数量`,\n                type: \"Function({startRowIndex,visibleStartIndex,visibleEndIndex,visibleAboveCount,visibleBelowCount})\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"bufferScale\",\n                desc: `缓冲倍数。1个缓冲倍数为当前表格高度内的行数量`,\n                type: \"<code>Number</code>\",\n                optionalVal: \"-\",\n                default: \"1\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 排序设置\n    sortOption: {\n        data: [\n            {\n                param: \"multipleSort\",\n                desc: `是否开启多字段排序`,\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"sortAlways\",\n                desc: `是否开启排序只在升序和降序切换`,\n                type: \"<code>Boolean</code>\",\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"sortChange\",\n                desc: `排序改变事件。事件接收 1 个参数对象，列的排序规则`,\n                type: \"<code>Function({row})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 单元格合并配置\n    cellSpanOption: {\n        data: [\n            {\n                param: \"bodyCellSpan\",\n                desc: `1、body单元格合并函数<br>2、参数信息。<code>row</code>:当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引`,\n                type: `<code>Function({row,column,rowIndex})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"footerCellSpan\",\n                desc: `1、footer单元格合并函数<br>2、参数信息。<code>row</code>:当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引`,\n                type: `<code>Function({row,column,rowIndex})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 事件自定义配置\n    eventCustomOption: {\n        data: [\n            {\n                param: \"bodyRowEvents\",\n                desc: `1、body 行自定义事件，返回需要自定义的事件。<br>2、接收2个参数。<code>row</code>当前行数据、<code>rowIndex</code>:行索引<br>3、支持自定义事件有 click、dblclick、contextmenu、mouseenter、mouseleave`,\n                type: \"<code>Function({row,rowIndx})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"bodyCellEvents\",\n                desc: `1、body 列自定义事件，返回需要自定义的事件。<br>2、接收3个参数。<code>row</code>当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引<br>3、支持自定义事件有 click、dblclick、contextmenu、mouseenter、mouseleave`,\n                type: \"<code>Function({row,column,rowIndx})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"headerRowEvents\",\n                desc: `1、header 行自定义事件，返回需要自定义的事件。<br>2、接收1个参数。<code>rowIndex</code>：表头行索引<br>3、支持自定义事件有 click、dblclick、contextmenu、mouseenter、mouseleave<br>`,\n                type: \"<code>Function({rowIndex})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"headerCellEvents\",\n                desc: `1、header 列自定义事件，返回需要自定义的事件。<br>2、接收2个参数。<code>column</code>:当前列配置、<code>rowIndex</code>:行索引<br>3、支持自定义事件有 click、dblclick、contextmenu、mouseenter、mouseleave`,\n                type: \"<code>Function({column,rowIndx})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"footerRowEvents\",\n                desc: `1、footer 行自定义事件，返回需要自定义的事件。<br>2、接收2个参数。<code>row</code>当前行数据、<code>rowIndex</code>:行索引<br>3、支持自定义事件有 click、dblclick、contextmenu、mouseenter、mouseleave`,\n                type: \"<code>Function({row,rowIndx})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"footerCellEvents\",\n                desc: `1、footer 列自定义事件，返回需要自定义的事件。<br>2、接收3个参数。<code>row</code>当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引<br>3、支持自定义事件有 click、dblclick、contextmenu、mouseenter、mouseleave`,\n                type: \"<code>Function({row,column,rowIndx})</code>\",\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 列隐藏配置\n    columnHiddenOption: {\n        data: [\n            {\n                param: \"defaultHiddenColumnKeys <code>v2.11.0</code>\",\n                desc: `设置默认隐藏的列`,\n                type: `<code>Array</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 单元格样式配置\n    cellStyleOption: {\n        data: [\n            {\n                param: \"bodyCellClass\",\n                desc: `1、表体单元格样式\\r2、接收3个参数，<code>row</code>:当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引`,\n                type: `<code>Function({row,column,rowIndex})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"headerCellClass\",\n                desc: `1、表头单元格样式\\r2、接收2个参数，<code>column</code>:当前列配置、<code>rowIndex</code>:行索引`,\n                type: `<code>Function({column,rowIndex})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"footerCellClass\",\n                desc: `1、footer汇总 单元格样式\\r2、接收3个参数，<code>row</code>:当前行数据、<code>column</code>:当前列配置、<code>rowIndex</code>:行索引`,\n                type: `<code>Function({row,column,rowIndex})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 行样式配置\n    rowStyleOption: {\n        data: [\n            {\n                param: \"hoverHighlight\",\n                desc: `是否开启行hover 背景高亮`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"clickHighlight\",\n                desc: `是否开启行click 背景高亮`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"stripe\",\n                desc: `是否开启斑马纹`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 单元格编辑配置\n    editOption: {\n        data: [\n            {\n                param: \"beforeCellValueChange\",\n                desc: `单元格内容改变前的回调方法。<code>row</code>当前行数据，<code>column</code>当前列信息，<code>changeValue</code>单元格改变的值。如果返回false，将会阻止编辑，单元格还原为编辑前状态`,\n                type: `<code>Function({ row, column,changeValue })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterCellValueChange\",\n                desc: `单元格内容改变后的回调方法。<code>row</code>当前行数据，<code>column</code>当前列信息，<code>changeValue</code>单元格改变的值`,\n                type: `<code>Function({ row, column,changeValue })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"cellValueChange\",\n                desc: `将被移除`,\n                type: `<code>Function({ row, column })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 表格 header 右键菜单配置\n    contextmenuHeaderOption: {\n        data: [\n            {\n                param: \"beforeShow\",\n                desc: `菜单显示之前的回调事件，你可以在这个阶段改变菜单项信息。<br/><code>isWholeColSelection</code>是否整列选中，<br/><code>selectionRangeKeys </code>当前选中的单元格key信息，<br/><code>selectionRangeIndexes </code>当前选中的单元格索引信息`,\n                type: `<code>Function({ isWholeColSelection, selectionRangeKeys, selectionRangeIndexes })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterMenuClick\",\n                desc: `菜单项被点击的回调，返回 <code>false</code> 将阻止当前右键操作。<br/><code>type</code>菜单类型，<br/><code>selectionRangeKeys </code>当前选中的单元格key信息，<br/><code>selectionRangeIndexes </code>当前选中的单元格索引信息`,\n                type: `<code>Function({ type, selectionRangeKeys, selectionRangeIndexes  })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"contextmenus\",\n                desc: `右键菜单配置项。 <a href='#/zh/doc/base/contextmenu'>右键菜单组件</a>`,\n                type: `<code>Array</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 表格 body 右键菜单配置\n    contextmenuBodyOption: {\n        data: [\n            {\n                param: \"beforeShow\",\n                desc: `菜单显示之前的回调事件，你可以在这个阶段改变菜单项信息。<br/><code>isWholeRowSelection</code>是否整行选中，<br/><code>selectionRangeKeys </code>当前选中的单元格key信息，<br/><code>selectionRangeIndexes </code>当前选中的单元格索引信息`,\n                type: `<code>Function({ isWholeRowSelection, selectionRangeKeys, selectionRangeIndexes })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterMenuClick\",\n                desc: `菜单项被点击的回调，返回 <code>false</code> 将阻止当前右键操作。<br/><code>type</code>菜单类型，<br/><code>selectionRangeKeys </code>当前选中的单元格key信息，<br/><code>selectionRangeIndexes </code>当前选中的单元格索引信息`,\n                type: `<code>Function({ type, selectionRangeKeys, selectionRangeIndexes  })</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"contextmenus\",\n                desc: `右键菜单配置项。 <a href='#/zh/doc/base/contextmenu'>右键菜单组件</a>`,\n                type: `<code>Array</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 单元格选择配置\n    cellSelectionOption: {\n        data: [\n            {\n                param: \"enable\",\n                desc: `是否开启单元格选择`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 单元格自动填充配置\n    cellAutofillOption: {\n        data: [\n            {\n                param: \"directionX\",\n                desc: `是否开启横向填充`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"directionY\",\n                desc: `是否开启纵向填充`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"beforeAutofill\",\n                desc: `单元格自动填充前的回调方法,返回false 则取消自动填充。参数说明：\\r1、<code>direction</code>自动填充的方向\\r2、<code>sourceSelectionRangeIndexes</code>自动填充来源的行和列索引\\r3、<code>targetSelectionRangeIndexes</code>自动填充目标的行和列索引\\r4、<code>sourceSelectionData</code>自动填充来源的数据，超出会自动去除\\r5、<code>targetSelectionData</code>自动填充目标的数据`,\n                type: `<code>Function({\n                        direction,\n                        sourceSelectionRangeIndexes,\n                        targetSelectionRangeIndexes,\n                        sourceSelectionData,\n                        targetSelectionData,\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterAutofill\",\n                desc: `单元格自动填充后的回调方法。参数说明：\\r1、<code>direction</code>自动填充的方向\\r2、<code>sourceSelectionRangeIndexes</code>自动填充来源的行和列索引\\r3、<code>targetSelectionRangeIndexes</code>自动填充目标的行和列索引\\r4、<code>sourceSelectionData</code>自动填充来源的数据，超出会自动去除\\r5、<code>targetSelectionData</code>自动填充目标的数据`,\n                type: `<code>Function({\n                        direction,\n                        sourceSelectionRangeIndexes,\n                        targetSelectionRangeIndexes,\n                        sourceSelectionData,\n                        targetSelectionData,\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 剪贴板配置\n    clipboardOption: {\n        data: [\n            {\n                param: \"copy\",\n                desc: `是否开启单元格复制`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"paste\",\n                desc: `是否开启单元格粘贴`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"cut\",\n                desc: `是否开启单元格剪切`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"cut\",\n                desc: `是否开启单元格删除`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"true\",\n            },\n            {\n                param: \"beforeCopy\",\n                desc: `单元格拷贝前的回调方法,返回false 则取消拷贝。参数说明：\\r1、<code>data</code>拷贝的数据\\r2、<code>selectionRangeIndexes</code>拷贝区域的索引信息\\r3、<code>selectionRangeKeys</code>拷贝区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterCopy\",\n                desc: `单元格拷贝后回调方法。参数说明：\\r1、<code>data</code>拷贝的数据\\r2、<code>selectionRangeIndexes</code>拷贝区域的索引信息\\r3、<code>selectionRangeKeys</code>拷贝区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"beforePaste\",\n                desc: `单元格粘贴前的回调方法,返回false 则取消粘贴。参数说明：\\r1、<code>data</code>粘贴的数据\\r2、<code>selectionRangeIndexes</code>粘贴区域的索引信息\\r3、<code>selectionRangeKeys</code>粘贴区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterPaste\",\n                desc: `单元格粘贴后回调方法。参数说明：\\r1、<code>data</code>粘贴的数据\\r2、<code>selectionRangeIndexes</code>粘贴区域的索引信息\\r3、<code>selectionRangeKeys</code>粘贴区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"beforeCut\",\n                desc: `单元格剪切前的回调方法,返回false 则取消剪切。参数说明：\\r1、<code>data</code>粘贴的数据\\r2、<code>selectionRangeIndexes</code>粘贴区域的索引信息\\r3、<code>selectionRangeKeys</code>粘贴区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterCut\",\n                desc: `单元格剪切后回调方法。参数说明：\\r1、<code>data</code>剪切的数据\\r2、<code>selectionRangeIndexes</code>剪切区域的索引信息\\r3、<code>selectionRangeKeys</code>剪切区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"beforeDelete\",\n                desc: `单元格删除前的回调方法,返回false 则取消删除。参数说明：\\r1、<code>data</code>粘贴的数据\\r2、<code>selectionRangeIndexes</code>粘贴区域的索引信息\\r3、<code>selectionRangeKeys</code>粘贴区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n            {\n                param: \"afterDelete\",\n                desc: `单元格删除后回调方法。参数说明：\\r1、<code>data</code>删除的数据\\r2、<code>selectionRangeIndexes</code>删除区域的索引信息\\r3、<code>selectionRangeKeys</code>删除区域的key信息`,\n                type: `<code>Function({\n                    data, selectionRangeIndexes, selectionRangeKeys\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n\n    // 列宽改变配置\n    columnWidthResizeOption: {\n        data: [\n            {\n                param: \"enable\",\n                desc: `是否开启列宽可变`,\n                type: `<code>Boolean</code>`,\n                optionalVal: \"-\",\n                default: \"false\",\n            },\n            {\n                param: \"minWidth\",\n                desc: `可改变列的最小宽度`,\n                type: `<code>Number</code>`,\n                optionalVal: \"-\",\n                default: \"30px\",\n            },\n            {\n                param: \"sizeChange\",\n                desc: `列宽改变后的回调函数。参数说明：\\r1、<code>column</code>宽度改变的列信息\\r2、<code>differWidth</code>列宽改变后差异的宽度\\r3、<code>columnWidth</code>列宽改变后的宽度`,\n                type: `<code>Function({\n                    column,\n                    differWidth,\n                    columnWidth,\n})</code>`,\n                optionalVal: \"-\",\n                default: \"-\",\n            },\n        ],\n        columns: columnsType1,\n    },\n};\n"],"sourceRoot":""}